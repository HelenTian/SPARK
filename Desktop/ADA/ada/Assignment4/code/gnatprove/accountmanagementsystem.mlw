(* Module for axiomatizing type "short_short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_short_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type short_short_integer 
 
 function first 
   :int =
  ( -128 )
 
 function last 
   :int =
  127
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = short_short_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "short_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type short_integer 
 
 function first 
   :int =
  ( -32768 )
 
 function last 
   :int =
  32767
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = short_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long_integer 
 
 function first 
   :int =
  ( -9223372036854775808 )
 
 function last 
   :int =
  9223372036854775807
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "long_long_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_long_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type long_long_integer 
 
 function first 
   :int =
  ( -9223372036854775808 )
 
 function last 
   :int =
  9223372036854775807
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = long_long_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "natural", created in Gnat2Why.Types.Translate_Type *)
module Standard__natural
 use import "_gnatprove_standard".Main
 use import "int".Int

 type natural 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = natural, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "positive", created in Gnat2Why.Types.Translate_Type *)
module Standard__positive
 use import "_gnatprove_standard".Main
 use import "int".Int

 type positive 
 
 function first 
   :int =
  1
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = positive, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "short_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__short_float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type short_float 
 
 function first 
   :real =
  (-.340282346638528859811704183484516925440.0)
 
 function last 
   :real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = short_float, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "float", created in Gnat2Why.Types.Translate_Type *)
module Standard__float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type float 
 
 function first 
   :real =
  (-.340282346638528859811704183484516925440.0)
 
 function last 
   :real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = float, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "long_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type long_float 
 
 function first 
   :real =
  (-.179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 function last 
   :real =
  (179769313486231570814527423731704356798070567525844996598917476803157260780028538760589558632766878171540458953514382464234321326889464182768467546703537516986049910576551282076245490090389328944075868508455133942304583236903222948165808559332123348274797826204144723168738177180919299881250404026184124858368.0)
 
 predicate in_range
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = long_float, 
 function round_real_tmp = Floating.round_double, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "long_long_float", created in Gnat2Why.Types.Translate_Type *)
module Standard__long_long_float
 use import "_gnatprove_standard".Main
 use import "real".RealInfix

 type long_long_float 
 
 function first 
   :real =
  (-.1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 function last 
   :real =
  (1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 predicate in_range
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = long_long_float, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "character", created in Gnat2Why.Types.Translate_Type *)
module Standard__character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type character 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  255
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wide_character 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  65535
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wide_character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "wide_wide_character", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_character
 use import "_gnatprove_standard".Main
 use import "int".Int

 type wide_wide_character 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = wide_wide_character, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing The array theory associated to type "string", created in Why.Gen.Arrays.Create_Rep_Array_Theory *)
module Array__Int
 use import "_gnatprove_standard".Main
 use import "int".Int

 function index_I1_one 
   :int =
  1
 
 clone export "_gnatprove_standard".Array__1 with
 type I1.t = int, 
 predicate I1.le = Int.(<=), 
 predicate I1.lt = Int.(<), 
 predicate I1.gt = Int.(>), 
 function I1.add = Int.(+), 
 function I1.sub = Int.(-), 
 function I1.one = index_I1_one

end

(* Module for axiomatizing type "string", created in Gnat2Why.Types.Translate_Type *)
module Standard__string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        Standard__integer
 use        Standard__positive
 use        Standard__character
 use        Array__Int

 type component_type  = 
  Standard__character.character
 
 function index_1_id 
   (x : int)  :int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type string  = 
  __t
 
 function to_string 
   (x : Main.__image)  :string
 
 function from_string 
   (x : string)  :Main.__image
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__character.to_rep, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq

end

(* Module for axiomatizing type "wide_string", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Standard__wide_character
 use        Array__Int

 type component_type  = 
  Standard__wide_character.wide_character
 
 function index_1_id 
   (x : int)  :int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type wide_string  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__wide_character.to_rep, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq

end

(* Module for axiomatizing type "wide_wide_string", created in Gnat2Why.Types.Translate_Type *)
module Standard__wide_wide_string
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__positive
 use        Standard__wide_wide_character
 use        Array__Int

 type component_type  = 
  Standard__wide_wide_character.wide_wide_character
 
 function index_1_id 
   (x : int)  :int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__positive.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type wide_wide_string  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Standard__wide_wide_character.to_rep, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq

end

(* Module for axiomatizing type "duration", created in Gnat2Why.Types.Translate_Type *)
module Standard__duration
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main

 type duration 
 
 function first 
   :Main.__fixed =
  ( -9223372036854775808 )
 
 function last 
   :Main.__fixed =
  9223372036854775807
 
 function inv_small 
   :Main.__fixed =
  1000000000
 
 predicate in_range
   (x : Main.__fixed)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Fixed_Point with
 type t = duration, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range, 
 function inv_small = inv_small

end

(* Module for axiomatizing type "integer_8", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_8
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_8 
 
 function first 
   :int =
  ( -128 )
 
 function last 
   :int =
  127
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_8, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "integer_16", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_16
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_16 
 
 function first 
   :int =
  ( -32768 )
 
 function last 
   :int =
  32767
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_16, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "integer_32", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_32
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_32 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_32, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "integer_64", created in Gnat2Why.Types.Translate_Type *)
module Standard__integer_64
 use import "_gnatprove_standard".Main
 use import "int".Int

 type integer_64 
 
 function first 
   :int =
  ( -9223372036854775808 )
 
 function last 
   :int =
  9223372036854775807
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = integer_64, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "universal_integer", created in Gnat2Why.Types.Translate_Type *)
module Standard__universal_integer
 use import "_gnatprove_standard".Main
 use import "int".Int

 type universal_integer 
 
 function first 
   :int =
  ( -9223372036854775808 )
 
 function last 
   :int =
  9223372036854775807
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = universal_integer, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "universal_real", created in Gnat2Why.Types.Translate_Type *)
module Standard__universal_real
 use import "_gnatprove_standard".Main
 use import "real".RealInfix

 type universal_real 
 
 function first 
   :real =
  (-.1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 function last 
   :real =
  (1189731495357231765021263853030970205169063322294624200440323733891737005522970722616410290336528882853545697807495577314427443153670288434198125573853743678673593200706973263201915918282961524365529510646791086614311790632169778838896134786560600399148753433211454911160088679845154866512852340149773037600009125479393966223151383622417838542743917838138717805889487540575168226347659235576974805113725649020884855222494791399377585026011773549180099796226026859508558883608159846900235645132346594476384939859276456284579661772930407806609229102715046085388087959327781622986827547830768080040150694942303411728957777100335714010559775242124057347007386251660110828379119623008469277200965153500208474470792443848545912886723000619085126472111951361467527633519562927597957250278002980795904193139603021470997035276467445530922022679656280991498232083329641241038509239184734786121921697210543484287048353408113042573002216421348917347174234800714880751002064390517234247656004721768096486107994943415703476320643558624207443504424380566136017608837478165389027809576975977286860071487028287955567141404632615832623602762896316173978484254486860609948270867968048078702511858930838546584223040908805996294594586201903766048446790926002225410530775901065760671347200125846406957030257138960983757998926954553052368560758683179223113639519468850880771872104705203957587480013143131444254943919940175753169339392366881856189129931729104252921236835159922322050998001677102784035360140829296398115122877768135706045789343535451696539561254048846447169786893211671087229088082778350518228857646062218739702851655083720992349483334435228984751232753726636066213902281264706234075352071724058665079518217303463782631353393706774901950197841690441824738063162828586857741432581165364040218402724913393320949219498422442730427019873044536620350262386957804682003601447291997123095530057206141866974852846856186514832715974481203121946751686379343096189615107330065552421485195201762858595091051839472502863871632494167613804996319791441870254302706758495192008837915169401581740046711477877201459644461175204059453504764721807975761111720846273639279600339670470037613374509553184150073796412605047923251661354841291884211340823015473304754067072818763503617332908005951896325207071673904547777129682265206225651439919376804400292380903112437912614776255964694221981375146967079446870358004392507659451618379811859392049544036114915310782251072691486979809240946772142727012404377187409216756613634938900451232351668146089322400697993176017805338191849981933008410985993938760292601390911414526003720284872132411955424282101831204216104467404621635336900583664606591156298764745525068145003932941404131495400677602951005962253022823003631473824681059648442441324864573137437595096416168048024129351876204668135636877532814675538798871771836512893947195335061885003267607354388673368002074387849657014576090349857571243045102038730494854256702479339322809110526041538528994849203991091946129912491633289917998094380337879522093131466946149705939664152375949285890960489916121944989986384837022486672249148924678410206183364627416969576307632480235587975245253737035433882960862753427740016333434055083537048507374544819754722228975281083020898682633020285259923084168054539687911418297629988964576482765287504562854924265165217750799516259669229114977788962356670956627138482018191348321687995863652637620978285070099337294396784639879024914514222742527006363942327998483976739987154418554201562244154926653014515504685489258620276085761837129763358761215382565129633538141663949516556000264159186554850057052611431952919918807954522394649627635630178580896692226406235382898535867595990647008385687123810329591926494846250768992258419305480763620215089022149220528069842018350840586938493815498909445461977893029113576516775406232278298314033473276603952231603422824717528181818844304880921321933550869873395861276073670866652375555675803171490108477320096424318780070008797346032906278943553743564448851907191616455141155761939399690767415156402826543664026760095087523945507341556135867933066031744720924446513532366647649735400851967040771103640538150073486891798364049570606189535005089840913826869535090066783324472578712196604415284924840041850932811908963634175739897166596000759487800619164094854338758520657116541072260996288150123144377944008749301944744330784388995701842710004808305012177123560622895076269042856800047718893158089358515593863176652948089031267747029662545110861548958395087796755464137944895960527975209874813839762578592105756284401759349324162148339565350189196811389091843795734703269406342890087805846940352453479398080674273236297887100867175802531561302356064878709259865288416350972529537091114317204887747405539054009425375424119317944175137064689643861517718849867010341532542385911089624710885385808688837777258648564145934262121086647588489260031762345960769508849149662444156604419552086811989770240.0)
 
 predicate in_range
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = universal_real, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for defining the constant "max_userid" defined at measures.ads:7, created in Gnat2Why.Decls.Translate_Constant *)
module Measures__max_userid
 use import "_gnatprove_standard".Main
 use        Standard__integer

 function max_userid "GP_CE_Relevant" 
   :Standard__integer.__split

end

(* Module for axiomatizing type "TuseridB" defined at measures.ads:8, created in Gnat2Why.Types.Translate_Type *)
module Measures__TuseridB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tuseridB 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tuseridB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "userid" defined at measures.ads:8, created in Gnat2Why.Types.Translate_Type *)
module Measures__userid
 use import "_gnatprove_standard".Main
 use import "int".Int

 type userid 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = userid, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for defining the constant "max_bpm" defined at measures.ads:11, created in Gnat2Why.Decls.Translate_Constant *)
module Measures__max_bpm
 use import "_gnatprove_standard".Main
 use        Standard__integer

 function max_bpm "GP_CE_Relevant" 
   :Standard__integer.__split

end

(* Module for axiomatizing type "TbpmB" defined at measures.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Measures__TbpmB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tbpmB 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tbpmB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "bpm" defined at measures.ads:12, created in Gnat2Why.Types.Translate_Type *)
module Measures__bpm
 use import "_gnatprove_standard".Main
 use import "int".Int

 type bpm 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  300
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = bpm, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for defining the constant "max_footsteps" defined at measures.ads:15, created in Gnat2Why.Decls.Translate_Constant *)
module Measures__max_footsteps
 use import "_gnatprove_standard".Main
 use        Standard__integer

 function max_footsteps "GP_CE_Relevant" 
   :Standard__integer.__split

end

(* Module for axiomatizing type "TfootstepsB" defined at measures.ads:16, created in Gnat2Why.Types.Translate_Type *)
module Measures__TfootstepsB
 use import "_gnatprove_standard".Main
 use import "int".Int

 type tfootstepsB 
 
 function first 
   :int =
  ( -2147483648 )
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = tfootstepsB, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "footsteps" defined at measures.ads:16, created in Gnat2Why.Types.Translate_Type *)
module Measures__footsteps
 use import "_gnatprove_standard".Main
 use import "int".Int

 type footsteps 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  100000
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = footsteps, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "TlatitudeB" defined at measures.ads:19, created in Gnat2Why.Types.Translate_Type *)
module Measures__TlatitudeB
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type tlatitudeB 
 
 function first 
   :real =
  (-.340282346638528859811704183484516925440.0)
 
 function last 
   :real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = tlatitudeB, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "latitude" defined at measures.ads:19, created in Gnat2Why.Types.Translate_Type *)
module Measures__latitude
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type latitude 
 
 function first 
   :real =
  (-.90.0)
 
 function last 
   :real =
  (90.0)
 
 predicate in_range
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = latitude, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "TlongitudeB" defined at measures.ads:20, created in Gnat2Why.Types.Translate_Type *)
module Measures__TlongitudeB
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type tlongitudeB 
 
 function first 
   :real =
  (-.340282346638528859811704183484516925440.0)
 
 function last 
   :real =
  (340282346638528859811704183484516925440.0)
 
 predicate in_range
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = tlongitudeB, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "longitude" defined at measures.ads:20, created in Gnat2Why.Types.Translate_Type *)
module Measures__longitude
 use import "_gnatprove_standard".Main
 use import "real".RealInfix
 use        "_gnatprove_standard".Floating

 type longitude 
 
 function first 
   :real =
  (-.180.0)
 
 function last 
   :real =
  (180.0)
 
 predicate in_range
   (x : real)  =
  ( (first <=. x) /\ (x <=. last) )
 
 clone export "ada__model".Static_Floating_Point with
 type t = longitude, 
 function round_real_tmp = Floating.round_single, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "gpslocation" defined at measures.ads:21, created in Gnat2Why.Types.Translate_Type *)
module Measures__gpslocation
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Measures__latitude
 use        Measures__longitude

 type __split_fields  = 
  { rec__lat : Measures__latitude.latitude; rec__long : Measures__longitude.longitude }
 
 type gpslocation  = 
  { __split_fields : __split_fields }
 
 predicate lat__pred
   (a : gpslocation)  =
  true
 
 val rec__lat_ 
   (a : gpslocation)  :Measures__latitude.latitude
  requires { (lat__pred a) }
  ensures { (result = a.__split_fields.rec__lat) }

 
 predicate long__pred
   (a : gpslocation)  =
  true
 
 val rec__long_ 
   (a : gpslocation)  :Measures__longitude.longitude
  requires { (long__pred a) }
  ensures { (result = a.__split_fields.rec__long) }

 
 function bool_eq 
   (a : gpslocation) (b : gpslocation)  :bool =
  (if (( ((Measures__latitude.to_real a.__split_fields.rec__lat) = (Measures__latitude.to_real b.__split_fields.rec__lat)) /\ ((Measures__longitude.to_real a.__split_fields.rec__long) = (Measures__longitude.to_real b.__split_fields.rec__long)) )) then (
   True) else (
   False))
 
 function user_eq 
   (a : gpslocation) (b : gpslocation)  :bool
 
 function value__size 
   :int
 
 function object__size 
   (a : gpslocation)  :int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a  : gpslocation.
   ((object__size a) >= 0))
 
 function dummy 
   :gpslocation

end

(* Module for defining the constant "wearer" defined at emergency.ads:12, created in Gnat2Why.Decls.Translate_Constant *)
module Emergency__contactemergency__wearer
 use import "_gnatprove_standard".Main
 use        Measures__userid

 function wearer "GP_CE_Relevant" 
   :Measures__userid.__split

end

(* Module giving an empty axiom for the entity "wearer" defined at emergency.ads:12, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Emergency__contactemergency__wearer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "vitals" defined at emergency.ads:13, created in Gnat2Why.Decls.Translate_Constant *)
module Emergency__contactemergency__vitals
 use import "_gnatprove_standard".Main
 use        Measures__bpm

 function vitals "GP_CE_Relevant" 
   :Measures__bpm.__split

end

(* Module giving an empty axiom for the entity "vitals" defined at emergency.ads:13, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Emergency__contactemergency__vitals__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "location" defined at emergency.ads:14, created in Gnat2Why.Decls.Translate_Constant *)
module Emergency__contactemergency__location
 use import "_gnatprove_standard".Main
 use        Measures__gpslocation

 function location 
   :Measures__gpslocation.gpslocation

end

(* Module giving an empty axiom for the entity "location" defined at emergency.ads:14, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Emergency__contactemergency__location__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "TusersarrayB" defined at accountmanagementsystem.ads:14, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__TusersarrayB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Array__Int
 use        Measures__TuseridB
 use        Measures__userid

 type component_type  = 
  bool
 
 function index_1_id 
   (x : int)  :int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 type index_base_type = Measures__TuseridB.tuseridB, 
 type index_rep_type = int, 
 function to_rep = Measures__TuseridB.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Measures__TuseridB.in_range, 
 predicate index_dynamic_property = Measures__userid.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tusersarrayB  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Boolean.to_int, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq
 
 clone export "ada__model".Standard_Array_Logical_Op_Axioms with
 type map = Array__Int.map component_type, 
 function get = Array__Int.get, 
 function xorb = Array__Int.xorb, 
 function andb = Array__Int.andb, 
 function orb = Array__Int.orb, 
 function notb = Array__Int.notb, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one

end

(* Module for axiomatizing type "usersarray" defined at accountmanagementsystem.ads:14, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__usersarray
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Array__Int

 type component_type  = 
  bool
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int
 
 type usersarray  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Boolean.to_int, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq
 
 clone export "ada__model".Standard_Array_Logical_Op_Axioms with
 type map = Array__Int.map component_type, 
 function get = Array__Int.get, 
 function xorb = Array__Int.xorb, 
 function andb = Array__Int.andb, 
 function orb = Array__Int.orb, 
 function notb = Array__Int.notb, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one

end

(* Module for axiomatizing type "TuseruserarrayB" defined at accountmanagementsystem.ads:17, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__TuseruserarrayB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int
 use        Measures__TuseridB
 use        Measures__userid

 type component_type  = 
  Measures__userid.userid
 
 function index_1_id 
   (x : int)  :int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 type index_base_type = Measures__TuseridB.tuseridB, 
 type index_rep_type = int, 
 function to_rep = Measures__TuseridB.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Measures__TuseridB.in_range, 
 predicate index_dynamic_property = Measures__userid.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tuseruserarrayB  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Measures__userid.to_rep, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq

end

(* Module for axiomatizing type "useruserarray" defined at accountmanagementsystem.ads:17, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__useruserarray
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int
 use        Measures__userid

 type component_type  = 
  Measures__userid.userid
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int
 
 type useruserarray  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Measures__userid.to_rep, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq

end

(* Module for axiomatizing type "TvitalsarrayB" defined at accountmanagementsystem.ads:20, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__TvitalsarrayB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int
 use        Measures__TuseridB
 use        Measures__userid
 use        Measures__bpm

 type component_type  = 
  Measures__bpm.bpm
 
 function index_1_id 
   (x : int)  :int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 type index_base_type = Measures__TuseridB.tuseridB, 
 type index_rep_type = int, 
 function to_rep = Measures__TuseridB.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Measures__TuseridB.in_range, 
 predicate index_dynamic_property = Measures__userid.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tvitalsarrayB  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Measures__bpm.to_rep, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq

end

(* Module for axiomatizing type "vitalsarray" defined at accountmanagementsystem.ads:20, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__vitalsarray
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int
 use        Measures__bpm

 type component_type  = 
  Measures__bpm.bpm
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int
 
 type vitalsarray  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Measures__bpm.to_rep, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq

end

(* Module for axiomatizing type "TfootstepsarrayB" defined at accountmanagementsystem.ads:21, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__TfootstepsarrayB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int
 use        Measures__TuseridB
 use        Measures__userid
 use        Measures__footsteps

 type component_type  = 
  Measures__footsteps.footsteps
 
 function index_1_id 
   (x : int)  :int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 type index_base_type = Measures__TuseridB.tuseridB, 
 type index_rep_type = int, 
 function to_rep = Measures__TuseridB.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Measures__TuseridB.in_range, 
 predicate index_dynamic_property = Measures__userid.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tfootstepsarrayB  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Measures__footsteps.to_rep, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq

end

(* Module for axiomatizing type "footstepsarray" defined at accountmanagementsystem.ads:21, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__footstepsarray
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int
 use        Measures__footsteps

 type component_type  = 
  Measures__footsteps.footsteps
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int
 
 type footstepsarray  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Measures__footsteps.to_rep, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq

end

(* Module for axiomatizing type "TlocationsarrayB" defined at accountmanagementsystem.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__TlocationsarrayB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int
 use        Measures__TuseridB
 use        Measures__userid
 use        Measures__gpslocation

 type component_type  = 
  Measures__gpslocation.gpslocation
 
 function index_1_id 
   (x : int)  :int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 type index_base_type = Measures__TuseridB.tuseridB, 
 type index_rep_type = int, 
 function to_rep = Measures__TuseridB.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Measures__TuseridB.in_range, 
 predicate index_dynamic_property = Measures__userid.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tlocationsarrayB  = 
  __t

end

(* Module for axiomatizing type "locationsarray" defined at accountmanagementsystem.ads:22, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__locationsarray
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int
 use        Measures__gpslocation

 type component_type  = 
  Measures__gpslocation.gpslocation
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int
 
 type locationsarray  = 
  __t

end

(* Module for defining the constant "memergency" defined at accountmanagementsystem.ads:40, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__memergency
 use import "_gnatprove_standard".Main
 use        Measures__userid

 function memergency "GP_CE_Relevant" 
   :Measures__userid.__split

end

(* Module for axiomatizing type "TpermissionarrayB" defined at accountmanagementsystem.ads:43, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__TpermissionarrayB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Array__Int
 use        Measures__TuseridB
 use        Measures__userid

 type component_type  = 
  bool
 
 function index_1_id 
   (x : int)  :int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 type index_base_type = Measures__TuseridB.tuseridB, 
 type index_rep_type = int, 
 function to_rep = Measures__TuseridB.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Measures__TuseridB.in_range, 
 predicate index_dynamic_property = Measures__userid.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type tpermissionarrayB  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Boolean.to_int, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq
 
 clone export "ada__model".Standard_Array_Logical_Op_Axioms with
 type map = Array__Int.map component_type, 
 function get = Array__Int.get, 
 function xorb = Array__Int.xorb, 
 function andb = Array__Int.andb, 
 function orb = Array__Int.orb, 
 function notb = Array__Int.notb, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one

end

(* Module for axiomatizing type "permissionarray" defined at accountmanagementsystem.ads:43, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__permissionarray
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Array__Int

 type component_type  = 
  bool
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int
 
 type permissionarray  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Boolean.to_int, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq
 
 clone export "ada__model".Standard_Array_Logical_Op_Axioms with
 type map = Array__Int.map component_type, 
 function get = Array__Int.get, 
 function xorb = Array__Int.xorb, 
 function andb = Array__Int.andb, 
 function orb = Array__Int.orb, 
 function notb = Array__Int.notb, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one

end

(* Module for axiomatizing type "emergencyrecord" defined at accountmanagementsystem.ads:57, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__emergencyrecord
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Measures__userid
 use        Measures__bpm
 use        Measures__gpslocation

 type __split_fields  = 
  { rec__user : Measures__userid.userid; rec__vitals : Measures__bpm.bpm; rec__location : Measures__gpslocation.gpslocation }
 
 type emergencyrecord  = 
  { __split_fields : __split_fields }
 
 predicate user__pred
   (a : emergencyrecord)  =
  true
 
 val rec__user_ 
   (a : emergencyrecord)  :Measures__userid.userid
  requires { (user__pred a) }
  ensures { (result = a.__split_fields.rec__user) }

 
 predicate vitals__pred
   (a : emergencyrecord)  =
  true
 
 val rec__vitals_ 
   (a : emergencyrecord)  :Measures__bpm.bpm
  requires { (vitals__pred a) }
  ensures { (result = a.__split_fields.rec__vitals) }

 
 predicate location__pred
   (a : emergencyrecord)  =
  true
 
 val rec__location_ 
   (a : emergencyrecord)  :Measures__gpslocation.gpslocation
  requires { (location__pred a) }
  ensures { (result = a.__split_fields.rec__location) }

 
 function bool_eq 
   (a : emergencyrecord) (b : emergencyrecord)  :bool =
  (if (( ( ((Measures__userid.to_rep a.__split_fields.rec__user) = (Measures__userid.to_rep b.__split_fields.rec__user)) /\ ((Measures__bpm.to_rep a.__split_fields.rec__vitals) = (Measures__bpm.to_rep b.__split_fields.rec__vitals)) ) /\ ((Measures__gpslocation.bool_eq a.__split_fields.rec__location b.__split_fields.rec__location) = True) )) then (
   True) else (
   False))
 
 function user_eq 
   (a : emergencyrecord) (b : emergencyrecord)  :bool
 
 function value__size 
   :int
 
 function object__size 
   (a : emergencyrecord)  :int
 
 axiom value__size_axiom :
  ((value__size ) >= 0)
 
 axiom object__size_axiom :
  (forall a  : emergencyrecord.
   ((object__size a) >= 0))
 
 function dummy 
   :emergencyrecord

end

(* Module for axiomatizing type "TemergencyrecordlistB" defined at accountmanagementsystem.ads:65, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__TemergencyrecordlistB
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__integer
 use        Standard__natural
 use        Array__Int
 use        Accountmanagementsystem__emergencyrecord

 type component_type  = 
  Accountmanagementsystem__emergencyrecord.emergencyrecord
 
 function index_1_id 
   (x : int)  :int =
  x
 
 clone export "ada__model".Unconstr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 type index_base_type = Standard__integer.integer, 
 type index_rep_type = int, 
 function to_rep = Standard__integer.to_rep, 
 function rep_to_int = index_1_id, 
 predicate in_range_base = Standard__integer.in_range, 
 predicate index_dynamic_property = Standard__natural.dynamic_property, 
 predicate index_rep_le = Int.(<=)
 
 type temergencyrecordlistB  = 
  __t

end

(* Module for axiomatizing type "emergencyrecordlist" defined at accountmanagementsystem.ads:65, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__emergencyrecordlist
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int
 use        Accountmanagementsystem__emergencyrecord

 type component_type  = 
  Accountmanagementsystem__emergencyrecord.emergencyrecord
 
 function first 
   :int =
  0
 
 function last 
   :int =
  2147483647
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int
 
 type emergencyrecordlist  = 
  __t

end

(* Module for axiomatizing type "T49s" defined at accountmanagementsystem.ads:75, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__L48s__T49s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t49s 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t49s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T51s" defined at accountmanagementsystem.ads:77, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__L50s__T51s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t51s 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t51s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T53s" defined at accountmanagementsystem.ads:78, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__L52s__T53s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t53s 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t53s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T55s" defined at accountmanagementsystem.ads:79, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__L54s__T55s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t55s 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t55s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T57s" defined at accountmanagementsystem.ads:80, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__L56s__T57s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t57s 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t57s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T59s" defined at accountmanagementsystem.ads:81, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__L58s__T59s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t59s 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t59s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T61s" defined at accountmanagementsystem.ads:85, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__L60s__T61s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t61s 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t61s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T63s" defined at accountmanagementsystem.ads:87, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__L62s__T63s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t63s 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t63s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T65s" defined at accountmanagementsystem.ads:89, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__L64s__T65s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t65s 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t65s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T67s" defined at accountmanagementsystem.ads:91, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__L66s__T67s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t67s 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t67s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T69s" defined at accountmanagementsystem.ads:93, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__L68s__T69s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t69s 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t69s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T71s" defined at accountmanagementsystem.ads:95, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__L70s__T71s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t71s 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t71s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T73s" defined at accountmanagementsystem.ads:97, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__L72s__T73s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t73s 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t73s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T75s" defined at accountmanagementsystem.ads:99, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__L74s__T75s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t75s 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t75s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T77s" defined at accountmanagementsystem.ads:101, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__L76s__T77s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t77s 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t77s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T79s" defined at accountmanagementsystem.ads:103, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__L78s__T79s
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t79s 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t79s, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for defining the constant "wearer" defined at accountmanagementsystem.ads:118, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__setinsurer__wearer
 use import "_gnatprove_standard".Main
 use        Measures__userid

 function wearer "GP_CE_Relevant" 
   :Measures__userid.__split

end

(* Module giving an empty axiom for the entity "wearer" defined at accountmanagementsystem.ads:118, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__setinsurer__wearer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "insurer" defined at accountmanagementsystem.ads:118, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__setinsurer__insurer
 use import "_gnatprove_standard".Main
 use        Measures__userid

 function insurer "GP_CE_Relevant" 
   :Measures__userid.__split

end

(* Module giving an empty axiom for the entity "insurer" defined at accountmanagementsystem.ads:118, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__setinsurer__insurer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "wearer" defined at accountmanagementsystem.ads:127, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__readinsurer__wearer
 use import "_gnatprove_standard".Main
 use        Measures__userid

 function wearer "GP_CE_Relevant" 
   :Measures__userid.__split

end

(* Module giving an empty axiom for the entity "wearer" defined at accountmanagementsystem.ads:127, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__readinsurer__wearer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "wearer" defined at accountmanagementsystem.ads:130, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__removeinsurer__wearer
 use import "_gnatprove_standard".Main
 use        Measures__userid

 function wearer "GP_CE_Relevant" 
   :Measures__userid.__split

end

(* Module giving an empty axiom for the entity "wearer" defined at accountmanagementsystem.ads:130, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__removeinsurer__wearer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "wearer" defined at accountmanagementsystem.ads:140, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__setfriend__wearer
 use import "_gnatprove_standard".Main
 use        Measures__userid

 function wearer "GP_CE_Relevant" 
   :Measures__userid.__split

end

(* Module giving an empty axiom for the entity "wearer" defined at accountmanagementsystem.ads:140, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__setfriend__wearer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "friend" defined at accountmanagementsystem.ads:140, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__setfriend__friend
 use import "_gnatprove_standard".Main
 use        Measures__userid

 function friend "GP_CE_Relevant" 
   :Measures__userid.__split

end

(* Module giving an empty axiom for the entity "friend" defined at accountmanagementsystem.ads:140, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__setfriend__friend__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "wearer" defined at accountmanagementsystem.ads:149, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__readfriend__wearer
 use import "_gnatprove_standard".Main
 use        Measures__userid

 function wearer "GP_CE_Relevant" 
   :Measures__userid.__split

end

(* Module giving an empty axiom for the entity "wearer" defined at accountmanagementsystem.ads:149, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__readfriend__wearer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "wearer" defined at accountmanagementsystem.ads:152, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__removefriend__wearer
 use import "_gnatprove_standard".Main
 use        Measures__userid

 function wearer "GP_CE_Relevant" 
   :Measures__userid.__split

end

(* Module giving an empty axiom for the entity "wearer" defined at accountmanagementsystem.ads:152, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__removefriend__wearer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "wearer" defined at accountmanagementsystem.ads:164, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__updatevitals__wearer
 use import "_gnatprove_standard".Main
 use        Measures__userid

 function wearer "GP_CE_Relevant" 
   :Measures__userid.__split

end

(* Module giving an empty axiom for the entity "wearer" defined at accountmanagementsystem.ads:164, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__updatevitals__wearer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "newvitals" defined at accountmanagementsystem.ads:164, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__updatevitals__newvitals
 use import "_gnatprove_standard".Main
 use        Measures__bpm

 function newvitals "GP_CE_Relevant" 
   :Measures__bpm.__split

end

(* Module giving an empty axiom for the entity "newvitals" defined at accountmanagementsystem.ads:164, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__updatevitals__newvitals__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "wearer" defined at accountmanagementsystem.ads:168, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__updatefootsteps__wearer
 use import "_gnatprove_standard".Main
 use        Measures__userid

 function wearer "GP_CE_Relevant" 
   :Measures__userid.__split

end

(* Module giving an empty axiom for the entity "wearer" defined at accountmanagementsystem.ads:168, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__updatefootsteps__wearer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "newfootsteps" defined at accountmanagementsystem.ads:168, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__updatefootsteps__newfootsteps
 use import "_gnatprove_standard".Main
 use        Measures__footsteps

 function newfootsteps "GP_CE_Relevant" 
   :Measures__footsteps.__split

end

(* Module giving an empty axiom for the entity "newfootsteps" defined at accountmanagementsystem.ads:168, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__updatefootsteps__newfootsteps__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "wearer" defined at accountmanagementsystem.ads:173, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__updatelocation__wearer
 use import "_gnatprove_standard".Main
 use        Measures__userid

 function wearer "GP_CE_Relevant" 
   :Measures__userid.__split

end

(* Module giving an empty axiom for the entity "wearer" defined at accountmanagementsystem.ads:173, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__updatelocation__wearer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "newlocation" defined at accountmanagementsystem.ads:173, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__updatelocation__newlocation
 use import "_gnatprove_standard".Main
 use        Measures__gpslocation

 function newlocation 
   :Measures__gpslocation.gpslocation

end

(* Module giving an empty axiom for the entity "newlocation" defined at accountmanagementsystem.ads:173, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__updatelocation__newlocation__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "requester" defined at accountmanagementsystem.ads:189, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__readvitals__requester
 use import "_gnatprove_standard".Main
 use        Measures__userid

 function requester "GP_CE_Relevant" 
   :Measures__userid.__split

end

(* Module giving an empty axiom for the entity "requester" defined at accountmanagementsystem.ads:189, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__readvitals__requester__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "targetuser" defined at accountmanagementsystem.ads:189, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__readvitals__targetuser
 use import "_gnatprove_standard".Main
 use        Measures__userid

 function targetuser "GP_CE_Relevant" 
   :Measures__userid.__split

end

(* Module giving an empty axiom for the entity "targetuser" defined at accountmanagementsystem.ads:189, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__readvitals__targetuser__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "requester" defined at accountmanagementsystem.ads:203, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__readfootsteps__requester
 use import "_gnatprove_standard".Main
 use        Measures__userid

 function requester "GP_CE_Relevant" 
   :Measures__userid.__split

end

(* Module giving an empty axiom for the entity "requester" defined at accountmanagementsystem.ads:203, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__readfootsteps__requester__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "targetuser" defined at accountmanagementsystem.ads:203, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__readfootsteps__targetuser
 use import "_gnatprove_standard".Main
 use        Measures__userid

 function targetuser "GP_CE_Relevant" 
   :Measures__userid.__split

end

(* Module giving an empty axiom for the entity "targetuser" defined at accountmanagementsystem.ads:203, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__readfootsteps__targetuser__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "requester" defined at accountmanagementsystem.ads:218, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__readlocation__requester
 use import "_gnatprove_standard".Main
 use        Measures__userid

 function requester "GP_CE_Relevant" 
   :Measures__userid.__split

end

(* Module giving an empty axiom for the entity "requester" defined at accountmanagementsystem.ads:218, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__readlocation__requester__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "targetuser" defined at accountmanagementsystem.ads:218, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__readlocation__targetuser
 use import "_gnatprove_standard".Main
 use        Measures__userid

 function targetuser "GP_CE_Relevant" 
   :Measures__userid.__split

end

(* Module giving an empty axiom for the entity "targetuser" defined at accountmanagementsystem.ads:218, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__readlocation__targetuser__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "wearer" defined at accountmanagementsystem.ads:232, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__updatevitalspermissions__wearer
 use import "_gnatprove_standard".Main
 use        Measures__userid

 function wearer "GP_CE_Relevant" 
   :Measures__userid.__split

end

(* Module giving an empty axiom for the entity "wearer" defined at accountmanagementsystem.ads:232, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__updatevitalspermissions__wearer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "other" defined at accountmanagementsystem.ads:233, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__updatevitalspermissions__other
 use import "_gnatprove_standard".Main
 use        Measures__userid

 function other "GP_CE_Relevant" 
   :Measures__userid.__split

end

(* Module giving an empty axiom for the entity "other" defined at accountmanagementsystem.ads:233, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__updatevitalspermissions__other__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "allow" defined at accountmanagementsystem.ads:234, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__updatevitalspermissions__allow
 use import "_gnatprove_standard".Main

 function allow "GP_CE_Relevant" 
   :bool

end

(* Module giving an empty axiom for the entity "allow" defined at accountmanagementsystem.ads:234, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__updatevitalspermissions__allow__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "wearer" defined at accountmanagementsystem.ads:248, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__updatefootstepspermissions__wearer
 use import "_gnatprove_standard".Main
 use        Measures__userid

 function wearer "GP_CE_Relevant" 
   :Measures__userid.__split

end

(* Module giving an empty axiom for the entity "wearer" defined at accountmanagementsystem.ads:248, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__updatefootstepspermissions__wearer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "other" defined at accountmanagementsystem.ads:249, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__updatefootstepspermissions__other
 use import "_gnatprove_standard".Main
 use        Measures__userid

 function other "GP_CE_Relevant" 
   :Measures__userid.__split

end

(* Module giving an empty axiom for the entity "other" defined at accountmanagementsystem.ads:249, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__updatefootstepspermissions__other__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "allow" defined at accountmanagementsystem.ads:250, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__updatefootstepspermissions__allow
 use import "_gnatprove_standard".Main

 function allow "GP_CE_Relevant" 
   :bool

end

(* Module giving an empty axiom for the entity "allow" defined at accountmanagementsystem.ads:250, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__updatefootstepspermissions__allow__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "wearer" defined at accountmanagementsystem.ads:269, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__updatelocationpermissions__wearer
 use import "_gnatprove_standard".Main
 use        Measures__userid

 function wearer "GP_CE_Relevant" 
   :Measures__userid.__split

end

(* Module giving an empty axiom for the entity "wearer" defined at accountmanagementsystem.ads:269, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__updatelocationpermissions__wearer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "other" defined at accountmanagementsystem.ads:270, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__updatelocationpermissions__other
 use import "_gnatprove_standard".Main
 use        Measures__userid

 function other "GP_CE_Relevant" 
   :Measures__userid.__split

end

(* Module giving an empty axiom for the entity "other" defined at accountmanagementsystem.ads:270, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__updatelocationpermissions__other__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "allow" defined at accountmanagementsystem.ads:271, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__updatelocationpermissions__allow
 use import "_gnatprove_standard".Main

 function allow "GP_CE_Relevant" 
   :bool

end

(* Module giving an empty axiom for the entity "allow" defined at accountmanagementsystem.ads:271, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__updatelocationpermissions__allow__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "wearer" defined at accountmanagementsystem.ads:285, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__contactemergency__wearer
 use import "_gnatprove_standard".Main
 use        Measures__userid

 function wearer "GP_CE_Relevant" 
   :Measures__userid.__split

end

(* Module giving an empty axiom for the entity "wearer" defined at accountmanagementsystem.ads:285, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__contactemergency__wearer__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "newlocation" defined at accountmanagementsystem.ads:286, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__contactemergency__newlocation
 use import "_gnatprove_standard".Main
 use        Measures__gpslocation

 function newlocation 
   :Measures__gpslocation.gpslocation

end

(* Module giving an empty axiom for the entity "newlocation" defined at accountmanagementsystem.ads:286, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__contactemergency__newlocation__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the constant "newvitals" defined at accountmanagementsystem.ads:287, created in Gnat2Why.Decls.Translate_Constant *)
module Accountmanagementsystem__contactemergency__newvitals
 use import "_gnatprove_standard".Main
 use        Measures__bpm

 function newvitals "GP_CE_Relevant" 
   :Measures__bpm.__split

end

(* Module giving an empty axiom for the entity "newvitals" defined at accountmanagementsystem.ads:287, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__contactemergency__newvitals__axiom
 use import "_gnatprove_standard".Main


end

(* Module for axiomatizing type "T1b" defined at accountmanagementsystem.adb:9, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T1b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t1b 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t1b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T2b" defined at accountmanagementsystem.adb:9, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T2b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Array__Int

 type component_type  = 
  bool
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int
 
 type t2b  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Boolean.to_int, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq
 
 clone export "ada__model".Standard_Array_Logical_Op_Axioms with
 type map = Array__Int.map component_type, 
 function get = Array__Int.get, 
 function xorb = Array__Int.xorb, 
 function andb = Array__Int.andb, 
 function orb = Array__Int.orb, 
 function notb = Array__Int.notb, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one

end

(* Module for axiomatizing type "T3b" defined at accountmanagementsystem.adb:10, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T3b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t3b 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t3b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T4b" defined at accountmanagementsystem.adb:10, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T4b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int
 use        Measures__userid

 type component_type  = 
  Measures__userid.userid
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int
 
 type t4b  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Measures__userid.to_rep, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq

end

(* Module for axiomatizing type "T5b" defined at accountmanagementsystem.adb:11, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T5b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t5b 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t5b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T6b" defined at accountmanagementsystem.adb:11, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T6b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int
 use        Measures__userid

 type component_type  = 
  Measures__userid.userid
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int
 
 type t6b  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Measures__userid.to_rep, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq

end

(* Module for axiomatizing type "T7b" defined at accountmanagementsystem.adb:12, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T7b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t7b 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t7b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T8b" defined at accountmanagementsystem.adb:12, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T8b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int
 use        Measures__bpm

 type component_type  = 
  Measures__bpm.bpm
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int
 
 type t8b  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Measures__bpm.to_rep, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq

end

(* Module for axiomatizing type "T9b" defined at accountmanagementsystem.adb:13, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T9b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t9b 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t9b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T10b" defined at accountmanagementsystem.adb:13, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T10b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int
 use        Measures__footsteps

 type component_type  = 
  Measures__footsteps.footsteps
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int
 
 type t10b  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Measures__footsteps.to_rep, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq

end

(* Module for axiomatizing type "T11b" defined at accountmanagementsystem.adb:14, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T11b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t11b 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t11b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T12b" defined at accountmanagementsystem.adb:14, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T12b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int
 use        Measures__gpslocation

 type component_type  = 
  Measures__gpslocation.gpslocation
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int
 
 type t12b  = 
  __t

end

(* Module for axiomatizing type "T13b" defined at accountmanagementsystem.adb:16, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T13b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t13b 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t13b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T14b" defined at accountmanagementsystem.adb:16, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T14b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Array__Int

 type component_type  = 
  bool
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int
 
 type t14b  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Boolean.to_int, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq
 
 clone export "ada__model".Standard_Array_Logical_Op_Axioms with
 type map = Array__Int.map component_type, 
 function get = Array__Int.get, 
 function xorb = Array__Int.xorb, 
 function andb = Array__Int.andb, 
 function orb = Array__Int.orb, 
 function notb = Array__Int.notb, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one

end

(* Module for axiomatizing type "T15b" defined at accountmanagementsystem.adb:17, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T15b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t15b 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t15b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T16b" defined at accountmanagementsystem.adb:17, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T16b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Array__Int

 type component_type  = 
  bool
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int
 
 type t16b  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Boolean.to_int, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq
 
 clone export "ada__model".Standard_Array_Logical_Op_Axioms with
 type map = Array__Int.map component_type, 
 function get = Array__Int.get, 
 function xorb = Array__Int.xorb, 
 function andb = Array__Int.andb, 
 function orb = Array__Int.orb, 
 function notb = Array__Int.notb, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one

end

(* Module for axiomatizing type "T17b" defined at accountmanagementsystem.adb:18, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T17b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t17b 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t17b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T18b" defined at accountmanagementsystem.adb:18, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T18b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Array__Int

 type component_type  = 
  bool
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int
 
 type t18b  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Boolean.to_int, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq
 
 clone export "ada__model".Standard_Array_Logical_Op_Axioms with
 type map = Array__Int.map component_type, 
 function get = Array__Int.get, 
 function xorb = Array__Int.xorb, 
 function andb = Array__Int.andb, 
 function orb = Array__Int.orb, 
 function notb = Array__Int.notb, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one

end

(* Module for axiomatizing type "T19b" defined at accountmanagementsystem.adb:19, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T19b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t19b 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t19b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T20b" defined at accountmanagementsystem.adb:19, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T20b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Array__Int

 type component_type  = 
  bool
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int
 
 type t20b  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Boolean.to_int, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq
 
 clone export "ada__model".Standard_Array_Logical_Op_Axioms with
 type map = Array__Int.map component_type, 
 function get = Array__Int.get, 
 function xorb = Array__Int.xorb, 
 function andb = Array__Int.andb, 
 function orb = Array__Int.orb, 
 function notb = Array__Int.notb, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one

end

(* Module for axiomatizing type "T21b" defined at accountmanagementsystem.adb:20, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T21b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t21b 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t21b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T22b" defined at accountmanagementsystem.adb:20, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T22b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Array__Int

 type component_type  = 
  bool
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int
 
 type t22b  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Boolean.to_int, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq
 
 clone export "ada__model".Standard_Array_Logical_Op_Axioms with
 type map = Array__Int.map component_type, 
 function get = Array__Int.get, 
 function xorb = Array__Int.xorb, 
 function andb = Array__Int.andb, 
 function orb = Array__Int.orb, 
 function notb = Array__Int.notb, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one

end

(* Module for axiomatizing type "T23b" defined at accountmanagementsystem.adb:21, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T23b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t23b 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t23b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T24b" defined at accountmanagementsystem.adb:21, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T24b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Array__Int

 type component_type  = 
  bool
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int
 
 type t24b  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Boolean.to_int, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq
 
 clone export "ada__model".Standard_Array_Logical_Op_Axioms with
 type map = Array__Int.map component_type, 
 function get = Array__Int.get, 
 function xorb = Array__Int.xorb, 
 function andb = Array__Int.andb, 
 function orb = Array__Int.orb, 
 function notb = Array__Int.notb, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one

end

(* Module for axiomatizing type "T25b" defined at accountmanagementsystem.adb:22, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T25b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t25b 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t25b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T26b" defined at accountmanagementsystem.adb:22, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T26b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Array__Int

 type component_type  = 
  bool
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int
 
 type t26b  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Boolean.to_int, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq
 
 clone export "ada__model".Standard_Array_Logical_Op_Axioms with
 type map = Array__Int.map component_type, 
 function get = Array__Int.get, 
 function xorb = Array__Int.xorb, 
 function andb = Array__Int.andb, 
 function orb = Array__Int.orb, 
 function notb = Array__Int.notb, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one

end

(* Module for axiomatizing type "T27b" defined at accountmanagementsystem.adb:23, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T27b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t27b 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t27b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T28b" defined at accountmanagementsystem.adb:23, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T28b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Array__Int

 type component_type  = 
  bool
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int
 
 type t28b  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Boolean.to_int, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq
 
 clone export "ada__model".Standard_Array_Logical_Op_Axioms with
 type map = Array__Int.map component_type, 
 function get = Array__Int.get, 
 function xorb = Array__Int.xorb, 
 function andb = Array__Int.andb, 
 function orb = Array__Int.orb, 
 function notb = Array__Int.notb, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one

end

(* Module for axiomatizing type "T29b" defined at accountmanagementsystem.adb:24, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T29b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t29b 
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t29b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T30b" defined at accountmanagementsystem.adb:24, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T30b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Array__Int

 type component_type  = 
  bool
 
 function first 
   :int =
  ( -1 )
 
 function last 
   :int =
  100
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int
 
 type t30b  = 
  __t
 
 function index_Index_one 
   :int =
  1
 
 clone export "ada__model".Array_Int_Rep_Comparison_Axiom with
 type component_type = component_type, 
 function to_rep = Boolean.to_int, 
 type map = Array__Int.map component_type, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one, 
 function get = Array__Int.get, 
 function compare = Array__Int.compare, 
 function bool_eq = Array__Int.bool_eq
 
 clone export "ada__model".Standard_Array_Logical_Op_Axioms with
 type map = Array__Int.map component_type, 
 function get = Array__Int.get, 
 function xorb = Array__Int.xorb, 
 function andb = Array__Int.andb, 
 function orb = Array__Int.orb, 
 function notb = Array__Int.notb, 
 type Index.t = int, 
 predicate Index.le = Int.(<=), 
 predicate Index.lt = Int.(<), 
 predicate Index.gt = Int.(>), 
 function Index.add = Int.(+), 
 function Index.sub = Int.(-), 
 function Index.one = index_Index_one

end

(* Module for axiomatizing type "T31b" defined at accountmanagementsystem.adb:26, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T31b
 use import "_gnatprove_standard".Main
 use import "int".Int

 type t31b 
 
 function first 
   :int =
  0
 
 function last 
   :int =
  2147483647
 
 predicate in_range
   (x : int)  =
  ( (first <= x) /\ (x <= last) )
 
 clone export "ada__model".Static_Discrete with
 type t = t31b, 
 function first = first, 
 function last = last, 
 predicate in_range = in_range

end

(* Module for axiomatizing type "T32b" defined at accountmanagementsystem.adb:26, created in Gnat2Why.Types.Translate_Type *)
module Accountmanagementsystem__init__T32b
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int
 use        Accountmanagementsystem__emergencyrecord

 type component_type  = 
  Accountmanagementsystem__emergencyrecord.emergencyrecord
 
 function first 
   :int =
  0
 
 function last 
   :int =
  2147483647
 
 clone export "ada__model".Constr_Array with
 type map = Array__Int.map component_type, 
 function array_bool_eq = Array__Int.bool_eq, 
 function first = first, 
 function last = last, 
 type index_rep_type = int
 
 type t32b  = 
  __t

end
(* Module for defining a ref holding the value of variable "users" defined at accountmanagementsystem.ads:25, created in Gnat2Why.Decls.Translate_Variable *)
module Accountmanagementsystem__users
 use import "_gnatprove_standard".Main
 use        Accountmanagementsystem__usersarray

 val users  : ref Accountmanagementsystem__usersarray.usersarray
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "users" defined at accountmanagementsystem.ads:25, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__users__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "latestuser" defined at accountmanagementsystem.ads:28, created in Gnat2Why.Decls.Translate_Variable *)
module Accountmanagementsystem__latestuser
 use import "_gnatprove_standard".Main
 use        Measures__userid

 val latestuser "GP_CE_Relevant"  : ref Measures__userid.__split
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "latestuser" defined at accountmanagementsystem.ads:28, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__latestuser__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "insurers" defined at accountmanagementsystem.ads:31, created in Gnat2Why.Decls.Translate_Variable *)
module Accountmanagementsystem__insurers
 use import "_gnatprove_standard".Main
 use        Accountmanagementsystem__useruserarray

 val insurers  : ref Accountmanagementsystem__useruserarray.useruserarray
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "insurers" defined at accountmanagementsystem.ads:31, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__insurers__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "friends" defined at accountmanagementsystem.ads:32, created in Gnat2Why.Decls.Translate_Variable *)
module Accountmanagementsystem__friends
 use import "_gnatprove_standard".Main
 use        Accountmanagementsystem__useruserarray

 val friends  : ref Accountmanagementsystem__useruserarray.useruserarray
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "friends" defined at accountmanagementsystem.ads:32, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__friends__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "vitals" defined at accountmanagementsystem.ads:35, created in Gnat2Why.Decls.Translate_Variable *)
module Accountmanagementsystem__vitals
 use import "_gnatprove_standard".Main
 use        Accountmanagementsystem__vitalsarray

 val vitals  : ref Accountmanagementsystem__vitalsarray.vitalsarray
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "vitals" defined at accountmanagementsystem.ads:35, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__vitals__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "mfootsteps" defined at accountmanagementsystem.ads:36, created in Gnat2Why.Decls.Translate_Variable *)
module Accountmanagementsystem__mfootsteps
 use import "_gnatprove_standard".Main
 use        Accountmanagementsystem__footstepsarray

 val mfootsteps  : ref Accountmanagementsystem__footstepsarray.footstepsarray
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "mfootsteps" defined at accountmanagementsystem.ads:36, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__mfootsteps__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "locations" defined at accountmanagementsystem.ads:37, created in Gnat2Why.Decls.Translate_Variable *)
module Accountmanagementsystem__locations
 use import "_gnatprove_standard".Main
 use        Accountmanagementsystem__locationsarray

 val locations  : ref Accountmanagementsystem__locationsarray.locationsarray
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "locations" defined at accountmanagementsystem.ads:37, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__locations__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "friendfootsteppermission" defined at accountmanagementsystem.ads:46, created in Gnat2Why.Decls.Translate_Variable *)
module Accountmanagementsystem__friendfootsteppermission
 use import "_gnatprove_standard".Main
 use        Accountmanagementsystem__permissionarray

 val friendfootsteppermission  : ref Accountmanagementsystem__permissionarray.permissionarray
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "friendfootsteppermission" defined at accountmanagementsystem.ads:46, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__friendfootsteppermission__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "friendlocationpermission" defined at accountmanagementsystem.ads:47, created in Gnat2Why.Decls.Translate_Variable *)
module Accountmanagementsystem__friendlocationpermission
 use import "_gnatprove_standard".Main
 use        Accountmanagementsystem__permissionarray

 val friendlocationpermission  : ref Accountmanagementsystem__permissionarray.permissionarray
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "friendlocationpermission" defined at accountmanagementsystem.ads:47, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__friendlocationpermission__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "friendvitalpermission" defined at accountmanagementsystem.ads:48, created in Gnat2Why.Decls.Translate_Variable *)
module Accountmanagementsystem__friendvitalpermission
 use import "_gnatprove_standard".Main
 use        Accountmanagementsystem__permissionarray

 val friendvitalpermission  : ref Accountmanagementsystem__permissionarray.permissionarray
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "friendvitalpermission" defined at accountmanagementsystem.ads:48, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__friendvitalpermission__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "insurerfootsteppermission" defined at accountmanagementsystem.ads:49, created in Gnat2Why.Decls.Translate_Variable *)
module Accountmanagementsystem__insurerfootsteppermission
 use import "_gnatprove_standard".Main
 use        Accountmanagementsystem__permissionarray

 val insurerfootsteppermission  : ref Accountmanagementsystem__permissionarray.permissionarray
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "insurerfootsteppermission" defined at accountmanagementsystem.ads:49, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__insurerfootsteppermission__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "insurerlocationpermission" defined at accountmanagementsystem.ads:50, created in Gnat2Why.Decls.Translate_Variable *)
module Accountmanagementsystem__insurerlocationpermission
 use import "_gnatprove_standard".Main
 use        Accountmanagementsystem__permissionarray

 val insurerlocationpermission  : ref Accountmanagementsystem__permissionarray.permissionarray
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "insurerlocationpermission" defined at accountmanagementsystem.ads:50, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__insurerlocationpermission__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "insurervitalpermission" defined at accountmanagementsystem.ads:51, created in Gnat2Why.Decls.Translate_Variable *)
module Accountmanagementsystem__insurervitalpermission
 use import "_gnatprove_standard".Main
 use        Accountmanagementsystem__permissionarray

 val insurervitalpermission  : ref Accountmanagementsystem__permissionarray.permissionarray
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "insurervitalpermission" defined at accountmanagementsystem.ads:51, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__insurervitalpermission__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "emergencyfootsteppermission" defined at accountmanagementsystem.ads:52, created in Gnat2Why.Decls.Translate_Variable *)
module Accountmanagementsystem__emergencyfootsteppermission
 use import "_gnatprove_standard".Main
 use        Accountmanagementsystem__permissionarray

 val emergencyfootsteppermission  : ref Accountmanagementsystem__permissionarray.permissionarray
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "emergencyfootsteppermission" defined at accountmanagementsystem.ads:52, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__emergencyfootsteppermission__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "emergencylocationpermission" defined at accountmanagementsystem.ads:53, created in Gnat2Why.Decls.Translate_Variable *)
module Accountmanagementsystem__emergencylocationpermission
 use import "_gnatprove_standard".Main
 use        Accountmanagementsystem__permissionarray

 val emergencylocationpermission  : ref Accountmanagementsystem__permissionarray.permissionarray
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "emergencylocationpermission" defined at accountmanagementsystem.ads:53, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__emergencylocationpermission__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "emergencyvitalpermission" defined at accountmanagementsystem.ads:54, created in Gnat2Why.Decls.Translate_Variable *)
module Accountmanagementsystem__emergencyvitalpermission
 use import "_gnatprove_standard".Main
 use        Accountmanagementsystem__permissionarray

 val emergencyvitalpermission  : ref Accountmanagementsystem__permissionarray.permissionarray
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "emergencyvitalpermission" defined at accountmanagementsystem.ads:54, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__emergencyvitalpermission__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "emrecordindex" defined at accountmanagementsystem.ads:68, created in Gnat2Why.Decls.Translate_Variable *)
module Accountmanagementsystem__emrecordindex
 use import "_gnatprove_standard".Main
 use        Standard__natural

 val emrecordindex "GP_CE_Relevant"  : ref Standard__natural.__split
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "emrecordindex" defined at accountmanagementsystem.ads:68, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__emrecordindex__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "emrecordlist" defined at accountmanagementsystem.ads:70, created in Gnat2Why.Decls.Translate_Variable *)
module Accountmanagementsystem__emrecordlist
 use import "_gnatprove_standard".Main
 use        Accountmanagementsystem__emergencyrecordlist

 val emrecordlist  : ref Accountmanagementsystem__emergencyrecordlist.emergencyrecordlist
 
 function attr__ATTRIBUTE_ADDRESS 
   :int

end

(* Module giving an empty axiom for the entity "emrecordlist" defined at accountmanagementsystem.ads:70, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__emrecordlist__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining a ref holding the value of variable "newuser" defined at accountmanagementsystem.ads:106, created in Gnat2Why.Decls.Translate_Variable *)
module Accountmanagementsystem__createuser__newuser
 use import "_gnatprove_standard".Main
 use        Measures__userid

 val newuser "GP_CE_Relevant"  : ref Measures__userid.__split
 
 function attr__ATTRIBUTE_ADDRESS "GP_CE_Relevant" 
   :int

end

(* Module giving an empty axiom for the entity "newuser" defined at accountmanagementsystem.ads:106, created in Gnat2Why.Driver.Translate_Entity.Generate_Empty_Axiom_Theory *)
module Accountmanagementsystem__createuser__newuser__axiom
 use import "_gnatprove_standard".Main


end
(* Module for possibly declaring a logic function for "contactemergency" defined at emergency.ads:12, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Emergency__contactemergency
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "init" defined at accountmanagementsystem.ads:72, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Accountmanagementsystem__init
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "createuser" defined at accountmanagementsystem.ads:106, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Accountmanagementsystem__createuser
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "setinsurer" defined at accountmanagementsystem.ads:118, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Accountmanagementsystem__setinsurer
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "readinsurer" defined at accountmanagementsystem.ads:127, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Accountmanagementsystem__readinsurer
 use        Accountmanagementsystem__insurers
 use import "_gnatprove_standard".Main
 use        Measures__userid
 use        Accountmanagementsystem__useruserarray

 function readinsurer 
   (wearer : int) (accountmanagementsystem__insurers : Accountmanagementsystem__useruserarray.useruserarray)  :Measures__userid.__split

end

(* Module for possibly declaring a logic function for "removeinsurer" defined at accountmanagementsystem.ads:130, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Accountmanagementsystem__removeinsurer
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "setfriend" defined at accountmanagementsystem.ads:140, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Accountmanagementsystem__setfriend
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "readfriend" defined at accountmanagementsystem.ads:149, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Accountmanagementsystem__readfriend
 use        Accountmanagementsystem__friends
 use import "_gnatprove_standard".Main
 use        Measures__userid
 use        Accountmanagementsystem__useruserarray

 function readfriend 
   (wearer : int) (accountmanagementsystem__friends : Accountmanagementsystem__useruserarray.useruserarray)  :Measures__userid.__split

end

(* Module for possibly declaring a logic function for "removefriend" defined at accountmanagementsystem.ads:152, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Accountmanagementsystem__removefriend
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "updatevitals" defined at accountmanagementsystem.ads:164, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Accountmanagementsystem__updatevitals
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "updatefootsteps" defined at accountmanagementsystem.ads:168, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Accountmanagementsystem__updatefootsteps
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "updatelocation" defined at accountmanagementsystem.ads:173, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Accountmanagementsystem__updatelocation
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "readvitals" defined at accountmanagementsystem.ads:189, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Accountmanagementsystem__readvitals
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__vitals
 use        Accountmanagementsystem__friendvitalpermission
 use        Accountmanagementsystem__insurervitalpermission
 use        Accountmanagementsystem__emergencyvitalpermission
 use import "_gnatprove_standard".Main
 use        Measures__bpm
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__useruserarray
 use        Accountmanagementsystem__vitalsarray
 use        Accountmanagementsystem__permissionarray

 function readvitals 
   (requester : int) (targetuser : int) (accountmanagementsystem__users : Accountmanagementsystem__usersarray.usersarray) (accountmanagementsystem__insurers : Accountmanagementsystem__useruserarray.useruserarray) (accountmanagementsystem__friends : Accountmanagementsystem__useruserarray.useruserarray) (accountmanagementsystem__vitals : Accountmanagementsystem__vitalsarray.vitalsarray) (accountmanagementsystem__friendvitalpermission : Accountmanagementsystem__permissionarray.permissionarray) (accountmanagementsystem__insurervitalpermission : Accountmanagementsystem__permissionarray.permissionarray) (accountmanagementsystem__emergencyvitalpermission : Accountmanagementsystem__permissionarray.permissionarray)  :Measures__bpm.__split

end

(* Module for possibly declaring a logic function for "readfootsteps" defined at accountmanagementsystem.ads:203, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Accountmanagementsystem__readfootsteps
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__mfootsteps
 use        Accountmanagementsystem__friendfootsteppermission
 use        Accountmanagementsystem__insurerfootsteppermission
 use        Accountmanagementsystem__emergencyfootsteppermission
 use import "_gnatprove_standard".Main
 use        Measures__footsteps
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__useruserarray
 use        Accountmanagementsystem__footstepsarray
 use        Accountmanagementsystem__permissionarray

 function readfootsteps 
   (requester : int) (targetuser : int) (accountmanagementsystem__users : Accountmanagementsystem__usersarray.usersarray) (accountmanagementsystem__insurers : Accountmanagementsystem__useruserarray.useruserarray) (accountmanagementsystem__friends : Accountmanagementsystem__useruserarray.useruserarray) (accountmanagementsystem__mfootsteps : Accountmanagementsystem__footstepsarray.footstepsarray) (accountmanagementsystem__friendfootsteppermission : Accountmanagementsystem__permissionarray.permissionarray) (accountmanagementsystem__insurerfootsteppermission : Accountmanagementsystem__permissionarray.permissionarray) (accountmanagementsystem__emergencyfootsteppermission : Accountmanagementsystem__permissionarray.permissionarray)  :Measures__footsteps.__split

end

(* Module for possibly declaring a logic function for "readlocation" defined at accountmanagementsystem.ads:218, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Accountmanagementsystem__readlocation
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__locations
 use        Accountmanagementsystem__friendlocationpermission
 use        Accountmanagementsystem__insurerlocationpermission
 use        Accountmanagementsystem__emergencylocationpermission
 use import "_gnatprove_standard".Main
 use        Measures__gpslocation
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__useruserarray
 use        Accountmanagementsystem__locationsarray
 use        Accountmanagementsystem__permissionarray

 function readlocation 
   (requester : int) (targetuser : int) (accountmanagementsystem__users : Accountmanagementsystem__usersarray.usersarray) (accountmanagementsystem__insurers : Accountmanagementsystem__useruserarray.useruserarray) (accountmanagementsystem__friends : Accountmanagementsystem__useruserarray.useruserarray) (accountmanagementsystem__locations : Accountmanagementsystem__locationsarray.locationsarray) (accountmanagementsystem__friendlocationpermission : Accountmanagementsystem__permissionarray.permissionarray) (accountmanagementsystem__insurerlocationpermission : Accountmanagementsystem__permissionarray.permissionarray) (accountmanagementsystem__emergencylocationpermission : Accountmanagementsystem__permissionarray.permissionarray)  :Measures__gpslocation.gpslocation

end

(* Module for possibly declaring a logic function for "updatevitalspermissions" defined at accountmanagementsystem.ads:232, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Accountmanagementsystem__updatevitalspermissions
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "updatefootstepspermissions" defined at accountmanagementsystem.ads:248, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Accountmanagementsystem__updatefootstepspermissions
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "updatelocationpermissions" defined at accountmanagementsystem.ads:269, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Accountmanagementsystem__updatelocationpermissions
 use import "_gnatprove_standard".Main


end

(* Module for possibly declaring a logic function for "contactemergency" defined at accountmanagementsystem.ads:285, created in Gnat2Why.Subprograms.Translate_Subprogram_Spec *)
module Accountmanagementsystem__contactemergency
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:110, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_16
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__usersarray

 function temp___standard__accountmanagementsystem_16 
   (temp___standard__accountmanagementsystem_18 : Accountmanagementsystem__usersarray.usersarray) (temp___standard__accountmanagementsystem_19 : Measures__userid.__split) (temp___standard__accountmanagementsystem_20 : bool)  :Accountmanagementsystem__usersarray.usersarray
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_18  : Accountmanagementsystem__usersarray.usersarray.
  (forall temp___standard__accountmanagementsystem_19  : Measures__userid.__split.
  (forall temp___standard__accountmanagementsystem_20  : bool [(temp___standard__accountmanagementsystem_16 temp___standard__accountmanagementsystem_18 temp___standard__accountmanagementsystem_19 temp___standard__accountmanagementsystem_20)].
   (let temp___standard__accountmanagementsystem_17 = (temp___standard__accountmanagementsystem_16 temp___standard__accountmanagementsystem_18 temp___standard__accountmanagementsystem_19 temp___standard__accountmanagementsystem_20) in (
    (forall temp___standard__accountmanagementsystem_21  : int.
     (if ((temp___standard__accountmanagementsystem_21 = temp___standard__accountmanagementsystem_19)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_17 temp___standard__accountmanagementsystem_21) = temp___standard__accountmanagementsystem_20)) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_17 temp___standard__accountmanagementsystem_21) = (Array__Int.get temp___standard__accountmanagementsystem_18 temp___standard__accountmanagementsystem_21)))))))
  )))

end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:112, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_23
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__permissionarray

 function temp___standard__accountmanagementsystem_23 
   (temp___standard__accountmanagementsystem_25 : Accountmanagementsystem__permissionarray.permissionarray) (temp___standard__accountmanagementsystem_26 : Measures__userid.__split) (temp___standard__accountmanagementsystem_27 : bool)  :Accountmanagementsystem__permissionarray.permissionarray
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_25  : Accountmanagementsystem__permissionarray.permissionarray.
  (forall temp___standard__accountmanagementsystem_26  : Measures__userid.__split.
  (forall temp___standard__accountmanagementsystem_27  : bool [(temp___standard__accountmanagementsystem_23 temp___standard__accountmanagementsystem_25 temp___standard__accountmanagementsystem_26 temp___standard__accountmanagementsystem_27)].
   (let temp___standard__accountmanagementsystem_24 = (temp___standard__accountmanagementsystem_23 temp___standard__accountmanagementsystem_25 temp___standard__accountmanagementsystem_26 temp___standard__accountmanagementsystem_27) in (
    (forall temp___standard__accountmanagementsystem_28  : int.
     (if ((temp___standard__accountmanagementsystem_28 = temp___standard__accountmanagementsystem_26)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_24 temp___standard__accountmanagementsystem_28) = temp___standard__accountmanagementsystem_27)) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_24 temp___standard__accountmanagementsystem_28) = (Array__Int.get temp___standard__accountmanagementsystem_25 temp___standard__accountmanagementsystem_28)))))))
  )))

end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:114, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_30
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__permissionarray

 function temp___standard__accountmanagementsystem_30 
   (temp___standard__accountmanagementsystem_32 : Accountmanagementsystem__permissionarray.permissionarray) (temp___standard__accountmanagementsystem_33 : Measures__userid.__split) (temp___standard__accountmanagementsystem_34 : bool)  :Accountmanagementsystem__permissionarray.permissionarray
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_32  : Accountmanagementsystem__permissionarray.permissionarray.
  (forall temp___standard__accountmanagementsystem_33  : Measures__userid.__split.
  (forall temp___standard__accountmanagementsystem_34  : bool [(temp___standard__accountmanagementsystem_30 temp___standard__accountmanagementsystem_32 temp___standard__accountmanagementsystem_33 temp___standard__accountmanagementsystem_34)].
   (let temp___standard__accountmanagementsystem_31 = (temp___standard__accountmanagementsystem_30 temp___standard__accountmanagementsystem_32 temp___standard__accountmanagementsystem_33 temp___standard__accountmanagementsystem_34) in (
    (forall temp___standard__accountmanagementsystem_35  : int.
     (if ((temp___standard__accountmanagementsystem_35 = temp___standard__accountmanagementsystem_33)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_31 temp___standard__accountmanagementsystem_35) = temp___standard__accountmanagementsystem_34)) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_31 temp___standard__accountmanagementsystem_35) = (Array__Int.get temp___standard__accountmanagementsystem_32 temp___standard__accountmanagementsystem_35)))))))
  )))

end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:116, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_37
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__permissionarray

 function temp___standard__accountmanagementsystem_37 
   (temp___standard__accountmanagementsystem_39 : Accountmanagementsystem__permissionarray.permissionarray) (temp___standard__accountmanagementsystem_40 : Measures__userid.__split) (temp___standard__accountmanagementsystem_41 : bool)  :Accountmanagementsystem__permissionarray.permissionarray
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_39  : Accountmanagementsystem__permissionarray.permissionarray.
  (forall temp___standard__accountmanagementsystem_40  : Measures__userid.__split.
  (forall temp___standard__accountmanagementsystem_41  : bool [(temp___standard__accountmanagementsystem_37 temp___standard__accountmanagementsystem_39 temp___standard__accountmanagementsystem_40 temp___standard__accountmanagementsystem_41)].
   (let temp___standard__accountmanagementsystem_38 = (temp___standard__accountmanagementsystem_37 temp___standard__accountmanagementsystem_39 temp___standard__accountmanagementsystem_40 temp___standard__accountmanagementsystem_41) in (
    (forall temp___standard__accountmanagementsystem_42  : int.
     (if ((temp___standard__accountmanagementsystem_42 = temp___standard__accountmanagementsystem_40)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_38 temp___standard__accountmanagementsystem_42) = temp___standard__accountmanagementsystem_41)) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_38 temp___standard__accountmanagementsystem_42) = (Array__Int.get temp___standard__accountmanagementsystem_39 temp___standard__accountmanagementsystem_42)))))))
  )))

end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:125, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_48
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__useruserarray

 function temp___standard__accountmanagementsystem_48 
   (temp___standard__accountmanagementsystem_50 : Accountmanagementsystem__useruserarray.useruserarray) (temp___standard__accountmanagementsystem_51 : Measures__userid.__split) (temp___standard__accountmanagementsystem_52 : Measures__userid.__split)  :Accountmanagementsystem__useruserarray.useruserarray
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_50  : Accountmanagementsystem__useruserarray.useruserarray.
  (forall temp___standard__accountmanagementsystem_51 temp___standard__accountmanagementsystem_52  : Measures__userid.__split [(temp___standard__accountmanagementsystem_48 temp___standard__accountmanagementsystem_50 temp___standard__accountmanagementsystem_51 temp___standard__accountmanagementsystem_52)].
   (let temp___standard__accountmanagementsystem_49 = (temp___standard__accountmanagementsystem_48 temp___standard__accountmanagementsystem_50 temp___standard__accountmanagementsystem_51 temp___standard__accountmanagementsystem_52) in (
    (forall temp___standard__accountmanagementsystem_53  : int.
     (if ((temp___standard__accountmanagementsystem_53 = temp___standard__accountmanagementsystem_51)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_49 temp___standard__accountmanagementsystem_53) = (Measures__userid.of_rep temp___standard__accountmanagementsystem_52))) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_49 temp___standard__accountmanagementsystem_53) = (Array__Int.get temp___standard__accountmanagementsystem_50 temp___standard__accountmanagementsystem_53)))))))
  ))

end

(* Module giving a program function and a defining axiom for the expression function "readinsurer" defined at accountmanagementsystem.ads:127, created in Gnat2Why.Subprograms.Translate_Expression_Function_Body *)
module Accountmanagementsystem__readinsurer__axiom
 use        Accountmanagementsystem__insurers
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__useruserarray
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__readinsurer

 val readinsurer 
   (wearer : int)  :Measures__userid.__split
  requires { true }
  ensures { ( (result = (Accountmanagementsystem__readinsurer.readinsurer wearer !Accountmanagementsystem__insurers.insurers)) /\ (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last result) ) }

 
 axiom readinsurer__post_axiom :
  (forall wearer  : int.
  (forall accountmanagementsystem__insurers  : Accountmanagementsystem__useruserarray.useruserarray [(Accountmanagementsystem__readinsurer.readinsurer wearer accountmanagementsystem__insurers)].
   ( (Measures__userid.in_range wearer) -> (let result = (Accountmanagementsystem__readinsurer.readinsurer wearer accountmanagementsystem__insurers) in (
    (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last result)))
    )))
 
 axiom readinsurer__def_axiom :
  (forall wearer  : int.
  (forall accountmanagementsystem__insurers  : Accountmanagementsystem__useruserarray.useruserarray [(Accountmanagementsystem__readinsurer.readinsurer wearer accountmanagementsystem__insurers)].
   ( (Measures__userid.in_range wearer) -> ((Accountmanagementsystem__readinsurer.readinsurer wearer accountmanagementsystem__insurers) = (Measures__userid.to_rep (Array__Int.get accountmanagementsystem__insurers wearer))) )))

end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:134, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_61
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__useruserarray

 function temp___standard__accountmanagementsystem_61 
   (temp___standard__accountmanagementsystem_63 : Accountmanagementsystem__useruserarray.useruserarray) (temp___standard__accountmanagementsystem_64 : Measures__userid.__split) (temp___standard__accountmanagementsystem_65 : Measures__userid.__split)  :Accountmanagementsystem__useruserarray.useruserarray
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_63  : Accountmanagementsystem__useruserarray.useruserarray.
  (forall temp___standard__accountmanagementsystem_64 temp___standard__accountmanagementsystem_65  : Measures__userid.__split [(temp___standard__accountmanagementsystem_61 temp___standard__accountmanagementsystem_63 temp___standard__accountmanagementsystem_64 temp___standard__accountmanagementsystem_65)].
   (let temp___standard__accountmanagementsystem_62 = (temp___standard__accountmanagementsystem_61 temp___standard__accountmanagementsystem_63 temp___standard__accountmanagementsystem_64 temp___standard__accountmanagementsystem_65) in (
    (forall temp___standard__accountmanagementsystem_66  : int.
     (if ((temp___standard__accountmanagementsystem_66 = temp___standard__accountmanagementsystem_64)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_62 temp___standard__accountmanagementsystem_66) = (Measures__userid.of_rep temp___standard__accountmanagementsystem_65))) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_62 temp___standard__accountmanagementsystem_66) = (Array__Int.get temp___standard__accountmanagementsystem_63 temp___standard__accountmanagementsystem_66)))))))
  ))

end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:136, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_68
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__permissionarray

 function temp___standard__accountmanagementsystem_68 
   (temp___standard__accountmanagementsystem_70 : Accountmanagementsystem__permissionarray.permissionarray) (temp___standard__accountmanagementsystem_71 : Measures__userid.__split) (temp___standard__accountmanagementsystem_72 : bool)  :Accountmanagementsystem__permissionarray.permissionarray
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_70  : Accountmanagementsystem__permissionarray.permissionarray.
  (forall temp___standard__accountmanagementsystem_71  : Measures__userid.__split.
  (forall temp___standard__accountmanagementsystem_72  : bool [(temp___standard__accountmanagementsystem_68 temp___standard__accountmanagementsystem_70 temp___standard__accountmanagementsystem_71 temp___standard__accountmanagementsystem_72)].
   (let temp___standard__accountmanagementsystem_69 = (temp___standard__accountmanagementsystem_68 temp___standard__accountmanagementsystem_70 temp___standard__accountmanagementsystem_71 temp___standard__accountmanagementsystem_72) in (
    (forall temp___standard__accountmanagementsystem_73  : int.
     (if ((temp___standard__accountmanagementsystem_73 = temp___standard__accountmanagementsystem_71)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_69 temp___standard__accountmanagementsystem_73) = temp___standard__accountmanagementsystem_72)) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_69 temp___standard__accountmanagementsystem_73) = (Array__Int.get temp___standard__accountmanagementsystem_70 temp___standard__accountmanagementsystem_73)))))))
  )))

end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:138, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_75
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__permissionarray

 function temp___standard__accountmanagementsystem_75 
   (temp___standard__accountmanagementsystem_77 : Accountmanagementsystem__permissionarray.permissionarray) (temp___standard__accountmanagementsystem_78 : Measures__userid.__split) (temp___standard__accountmanagementsystem_79 : bool)  :Accountmanagementsystem__permissionarray.permissionarray
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_77  : Accountmanagementsystem__permissionarray.permissionarray.
  (forall temp___standard__accountmanagementsystem_78  : Measures__userid.__split.
  (forall temp___standard__accountmanagementsystem_79  : bool [(temp___standard__accountmanagementsystem_75 temp___standard__accountmanagementsystem_77 temp___standard__accountmanagementsystem_78 temp___standard__accountmanagementsystem_79)].
   (let temp___standard__accountmanagementsystem_76 = (temp___standard__accountmanagementsystem_75 temp___standard__accountmanagementsystem_77 temp___standard__accountmanagementsystem_78 temp___standard__accountmanagementsystem_79) in (
    (forall temp___standard__accountmanagementsystem_80  : int.
     (if ((temp___standard__accountmanagementsystem_80 = temp___standard__accountmanagementsystem_78)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_76 temp___standard__accountmanagementsystem_80) = temp___standard__accountmanagementsystem_79)) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_76 temp___standard__accountmanagementsystem_80) = (Array__Int.get temp___standard__accountmanagementsystem_77 temp___standard__accountmanagementsystem_80)))))))
  )))

end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:147, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_86
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__useruserarray

 function temp___standard__accountmanagementsystem_86 
   (temp___standard__accountmanagementsystem_88 : Accountmanagementsystem__useruserarray.useruserarray) (temp___standard__accountmanagementsystem_89 : Measures__userid.__split) (temp___standard__accountmanagementsystem_90 : Measures__userid.__split)  :Accountmanagementsystem__useruserarray.useruserarray
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_88  : Accountmanagementsystem__useruserarray.useruserarray.
  (forall temp___standard__accountmanagementsystem_89 temp___standard__accountmanagementsystem_90  : Measures__userid.__split [(temp___standard__accountmanagementsystem_86 temp___standard__accountmanagementsystem_88 temp___standard__accountmanagementsystem_89 temp___standard__accountmanagementsystem_90)].
   (let temp___standard__accountmanagementsystem_87 = (temp___standard__accountmanagementsystem_86 temp___standard__accountmanagementsystem_88 temp___standard__accountmanagementsystem_89 temp___standard__accountmanagementsystem_90) in (
    (forall temp___standard__accountmanagementsystem_91  : int.
     (if ((temp___standard__accountmanagementsystem_91 = temp___standard__accountmanagementsystem_89)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_87 temp___standard__accountmanagementsystem_91) = (Measures__userid.of_rep temp___standard__accountmanagementsystem_90))) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_87 temp___standard__accountmanagementsystem_91) = (Array__Int.get temp___standard__accountmanagementsystem_88 temp___standard__accountmanagementsystem_91)))))))
  ))

end

(* Module giving a program function and a defining axiom for the expression function "readfriend" defined at accountmanagementsystem.ads:149, created in Gnat2Why.Subprograms.Translate_Expression_Function_Body *)
module Accountmanagementsystem__readfriend__axiom
 use        Accountmanagementsystem__friends
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__useruserarray
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__readfriend

 val readfriend 
   (wearer : int)  :Measures__userid.__split
  requires { true }
  ensures { ( (result = (Accountmanagementsystem__readfriend.readfriend wearer !Accountmanagementsystem__friends.friends)) /\ (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last result) ) }

 
 axiom readfriend__post_axiom :
  (forall wearer  : int.
  (forall accountmanagementsystem__friends  : Accountmanagementsystem__useruserarray.useruserarray [(Accountmanagementsystem__readfriend.readfriend wearer accountmanagementsystem__friends)].
   ( (Measures__userid.in_range wearer) -> (let result = (Accountmanagementsystem__readfriend.readfriend wearer accountmanagementsystem__friends) in (
    (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last result)))
    )))
 
 axiom readfriend__def_axiom :
  (forall wearer  : int.
  (forall accountmanagementsystem__friends  : Accountmanagementsystem__useruserarray.useruserarray [(Accountmanagementsystem__readfriend.readfriend wearer accountmanagementsystem__friends)].
   ( (Measures__userid.in_range wearer) -> ((Accountmanagementsystem__readfriend.readfriend wearer accountmanagementsystem__friends) = (Measures__userid.to_rep (Array__Int.get accountmanagementsystem__friends wearer))) )))

end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:156, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_99
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__useruserarray

 function temp___standard__accountmanagementsystem_99 
   (temp___standard__accountmanagementsystem_101 : Accountmanagementsystem__useruserarray.useruserarray) (temp___standard__accountmanagementsystem_102 : Measures__userid.__split) (temp___standard__accountmanagementsystem_103 : Measures__userid.__split)  :Accountmanagementsystem__useruserarray.useruserarray
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_101  : Accountmanagementsystem__useruserarray.useruserarray.
  (forall temp___standard__accountmanagementsystem_102 temp___standard__accountmanagementsystem_103  : Measures__userid.__split [(temp___standard__accountmanagementsystem_99 temp___standard__accountmanagementsystem_101 temp___standard__accountmanagementsystem_102 temp___standard__accountmanagementsystem_103)].
   (let temp___standard__accountmanagementsystem_100 = (temp___standard__accountmanagementsystem_99 temp___standard__accountmanagementsystem_101 temp___standard__accountmanagementsystem_102 temp___standard__accountmanagementsystem_103) in (
    (forall temp___standard__accountmanagementsystem_104  : int.
     (if ((temp___standard__accountmanagementsystem_104 = temp___standard__accountmanagementsystem_102)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_100 temp___standard__accountmanagementsystem_104) = (Measures__userid.of_rep temp___standard__accountmanagementsystem_103))) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_100 temp___standard__accountmanagementsystem_104) = (Array__Int.get temp___standard__accountmanagementsystem_101 temp___standard__accountmanagementsystem_104)))))))
  ))

end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:158, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_106
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__permissionarray

 function temp___standard__accountmanagementsystem_106 
   (temp___standard__accountmanagementsystem_108 : Accountmanagementsystem__permissionarray.permissionarray) (temp___standard__accountmanagementsystem_109 : Measures__userid.__split) (temp___standard__accountmanagementsystem_110 : bool)  :Accountmanagementsystem__permissionarray.permissionarray
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_108  : Accountmanagementsystem__permissionarray.permissionarray.
  (forall temp___standard__accountmanagementsystem_109  : Measures__userid.__split.
  (forall temp___standard__accountmanagementsystem_110  : bool [(temp___standard__accountmanagementsystem_106 temp___standard__accountmanagementsystem_108 temp___standard__accountmanagementsystem_109 temp___standard__accountmanagementsystem_110)].
   (let temp___standard__accountmanagementsystem_107 = (temp___standard__accountmanagementsystem_106 temp___standard__accountmanagementsystem_108 temp___standard__accountmanagementsystem_109 temp___standard__accountmanagementsystem_110) in (
    (forall temp___standard__accountmanagementsystem_111  : int.
     (if ((temp___standard__accountmanagementsystem_111 = temp___standard__accountmanagementsystem_109)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_107 temp___standard__accountmanagementsystem_111) = temp___standard__accountmanagementsystem_110)) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_107 temp___standard__accountmanagementsystem_111) = (Array__Int.get temp___standard__accountmanagementsystem_108 temp___standard__accountmanagementsystem_111)))))))
  )))

end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:160, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_113
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__permissionarray

 function temp___standard__accountmanagementsystem_113 
   (temp___standard__accountmanagementsystem_115 : Accountmanagementsystem__permissionarray.permissionarray) (temp___standard__accountmanagementsystem_116 : Measures__userid.__split) (temp___standard__accountmanagementsystem_117 : bool)  :Accountmanagementsystem__permissionarray.permissionarray
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_115  : Accountmanagementsystem__permissionarray.permissionarray.
  (forall temp___standard__accountmanagementsystem_116  : Measures__userid.__split.
  (forall temp___standard__accountmanagementsystem_117  : bool [(temp___standard__accountmanagementsystem_113 temp___standard__accountmanagementsystem_115 temp___standard__accountmanagementsystem_116 temp___standard__accountmanagementsystem_117)].
   (let temp___standard__accountmanagementsystem_114 = (temp___standard__accountmanagementsystem_113 temp___standard__accountmanagementsystem_115 temp___standard__accountmanagementsystem_116 temp___standard__accountmanagementsystem_117) in (
    (forall temp___standard__accountmanagementsystem_118  : int.
     (if ((temp___standard__accountmanagementsystem_118 = temp___standard__accountmanagementsystem_116)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_114 temp___standard__accountmanagementsystem_118) = temp___standard__accountmanagementsystem_117)) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_114 temp___standard__accountmanagementsystem_118) = (Array__Int.get temp___standard__accountmanagementsystem_115 temp___standard__accountmanagementsystem_118)))))))
  )))

end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:162, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_120
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__permissionarray

 function temp___standard__accountmanagementsystem_120 
   (temp___standard__accountmanagementsystem_122 : Accountmanagementsystem__permissionarray.permissionarray) (temp___standard__accountmanagementsystem_123 : Measures__userid.__split) (temp___standard__accountmanagementsystem_124 : bool)  :Accountmanagementsystem__permissionarray.permissionarray
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_122  : Accountmanagementsystem__permissionarray.permissionarray.
  (forall temp___standard__accountmanagementsystem_123  : Measures__userid.__split.
  (forall temp___standard__accountmanagementsystem_124  : bool [(temp___standard__accountmanagementsystem_120 temp___standard__accountmanagementsystem_122 temp___standard__accountmanagementsystem_123 temp___standard__accountmanagementsystem_124)].
   (let temp___standard__accountmanagementsystem_121 = (temp___standard__accountmanagementsystem_120 temp___standard__accountmanagementsystem_122 temp___standard__accountmanagementsystem_123 temp___standard__accountmanagementsystem_124) in (
    (forall temp___standard__accountmanagementsystem_125  : int.
     (if ((temp___standard__accountmanagementsystem_125 = temp___standard__accountmanagementsystem_123)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_121 temp___standard__accountmanagementsystem_125) = temp___standard__accountmanagementsystem_124)) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_121 temp___standard__accountmanagementsystem_125) = (Array__Int.get temp___standard__accountmanagementsystem_122 temp___standard__accountmanagementsystem_125)))))))
  )))

end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:166, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_131
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Measures__bpm
 use        Accountmanagementsystem__vitalsarray

 function temp___standard__accountmanagementsystem_131 
   (temp___standard__accountmanagementsystem_133 : Accountmanagementsystem__vitalsarray.vitalsarray) (temp___standard__accountmanagementsystem_134 : Measures__userid.__split) (temp___standard__accountmanagementsystem_135 : Measures__bpm.__split)  :Accountmanagementsystem__vitalsarray.vitalsarray
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_133  : Accountmanagementsystem__vitalsarray.vitalsarray.
  (forall temp___standard__accountmanagementsystem_134  : Measures__userid.__split.
  (forall temp___standard__accountmanagementsystem_135  : Measures__bpm.__split [(temp___standard__accountmanagementsystem_131 temp___standard__accountmanagementsystem_133 temp___standard__accountmanagementsystem_134 temp___standard__accountmanagementsystem_135)].
   (let temp___standard__accountmanagementsystem_132 = (temp___standard__accountmanagementsystem_131 temp___standard__accountmanagementsystem_133 temp___standard__accountmanagementsystem_134 temp___standard__accountmanagementsystem_135) in (
    (forall temp___standard__accountmanagementsystem_136  : int.
     (if ((temp___standard__accountmanagementsystem_136 = temp___standard__accountmanagementsystem_134)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_132 temp___standard__accountmanagementsystem_136) = (Measures__bpm.of_rep temp___standard__accountmanagementsystem_135))) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_132 temp___standard__accountmanagementsystem_136) = (Array__Int.get temp___standard__accountmanagementsystem_133 temp___standard__accountmanagementsystem_136)))))))
  )))

end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:171, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_139
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Measures__footsteps
 use        Accountmanagementsystem__footstepsarray

 function temp___standard__accountmanagementsystem_139 
   (temp___standard__accountmanagementsystem_141 : Accountmanagementsystem__footstepsarray.footstepsarray) (temp___standard__accountmanagementsystem_142 : Measures__userid.__split) (temp___standard__accountmanagementsystem_143 : Measures__footsteps.__split)  :Accountmanagementsystem__footstepsarray.footstepsarray
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_141  : Accountmanagementsystem__footstepsarray.footstepsarray.
  (forall temp___standard__accountmanagementsystem_142  : Measures__userid.__split.
  (forall temp___standard__accountmanagementsystem_143  : Measures__footsteps.__split [(temp___standard__accountmanagementsystem_139 temp___standard__accountmanagementsystem_141 temp___standard__accountmanagementsystem_142 temp___standard__accountmanagementsystem_143)].
   (let temp___standard__accountmanagementsystem_140 = (temp___standard__accountmanagementsystem_139 temp___standard__accountmanagementsystem_141 temp___standard__accountmanagementsystem_142 temp___standard__accountmanagementsystem_143) in (
    (forall temp___standard__accountmanagementsystem_144  : int.
     (if ((temp___standard__accountmanagementsystem_144 = temp___standard__accountmanagementsystem_142)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_140 temp___standard__accountmanagementsystem_144) = (Measures__footsteps.of_rep temp___standard__accountmanagementsystem_143))) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_140 temp___standard__accountmanagementsystem_144) = (Array__Int.get temp___standard__accountmanagementsystem_141 temp___standard__accountmanagementsystem_144)))))))
  )))

end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:176, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_147
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Measures__gpslocation
 use        Accountmanagementsystem__locationsarray

 function temp___standard__accountmanagementsystem_147 
   (temp___standard__accountmanagementsystem_149 : Accountmanagementsystem__locationsarray.locationsarray) (temp___standard__accountmanagementsystem_150 : Measures__userid.__split) (temp___standard__accountmanagementsystem_151 : Measures__gpslocation.gpslocation)  :Accountmanagementsystem__locationsarray.locationsarray
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_149  : Accountmanagementsystem__locationsarray.locationsarray.
  (forall temp___standard__accountmanagementsystem_150  : Measures__userid.__split.
  (forall temp___standard__accountmanagementsystem_151  : Measures__gpslocation.gpslocation [(temp___standard__accountmanagementsystem_147 temp___standard__accountmanagementsystem_149 temp___standard__accountmanagementsystem_150 temp___standard__accountmanagementsystem_151)].
   (let temp___standard__accountmanagementsystem_148 = (temp___standard__accountmanagementsystem_147 temp___standard__accountmanagementsystem_149 temp___standard__accountmanagementsystem_150 temp___standard__accountmanagementsystem_151) in (
    (forall temp___standard__accountmanagementsystem_152  : int.
     (if ((temp___standard__accountmanagementsystem_152 = temp___standard__accountmanagementsystem_150)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_148 temp___standard__accountmanagementsystem_152) = temp___standard__accountmanagementsystem_151)) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_148 temp___standard__accountmanagementsystem_152) = (Array__Int.get temp___standard__accountmanagementsystem_149 temp___standard__accountmanagementsystem_152)))))))
  )))

end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:239, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_176
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__permissionarray

 function temp___standard__accountmanagementsystem_176 
   (temp___standard__accountmanagementsystem_178 : Accountmanagementsystem__permissionarray.permissionarray) (temp___standard__accountmanagementsystem_179 : Measures__userid.__split) (temp___standard__accountmanagementsystem_180 : bool)  :Accountmanagementsystem__permissionarray.permissionarray
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_178  : Accountmanagementsystem__permissionarray.permissionarray.
  (forall temp___standard__accountmanagementsystem_179  : Measures__userid.__split.
  (forall temp___standard__accountmanagementsystem_180  : bool [(temp___standard__accountmanagementsystem_176 temp___standard__accountmanagementsystem_178 temp___standard__accountmanagementsystem_179 temp___standard__accountmanagementsystem_180)].
   (let temp___standard__accountmanagementsystem_177 = (temp___standard__accountmanagementsystem_176 temp___standard__accountmanagementsystem_178 temp___standard__accountmanagementsystem_179 temp___standard__accountmanagementsystem_180) in (
    (forall temp___standard__accountmanagementsystem_181  : int.
     (if ((temp___standard__accountmanagementsystem_181 = temp___standard__accountmanagementsystem_179)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_177 temp___standard__accountmanagementsystem_181) = temp___standard__accountmanagementsystem_180)) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_177 temp___standard__accountmanagementsystem_181) = (Array__Int.get temp___standard__accountmanagementsystem_178 temp___standard__accountmanagementsystem_181)))))))
  )))

end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:242, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_183
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__permissionarray

 function temp___standard__accountmanagementsystem_183 
   (temp___standard__accountmanagementsystem_185 : Accountmanagementsystem__permissionarray.permissionarray) (temp___standard__accountmanagementsystem_186 : Measures__userid.__split) (temp___standard__accountmanagementsystem_187 : bool)  :Accountmanagementsystem__permissionarray.permissionarray
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_185  : Accountmanagementsystem__permissionarray.permissionarray.
  (forall temp___standard__accountmanagementsystem_186  : Measures__userid.__split.
  (forall temp___standard__accountmanagementsystem_187  : bool [(temp___standard__accountmanagementsystem_183 temp___standard__accountmanagementsystem_185 temp___standard__accountmanagementsystem_186 temp___standard__accountmanagementsystem_187)].
   (let temp___standard__accountmanagementsystem_184 = (temp___standard__accountmanagementsystem_183 temp___standard__accountmanagementsystem_185 temp___standard__accountmanagementsystem_186 temp___standard__accountmanagementsystem_187) in (
    (forall temp___standard__accountmanagementsystem_188  : int.
     (if ((temp___standard__accountmanagementsystem_188 = temp___standard__accountmanagementsystem_186)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_184 temp___standard__accountmanagementsystem_188) = temp___standard__accountmanagementsystem_187)) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_184 temp___standard__accountmanagementsystem_188) = (Array__Int.get temp___standard__accountmanagementsystem_185 temp___standard__accountmanagementsystem_188)))))))
  )))

end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:245, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_190
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__permissionarray

 function temp___standard__accountmanagementsystem_190 
   (temp___standard__accountmanagementsystem_192 : Accountmanagementsystem__permissionarray.permissionarray) (temp___standard__accountmanagementsystem_193 : Measures__userid.__split) (temp___standard__accountmanagementsystem_194 : bool)  :Accountmanagementsystem__permissionarray.permissionarray
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_192  : Accountmanagementsystem__permissionarray.permissionarray.
  (forall temp___standard__accountmanagementsystem_193  : Measures__userid.__split.
  (forall temp___standard__accountmanagementsystem_194  : bool [(temp___standard__accountmanagementsystem_190 temp___standard__accountmanagementsystem_192 temp___standard__accountmanagementsystem_193 temp___standard__accountmanagementsystem_194)].
   (let temp___standard__accountmanagementsystem_191 = (temp___standard__accountmanagementsystem_190 temp___standard__accountmanagementsystem_192 temp___standard__accountmanagementsystem_193 temp___standard__accountmanagementsystem_194) in (
    (forall temp___standard__accountmanagementsystem_195  : int.
     (if ((temp___standard__accountmanagementsystem_195 = temp___standard__accountmanagementsystem_193)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_191 temp___standard__accountmanagementsystem_195) = temp___standard__accountmanagementsystem_194)) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_191 temp___standard__accountmanagementsystem_195) = (Array__Int.get temp___standard__accountmanagementsystem_192 temp___standard__accountmanagementsystem_195)))))))
  )))

end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:256, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_200
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__permissionarray

 function temp___standard__accountmanagementsystem_200 
   (temp___standard__accountmanagementsystem_202 : Accountmanagementsystem__permissionarray.permissionarray) (temp___standard__accountmanagementsystem_203 : Measures__userid.__split) (temp___standard__accountmanagementsystem_204 : bool)  :Accountmanagementsystem__permissionarray.permissionarray
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_202  : Accountmanagementsystem__permissionarray.permissionarray.
  (forall temp___standard__accountmanagementsystem_203  : Measures__userid.__split.
  (forall temp___standard__accountmanagementsystem_204  : bool [(temp___standard__accountmanagementsystem_200 temp___standard__accountmanagementsystem_202 temp___standard__accountmanagementsystem_203 temp___standard__accountmanagementsystem_204)].
   (let temp___standard__accountmanagementsystem_201 = (temp___standard__accountmanagementsystem_200 temp___standard__accountmanagementsystem_202 temp___standard__accountmanagementsystem_203 temp___standard__accountmanagementsystem_204) in (
    (forall temp___standard__accountmanagementsystem_205  : int.
     (if ((temp___standard__accountmanagementsystem_205 = temp___standard__accountmanagementsystem_203)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_201 temp___standard__accountmanagementsystem_205) = temp___standard__accountmanagementsystem_204)) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_201 temp___standard__accountmanagementsystem_205) = (Array__Int.get temp___standard__accountmanagementsystem_202 temp___standard__accountmanagementsystem_205)))))))
  )))

end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:259, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_207
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__permissionarray

 function temp___standard__accountmanagementsystem_207 
   (temp___standard__accountmanagementsystem_209 : Accountmanagementsystem__permissionarray.permissionarray) (temp___standard__accountmanagementsystem_210 : Measures__userid.__split) (temp___standard__accountmanagementsystem_211 : bool)  :Accountmanagementsystem__permissionarray.permissionarray
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_209  : Accountmanagementsystem__permissionarray.permissionarray.
  (forall temp___standard__accountmanagementsystem_210  : Measures__userid.__split.
  (forall temp___standard__accountmanagementsystem_211  : bool [(temp___standard__accountmanagementsystem_207 temp___standard__accountmanagementsystem_209 temp___standard__accountmanagementsystem_210 temp___standard__accountmanagementsystem_211)].
   (let temp___standard__accountmanagementsystem_208 = (temp___standard__accountmanagementsystem_207 temp___standard__accountmanagementsystem_209 temp___standard__accountmanagementsystem_210 temp___standard__accountmanagementsystem_211) in (
    (forall temp___standard__accountmanagementsystem_212  : int.
     (if ((temp___standard__accountmanagementsystem_212 = temp___standard__accountmanagementsystem_210)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_208 temp___standard__accountmanagementsystem_212) = temp___standard__accountmanagementsystem_211)) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_208 temp___standard__accountmanagementsystem_212) = (Array__Int.get temp___standard__accountmanagementsystem_209 temp___standard__accountmanagementsystem_212)))))))
  )))

end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:262, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_214
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__permissionarray

 function temp___standard__accountmanagementsystem_214 
   (temp___standard__accountmanagementsystem_216 : Accountmanagementsystem__permissionarray.permissionarray) (temp___standard__accountmanagementsystem_217 : Measures__userid.__split) (temp___standard__accountmanagementsystem_218 : bool)  :Accountmanagementsystem__permissionarray.permissionarray
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_216  : Accountmanagementsystem__permissionarray.permissionarray.
  (forall temp___standard__accountmanagementsystem_217  : Measures__userid.__split.
  (forall temp___standard__accountmanagementsystem_218  : bool [(temp___standard__accountmanagementsystem_214 temp___standard__accountmanagementsystem_216 temp___standard__accountmanagementsystem_217 temp___standard__accountmanagementsystem_218)].
   (let temp___standard__accountmanagementsystem_215 = (temp___standard__accountmanagementsystem_214 temp___standard__accountmanagementsystem_216 temp___standard__accountmanagementsystem_217 temp___standard__accountmanagementsystem_218) in (
    (forall temp___standard__accountmanagementsystem_219  : int.
     (if ((temp___standard__accountmanagementsystem_219 = temp___standard__accountmanagementsystem_217)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_215 temp___standard__accountmanagementsystem_219) = temp___standard__accountmanagementsystem_218)) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_215 temp___standard__accountmanagementsystem_219) = (Array__Int.get temp___standard__accountmanagementsystem_216 temp___standard__accountmanagementsystem_219)))))))
  )))

end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:263, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_221
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__useruserarray

 function temp___standard__accountmanagementsystem_221 
   (temp___standard__accountmanagementsystem_223 : Accountmanagementsystem__useruserarray.useruserarray) (temp___standard__accountmanagementsystem_224 : Measures__userid.__split) (temp___standard__accountmanagementsystem_225 : Measures__userid.__split)  :Accountmanagementsystem__useruserarray.useruserarray
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_223  : Accountmanagementsystem__useruserarray.useruserarray.
  (forall temp___standard__accountmanagementsystem_224 temp___standard__accountmanagementsystem_225  : Measures__userid.__split [(temp___standard__accountmanagementsystem_221 temp___standard__accountmanagementsystem_223 temp___standard__accountmanagementsystem_224 temp___standard__accountmanagementsystem_225)].
   (let temp___standard__accountmanagementsystem_222 = (temp___standard__accountmanagementsystem_221 temp___standard__accountmanagementsystem_223 temp___standard__accountmanagementsystem_224 temp___standard__accountmanagementsystem_225) in (
    (forall temp___standard__accountmanagementsystem_226  : int.
     (if ((temp___standard__accountmanagementsystem_226 = temp___standard__accountmanagementsystem_224)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_222 temp___standard__accountmanagementsystem_226) = (Measures__userid.of_rep temp___standard__accountmanagementsystem_225))) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_222 temp___standard__accountmanagementsystem_226) = (Array__Int.get temp___standard__accountmanagementsystem_223 temp___standard__accountmanagementsystem_226)))))))
  ))

end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:265, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_228
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__permissionarray

 function temp___standard__accountmanagementsystem_228 
   (temp___standard__accountmanagementsystem_230 : Accountmanagementsystem__permissionarray.permissionarray) (temp___standard__accountmanagementsystem_231 : Measures__userid.__split) (temp___standard__accountmanagementsystem_232 : bool)  :Accountmanagementsystem__permissionarray.permissionarray
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_230  : Accountmanagementsystem__permissionarray.permissionarray.
  (forall temp___standard__accountmanagementsystem_231  : Measures__userid.__split.
  (forall temp___standard__accountmanagementsystem_232  : bool [(temp___standard__accountmanagementsystem_228 temp___standard__accountmanagementsystem_230 temp___standard__accountmanagementsystem_231 temp___standard__accountmanagementsystem_232)].
   (let temp___standard__accountmanagementsystem_229 = (temp___standard__accountmanagementsystem_228 temp___standard__accountmanagementsystem_230 temp___standard__accountmanagementsystem_231 temp___standard__accountmanagementsystem_232) in (
    (forall temp___standard__accountmanagementsystem_233  : int.
     (if ((temp___standard__accountmanagementsystem_233 = temp___standard__accountmanagementsystem_231)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_229 temp___standard__accountmanagementsystem_233) = temp___standard__accountmanagementsystem_232)) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_229 temp___standard__accountmanagementsystem_233) = (Array__Int.get temp___standard__accountmanagementsystem_230 temp___standard__accountmanagementsystem_233)))))))
  )))

end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:267, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_235
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__permissionarray

 function temp___standard__accountmanagementsystem_235 
   (temp___standard__accountmanagementsystem_237 : Accountmanagementsystem__permissionarray.permissionarray) (temp___standard__accountmanagementsystem_238 : Measures__userid.__split) (temp___standard__accountmanagementsystem_239 : bool)  :Accountmanagementsystem__permissionarray.permissionarray
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_237  : Accountmanagementsystem__permissionarray.permissionarray.
  (forall temp___standard__accountmanagementsystem_238  : Measures__userid.__split.
  (forall temp___standard__accountmanagementsystem_239  : bool [(temp___standard__accountmanagementsystem_235 temp___standard__accountmanagementsystem_237 temp___standard__accountmanagementsystem_238 temp___standard__accountmanagementsystem_239)].
   (let temp___standard__accountmanagementsystem_236 = (temp___standard__accountmanagementsystem_235 temp___standard__accountmanagementsystem_237 temp___standard__accountmanagementsystem_238 temp___standard__accountmanagementsystem_239) in (
    (forall temp___standard__accountmanagementsystem_240  : int.
     (if ((temp___standard__accountmanagementsystem_240 = temp___standard__accountmanagementsystem_238)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_236 temp___standard__accountmanagementsystem_240) = temp___standard__accountmanagementsystem_239)) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_236 temp___standard__accountmanagementsystem_240) = (Array__Int.get temp___standard__accountmanagementsystem_237 temp___standard__accountmanagementsystem_240)))))))
  )))

end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:277, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_245
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__permissionarray

 function temp___standard__accountmanagementsystem_245 
   (temp___standard__accountmanagementsystem_247 : Accountmanagementsystem__permissionarray.permissionarray) (temp___standard__accountmanagementsystem_248 : Measures__userid.__split) (temp___standard__accountmanagementsystem_249 : bool)  :Accountmanagementsystem__permissionarray.permissionarray
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_247  : Accountmanagementsystem__permissionarray.permissionarray.
  (forall temp___standard__accountmanagementsystem_248  : Measures__userid.__split.
  (forall temp___standard__accountmanagementsystem_249  : bool [(temp___standard__accountmanagementsystem_245 temp___standard__accountmanagementsystem_247 temp___standard__accountmanagementsystem_248 temp___standard__accountmanagementsystem_249)].
   (let temp___standard__accountmanagementsystem_246 = (temp___standard__accountmanagementsystem_245 temp___standard__accountmanagementsystem_247 temp___standard__accountmanagementsystem_248 temp___standard__accountmanagementsystem_249) in (
    (forall temp___standard__accountmanagementsystem_250  : int.
     (if ((temp___standard__accountmanagementsystem_250 = temp___standard__accountmanagementsystem_248)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_246 temp___standard__accountmanagementsystem_250) = temp___standard__accountmanagementsystem_249)) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_246 temp___standard__accountmanagementsystem_250) = (Array__Int.get temp___standard__accountmanagementsystem_247 temp___standard__accountmanagementsystem_250)))))))
  )))

end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:280, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_252
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__permissionarray

 function temp___standard__accountmanagementsystem_252 
   (temp___standard__accountmanagementsystem_254 : Accountmanagementsystem__permissionarray.permissionarray) (temp___standard__accountmanagementsystem_255 : Measures__userid.__split) (temp___standard__accountmanagementsystem_256 : bool)  :Accountmanagementsystem__permissionarray.permissionarray
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_254  : Accountmanagementsystem__permissionarray.permissionarray.
  (forall temp___standard__accountmanagementsystem_255  : Measures__userid.__split.
  (forall temp___standard__accountmanagementsystem_256  : bool [(temp___standard__accountmanagementsystem_252 temp___standard__accountmanagementsystem_254 temp___standard__accountmanagementsystem_255 temp___standard__accountmanagementsystem_256)].
   (let temp___standard__accountmanagementsystem_253 = (temp___standard__accountmanagementsystem_252 temp___standard__accountmanagementsystem_254 temp___standard__accountmanagementsystem_255 temp___standard__accountmanagementsystem_256) in (
    (forall temp___standard__accountmanagementsystem_257  : int.
     (if ((temp___standard__accountmanagementsystem_257 = temp___standard__accountmanagementsystem_255)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_253 temp___standard__accountmanagementsystem_257) = temp___standard__accountmanagementsystem_256)) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_253 temp___standard__accountmanagementsystem_257) = (Array__Int.get temp___standard__accountmanagementsystem_254 temp___standard__accountmanagementsystem_257)))))))
  )))

end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:283, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_259
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__permissionarray

 function temp___standard__accountmanagementsystem_259 
   (temp___standard__accountmanagementsystem_261 : Accountmanagementsystem__permissionarray.permissionarray) (temp___standard__accountmanagementsystem_262 : Measures__userid.__split) (temp___standard__accountmanagementsystem_263 : bool)  :Accountmanagementsystem__permissionarray.permissionarray
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_261  : Accountmanagementsystem__permissionarray.permissionarray.
  (forall temp___standard__accountmanagementsystem_262  : Measures__userid.__split.
  (forall temp___standard__accountmanagementsystem_263  : bool [(temp___standard__accountmanagementsystem_259 temp___standard__accountmanagementsystem_261 temp___standard__accountmanagementsystem_262 temp___standard__accountmanagementsystem_263)].
   (let temp___standard__accountmanagementsystem_260 = (temp___standard__accountmanagementsystem_259 temp___standard__accountmanagementsystem_261 temp___standard__accountmanagementsystem_262 temp___standard__accountmanagementsystem_263) in (
    (forall temp___standard__accountmanagementsystem_264  : int.
     (if ((temp___standard__accountmanagementsystem_264 = temp___standard__accountmanagementsystem_262)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_260 temp___standard__accountmanagementsystem_264) = temp___standard__accountmanagementsystem_263)) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_260 temp___standard__accountmanagementsystem_264) = (Array__Int.get temp___standard__accountmanagementsystem_261 temp___standard__accountmanagementsystem_264)))))))
  )))

end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:293, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_269
 use import "_gnatprove_standard".Main
 use        Standard__natural
 use        Array__Int
 use        Accountmanagementsystem__emergencyrecord
 use        Accountmanagementsystem__emergencyrecordlist

 function temp___standard__accountmanagementsystem_269 
   (temp___standard__accountmanagementsystem_271 : Accountmanagementsystem__emergencyrecordlist.emergencyrecordlist) (temp___standard__accountmanagementsystem_272 : Standard__natural.__split) (temp___standard__accountmanagementsystem_273 : Accountmanagementsystem__emergencyrecord.emergencyrecord)  :Accountmanagementsystem__emergencyrecordlist.emergencyrecordlist
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_271  : Accountmanagementsystem__emergencyrecordlist.emergencyrecordlist.
  (forall temp___standard__accountmanagementsystem_272  : Standard__natural.__split.
  (forall temp___standard__accountmanagementsystem_273  : Accountmanagementsystem__emergencyrecord.emergencyrecord [(temp___standard__accountmanagementsystem_269 temp___standard__accountmanagementsystem_271 temp___standard__accountmanagementsystem_272 temp___standard__accountmanagementsystem_273)].
   (let temp___standard__accountmanagementsystem_270 = (temp___standard__accountmanagementsystem_269 temp___standard__accountmanagementsystem_271 temp___standard__accountmanagementsystem_272 temp___standard__accountmanagementsystem_273) in (
    (forall temp___standard__accountmanagementsystem_274  : int.
     (if ((temp___standard__accountmanagementsystem_274 = temp___standard__accountmanagementsystem_272)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_270 temp___standard__accountmanagementsystem_274) = temp___standard__accountmanagementsystem_273)) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_270 temp___standard__accountmanagementsystem_274) = (Array__Int.get temp___standard__accountmanagementsystem_271 temp___standard__accountmanagementsystem_274)))))))
  )))

end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:294, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_276
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Measures__bpm
 use        Accountmanagementsystem__vitalsarray

 function temp___standard__accountmanagementsystem_276 
   (temp___standard__accountmanagementsystem_278 : Accountmanagementsystem__vitalsarray.vitalsarray) (temp___standard__accountmanagementsystem_279 : Measures__userid.__split) (temp___standard__accountmanagementsystem_280 : Measures__bpm.__split)  :Accountmanagementsystem__vitalsarray.vitalsarray
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_278  : Accountmanagementsystem__vitalsarray.vitalsarray.
  (forall temp___standard__accountmanagementsystem_279  : Measures__userid.__split.
  (forall temp___standard__accountmanagementsystem_280  : Measures__bpm.__split [(temp___standard__accountmanagementsystem_276 temp___standard__accountmanagementsystem_278 temp___standard__accountmanagementsystem_279 temp___standard__accountmanagementsystem_280)].
   (let temp___standard__accountmanagementsystem_277 = (temp___standard__accountmanagementsystem_276 temp___standard__accountmanagementsystem_278 temp___standard__accountmanagementsystem_279 temp___standard__accountmanagementsystem_280) in (
    (forall temp___standard__accountmanagementsystem_281  : int.
     (if ((temp___standard__accountmanagementsystem_281 = temp___standard__accountmanagementsystem_279)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_277 temp___standard__accountmanagementsystem_281) = (Measures__bpm.of_rep temp___standard__accountmanagementsystem_280))) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_277 temp___standard__accountmanagementsystem_281) = (Array__Int.get temp___standard__accountmanagementsystem_278 temp___standard__accountmanagementsystem_281)))))))
  )))

end

(* Module for defining the value of the update attribute at accountmanagementsystem.ads:295, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_283
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Measures__gpslocation
 use        Accountmanagementsystem__locationsarray

 function temp___standard__accountmanagementsystem_283 
   (temp___standard__accountmanagementsystem_285 : Accountmanagementsystem__locationsarray.locationsarray) (temp___standard__accountmanagementsystem_286 : Measures__userid.__split) (temp___standard__accountmanagementsystem_287 : Measures__gpslocation.gpslocation)  :Accountmanagementsystem__locationsarray.locationsarray
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_285  : Accountmanagementsystem__locationsarray.locationsarray.
  (forall temp___standard__accountmanagementsystem_286  : Measures__userid.__split.
  (forall temp___standard__accountmanagementsystem_287  : Measures__gpslocation.gpslocation [(temp___standard__accountmanagementsystem_283 temp___standard__accountmanagementsystem_285 temp___standard__accountmanagementsystem_286 temp___standard__accountmanagementsystem_287)].
   (let temp___standard__accountmanagementsystem_284 = (temp___standard__accountmanagementsystem_283 temp___standard__accountmanagementsystem_285 temp___standard__accountmanagementsystem_286 temp___standard__accountmanagementsystem_287) in (
    (forall temp___standard__accountmanagementsystem_288  : int.
     (if ((temp___standard__accountmanagementsystem_288 = temp___standard__accountmanagementsystem_286)) then (
      ((Array__Int.get temp___standard__accountmanagementsystem_284 temp___standard__accountmanagementsystem_288) = temp___standard__accountmanagementsystem_287)) else (
      ((Array__Int.get temp___standard__accountmanagementsystem_284 temp___standard__accountmanagementsystem_288) = (Array__Int.get temp___standard__accountmanagementsystem_285 temp___standard__accountmanagementsystem_288)))))))
  )))

end

(* Module for defining the value of the aggregate at accountmanagementsystem.adb:9, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_351
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Accountmanagementsystem__init__T2b

 function temp___standard__accountmanagementsystem_351 
   (temp___standard__accountmanagementsystem_353 : bool)  :Accountmanagementsystem__init__T2b.t2b
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_353  : bool [(temp___standard__accountmanagementsystem_351 temp___standard__accountmanagementsystem_353)].
   (let temp___standard__accountmanagementsystem_352 = (temp___standard__accountmanagementsystem_351 temp___standard__accountmanagementsystem_353) in (
    (forall temp___standard__accountmanagementsystem_354  : int.
     ((Array__Int.get temp___standard__accountmanagementsystem_352 temp___standard__accountmanagementsystem_354) = temp___standard__accountmanagementsystem_353))))
  )

end

(* Module for defining the value of the aggregate at accountmanagementsystem.adb:10, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_355
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__init__T4b

 function temp___standard__accountmanagementsystem_355 
   (temp___standard__accountmanagementsystem_357 : Measures__userid.__split)  :Accountmanagementsystem__init__T4b.t4b
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_357  : Measures__userid.__split [(temp___standard__accountmanagementsystem_355 temp___standard__accountmanagementsystem_357)].
   (let temp___standard__accountmanagementsystem_356 = (temp___standard__accountmanagementsystem_355 temp___standard__accountmanagementsystem_357) in (
    (forall temp___standard__accountmanagementsystem_358  : int.
     ((Array__Int.get temp___standard__accountmanagementsystem_356 temp___standard__accountmanagementsystem_358) = (Measures__userid.of_rep temp___standard__accountmanagementsystem_357)))))
  )

end

(* Module for defining the value of the aggregate at accountmanagementsystem.adb:11, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_359
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__init__T6b

 function temp___standard__accountmanagementsystem_359 
   (temp___standard__accountmanagementsystem_361 : Measures__userid.__split)  :Accountmanagementsystem__init__T6b.t6b
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_361  : Measures__userid.__split [(temp___standard__accountmanagementsystem_359 temp___standard__accountmanagementsystem_361)].
   (let temp___standard__accountmanagementsystem_360 = (temp___standard__accountmanagementsystem_359 temp___standard__accountmanagementsystem_361) in (
    (forall temp___standard__accountmanagementsystem_362  : int.
     ((Array__Int.get temp___standard__accountmanagementsystem_360 temp___standard__accountmanagementsystem_362) = (Measures__userid.of_rep temp___standard__accountmanagementsystem_361)))))
  )

end

(* Module for defining the value of the aggregate at accountmanagementsystem.adb:12, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_363
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__bpm
 use        Accountmanagementsystem__init__T8b

 function temp___standard__accountmanagementsystem_363 
   (temp___standard__accountmanagementsystem_365 : Measures__bpm.__split)  :Accountmanagementsystem__init__T8b.t8b
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_365  : Measures__bpm.__split [(temp___standard__accountmanagementsystem_363 temp___standard__accountmanagementsystem_365)].
   (let temp___standard__accountmanagementsystem_364 = (temp___standard__accountmanagementsystem_363 temp___standard__accountmanagementsystem_365) in (
    (forall temp___standard__accountmanagementsystem_366  : int.
     ((Array__Int.get temp___standard__accountmanagementsystem_364 temp___standard__accountmanagementsystem_366) = (Measures__bpm.of_rep temp___standard__accountmanagementsystem_365)))))
  )

end

(* Module for defining the value of the aggregate at accountmanagementsystem.adb:13, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_367
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__footsteps
 use        Accountmanagementsystem__init__T10b

 function temp___standard__accountmanagementsystem_367 
   (temp___standard__accountmanagementsystem_369 : Measures__footsteps.__split)  :Accountmanagementsystem__init__T10b.t10b
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_369  : Measures__footsteps.__split [(temp___standard__accountmanagementsystem_367 temp___standard__accountmanagementsystem_369)].
   (let temp___standard__accountmanagementsystem_368 = (temp___standard__accountmanagementsystem_367 temp___standard__accountmanagementsystem_369) in (
    (forall temp___standard__accountmanagementsystem_370  : int.
     ((Array__Int.get temp___standard__accountmanagementsystem_368 temp___standard__accountmanagementsystem_370) = (Measures__footsteps.of_rep temp___standard__accountmanagementsystem_369)))))
  )

end

(* Module for defining the value of the aggregate at accountmanagementsystem.adb:14, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_371
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__gpslocation
 use        Accountmanagementsystem__init__T12b

 function temp___standard__accountmanagementsystem_371 
   (temp___standard__accountmanagementsystem_373 : Measures__gpslocation.gpslocation)  :Accountmanagementsystem__init__T12b.t12b
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_373  : Measures__gpslocation.gpslocation [(temp___standard__accountmanagementsystem_371 temp___standard__accountmanagementsystem_373)].
   (let temp___standard__accountmanagementsystem_372 = (temp___standard__accountmanagementsystem_371 temp___standard__accountmanagementsystem_373) in (
    (forall temp___standard__accountmanagementsystem_374  : int.
     ((Array__Int.get temp___standard__accountmanagementsystem_372 temp___standard__accountmanagementsystem_374) = temp___standard__accountmanagementsystem_373))))
  )

end

(* Module for defining the value of the aggregate at accountmanagementsystem.adb:16, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_375
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Accountmanagementsystem__init__T14b

 function temp___standard__accountmanagementsystem_375 
   (temp___standard__accountmanagementsystem_377 : bool)  :Accountmanagementsystem__init__T14b.t14b
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_377  : bool [(temp___standard__accountmanagementsystem_375 temp___standard__accountmanagementsystem_377)].
   (let temp___standard__accountmanagementsystem_376 = (temp___standard__accountmanagementsystem_375 temp___standard__accountmanagementsystem_377) in (
    (forall temp___standard__accountmanagementsystem_378  : int.
     ((Array__Int.get temp___standard__accountmanagementsystem_376 temp___standard__accountmanagementsystem_378) = temp___standard__accountmanagementsystem_377))))
  )

end

(* Module for defining the value of the aggregate at accountmanagementsystem.adb:17, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_379
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Accountmanagementsystem__init__T16b

 function temp___standard__accountmanagementsystem_379 
   (temp___standard__accountmanagementsystem_381 : bool)  :Accountmanagementsystem__init__T16b.t16b
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_381  : bool [(temp___standard__accountmanagementsystem_379 temp___standard__accountmanagementsystem_381)].
   (let temp___standard__accountmanagementsystem_380 = (temp___standard__accountmanagementsystem_379 temp___standard__accountmanagementsystem_381) in (
    (forall temp___standard__accountmanagementsystem_382  : int.
     ((Array__Int.get temp___standard__accountmanagementsystem_380 temp___standard__accountmanagementsystem_382) = temp___standard__accountmanagementsystem_381))))
  )

end

(* Module for defining the value of the aggregate at accountmanagementsystem.adb:18, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_383
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Accountmanagementsystem__init__T18b

 function temp___standard__accountmanagementsystem_383 
   (temp___standard__accountmanagementsystem_385 : bool)  :Accountmanagementsystem__init__T18b.t18b
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_385  : bool [(temp___standard__accountmanagementsystem_383 temp___standard__accountmanagementsystem_385)].
   (let temp___standard__accountmanagementsystem_384 = (temp___standard__accountmanagementsystem_383 temp___standard__accountmanagementsystem_385) in (
    (forall temp___standard__accountmanagementsystem_386  : int.
     ((Array__Int.get temp___standard__accountmanagementsystem_384 temp___standard__accountmanagementsystem_386) = temp___standard__accountmanagementsystem_385))))
  )

end

(* Module for defining the value of the aggregate at accountmanagementsystem.adb:19, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_387
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Accountmanagementsystem__init__T20b

 function temp___standard__accountmanagementsystem_387 
   (temp___standard__accountmanagementsystem_389 : bool)  :Accountmanagementsystem__init__T20b.t20b
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_389  : bool [(temp___standard__accountmanagementsystem_387 temp___standard__accountmanagementsystem_389)].
   (let temp___standard__accountmanagementsystem_388 = (temp___standard__accountmanagementsystem_387 temp___standard__accountmanagementsystem_389) in (
    (forall temp___standard__accountmanagementsystem_390  : int.
     ((Array__Int.get temp___standard__accountmanagementsystem_388 temp___standard__accountmanagementsystem_390) = temp___standard__accountmanagementsystem_389))))
  )

end

(* Module for defining the value of the aggregate at accountmanagementsystem.adb:20, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_391
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Accountmanagementsystem__init__T22b

 function temp___standard__accountmanagementsystem_391 
   (temp___standard__accountmanagementsystem_393 : bool)  :Accountmanagementsystem__init__T22b.t22b
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_393  : bool [(temp___standard__accountmanagementsystem_391 temp___standard__accountmanagementsystem_393)].
   (let temp___standard__accountmanagementsystem_392 = (temp___standard__accountmanagementsystem_391 temp___standard__accountmanagementsystem_393) in (
    (forall temp___standard__accountmanagementsystem_394  : int.
     ((Array__Int.get temp___standard__accountmanagementsystem_392 temp___standard__accountmanagementsystem_394) = temp___standard__accountmanagementsystem_393))))
  )

end

(* Module for defining the value of the aggregate at accountmanagementsystem.adb:21, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_395
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Accountmanagementsystem__init__T24b

 function temp___standard__accountmanagementsystem_395 
   (temp___standard__accountmanagementsystem_397 : bool)  :Accountmanagementsystem__init__T24b.t24b
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_397  : bool [(temp___standard__accountmanagementsystem_395 temp___standard__accountmanagementsystem_397)].
   (let temp___standard__accountmanagementsystem_396 = (temp___standard__accountmanagementsystem_395 temp___standard__accountmanagementsystem_397) in (
    (forall temp___standard__accountmanagementsystem_398  : int.
     ((Array__Int.get temp___standard__accountmanagementsystem_396 temp___standard__accountmanagementsystem_398) = temp___standard__accountmanagementsystem_397))))
  )

end

(* Module for defining the value of the aggregate at accountmanagementsystem.adb:22, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_399
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Accountmanagementsystem__init__T26b

 function temp___standard__accountmanagementsystem_399 
   (temp___standard__accountmanagementsystem_401 : bool)  :Accountmanagementsystem__init__T26b.t26b
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_401  : bool [(temp___standard__accountmanagementsystem_399 temp___standard__accountmanagementsystem_401)].
   (let temp___standard__accountmanagementsystem_400 = (temp___standard__accountmanagementsystem_399 temp___standard__accountmanagementsystem_401) in (
    (forall temp___standard__accountmanagementsystem_402  : int.
     ((Array__Int.get temp___standard__accountmanagementsystem_400 temp___standard__accountmanagementsystem_402) = temp___standard__accountmanagementsystem_401))))
  )

end

(* Module for defining the value of the aggregate at accountmanagementsystem.adb:23, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_403
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Accountmanagementsystem__init__T28b

 function temp___standard__accountmanagementsystem_403 
   (temp___standard__accountmanagementsystem_405 : bool)  :Accountmanagementsystem__init__T28b.t28b
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_405  : bool [(temp___standard__accountmanagementsystem_403 temp___standard__accountmanagementsystem_405)].
   (let temp___standard__accountmanagementsystem_404 = (temp___standard__accountmanagementsystem_403 temp___standard__accountmanagementsystem_405) in (
    (forall temp___standard__accountmanagementsystem_406  : int.
     ((Array__Int.get temp___standard__accountmanagementsystem_404 temp___standard__accountmanagementsystem_406) = temp___standard__accountmanagementsystem_405))))
  )

end

(* Module for defining the value of the aggregate at accountmanagementsystem.adb:24, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_407
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Accountmanagementsystem__init__T30b

 function temp___standard__accountmanagementsystem_407 
   (temp___standard__accountmanagementsystem_409 : bool)  :Accountmanagementsystem__init__T30b.t30b
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_409  : bool [(temp___standard__accountmanagementsystem_407 temp___standard__accountmanagementsystem_409)].
   (let temp___standard__accountmanagementsystem_408 = (temp___standard__accountmanagementsystem_407 temp___standard__accountmanagementsystem_409) in (
    (forall temp___standard__accountmanagementsystem_410  : int.
     ((Array__Int.get temp___standard__accountmanagementsystem_408 temp___standard__accountmanagementsystem_410) = temp___standard__accountmanagementsystem_409))))
  )

end

(* Module for defining the value of the aggregate at accountmanagementsystem.adb:26, created in Gnat2Why.Expr.Transform_Aggregate.Generate_Logic_Function *)
module Temp___standard__accountmanagementsystem_411
 use import "_gnatprove_standard".Main
 use        Array__Int
 use        Accountmanagementsystem__emergencyrecord
 use        Accountmanagementsystem__init__T32b

 function temp___standard__accountmanagementsystem_411 
   (temp___standard__accountmanagementsystem_413 : Accountmanagementsystem__emergencyrecord.emergencyrecord)  :Accountmanagementsystem__init__T32b.t32b
 
 axiom def_axiom :
  (forall temp___standard__accountmanagementsystem_413  : Accountmanagementsystem__emergencyrecord.emergencyrecord [(temp___standard__accountmanagementsystem_411 temp___standard__accountmanagementsystem_413)].
   (let temp___standard__accountmanagementsystem_412 = (temp___standard__accountmanagementsystem_411 temp___standard__accountmanagementsystem_413) in (
    (forall temp___standard__accountmanagementsystem_414  : int.
     ((Array__Int.get temp___standard__accountmanagementsystem_412 temp___standard__accountmanagementsystem_414) = temp___standard__accountmanagementsystem_413))))
  )

end
(* Module giving axioms for the type entity "short_short_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_short_integer__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "short_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_integer__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "long_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_integer__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "long_long_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_long_integer__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "natural", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__natural__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "positive", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__positive__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "short_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__short_float__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__float__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "long_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_float__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "long_long_float", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__long_long_float__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__character__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "wide_character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_character__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "wide_wide_character", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_wide_character__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__string__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "wide_string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_string__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "wide_wide_string", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__wide_wide_string__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "duration", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__duration__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "integer_8", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_8__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "integer_16", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_16__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "integer_32", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_32__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "integer_64", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__integer_64__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "universal_integer", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__universal_integer__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "universal_real", created in Gnat2Why.Types.Generate_Type_Completion *)
module Standard__universal_real__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "max_userid" defined at measures.ads:7, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Measures__max_userid__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Measures__max_userid

 axiom max_userid__def_axiom :
  ((Measures__max_userid.max_userid ) = 100)

end

(* Module giving axioms for the type entity "TuseridB" defined at measures.ads:8, created in Gnat2Why.Types.Generate_Type_Completion *)
module Measures__TuseridB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "userid" defined at measures.ads:8, created in Gnat2Why.Types.Generate_Type_Completion *)
module Measures__userid__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "max_bpm" defined at measures.ads:11, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Measures__max_bpm__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Measures__max_bpm

 axiom max_bpm__def_axiom :
  ((Measures__max_bpm.max_bpm ) = 300)

end

(* Module giving axioms for the type entity "TbpmB" defined at measures.ads:12, created in Gnat2Why.Types.Generate_Type_Completion *)
module Measures__TbpmB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "bpm" defined at measures.ads:12, created in Gnat2Why.Types.Generate_Type_Completion *)
module Measures__bpm__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "max_footsteps" defined at measures.ads:15, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Measures__max_footsteps__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Measures__max_footsteps

 axiom max_footsteps__def_axiom :
  ((Measures__max_footsteps.max_footsteps ) = 100000)

end

(* Module giving axioms for the type entity "TfootstepsB" defined at measures.ads:16, created in Gnat2Why.Types.Generate_Type_Completion *)
module Measures__TfootstepsB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "footsteps" defined at measures.ads:16, created in Gnat2Why.Types.Generate_Type_Completion *)
module Measures__footsteps__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "TlatitudeB" defined at measures.ads:19, created in Gnat2Why.Types.Generate_Type_Completion *)
module Measures__TlatitudeB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "latitude" defined at measures.ads:19, created in Gnat2Why.Types.Generate_Type_Completion *)
module Measures__latitude__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "TlongitudeB" defined at measures.ads:20, created in Gnat2Why.Types.Generate_Type_Completion *)
module Measures__TlongitudeB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "longitude" defined at measures.ads:20, created in Gnat2Why.Types.Generate_Type_Completion *)
module Measures__longitude__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "gpslocation" defined at measures.ads:21, created in Gnat2Why.Types.Generate_Type_Completion *)
module Measures__gpslocation__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "TusersarrayB" defined at accountmanagementsystem.ads:14, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__TusersarrayB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "usersarray" defined at accountmanagementsystem.ads:14, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__usersarray__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "TuseruserarrayB" defined at accountmanagementsystem.ads:17, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__TuseruserarrayB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "useruserarray" defined at accountmanagementsystem.ads:17, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__useruserarray__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "TvitalsarrayB" defined at accountmanagementsystem.ads:20, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__TvitalsarrayB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "vitalsarray" defined at accountmanagementsystem.ads:20, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__vitalsarray__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "TfootstepsarrayB" defined at accountmanagementsystem.ads:21, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__TfootstepsarrayB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "footstepsarray" defined at accountmanagementsystem.ads:21, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__footstepsarray__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "TlocationsarrayB" defined at accountmanagementsystem.ads:22, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__TlocationsarrayB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "locationsarray" defined at accountmanagementsystem.ads:22, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__locationsarray__axiom
 use import "_gnatprove_standard".Main


end

(* Module for defining the value of constant "memergency" defined at accountmanagementsystem.ads:40, created in Gnat2Why.Decls.Translate_Constant_Value *)
module Accountmanagementsystem__memergency__axiom
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Accountmanagementsystem__memergency

 axiom memergency__def_axiom :
  ((Accountmanagementsystem__memergency.memergency ) = 0)

end

(* Module giving axioms for the type entity "TpermissionarrayB" defined at accountmanagementsystem.ads:43, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__TpermissionarrayB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "permissionarray" defined at accountmanagementsystem.ads:43, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__permissionarray__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "emergencyrecord" defined at accountmanagementsystem.ads:57, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__emergencyrecord__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "TemergencyrecordlistB" defined at accountmanagementsystem.ads:65, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__TemergencyrecordlistB__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "emergencyrecordlist" defined at accountmanagementsystem.ads:65, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__emergencyrecordlist__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T49s" defined at accountmanagementsystem.ads:75, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__L48s__T49s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T51s" defined at accountmanagementsystem.ads:77, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__L50s__T51s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T53s" defined at accountmanagementsystem.ads:78, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__L52s__T53s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T55s" defined at accountmanagementsystem.ads:79, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__L54s__T55s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T57s" defined at accountmanagementsystem.ads:80, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__L56s__T57s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T59s" defined at accountmanagementsystem.ads:81, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__L58s__T59s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T61s" defined at accountmanagementsystem.ads:85, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__L60s__T61s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T63s" defined at accountmanagementsystem.ads:87, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__L62s__T63s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T65s" defined at accountmanagementsystem.ads:89, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__L64s__T65s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T67s" defined at accountmanagementsystem.ads:91, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__L66s__T67s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T69s" defined at accountmanagementsystem.ads:93, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__L68s__T69s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T71s" defined at accountmanagementsystem.ads:95, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__L70s__T71s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T73s" defined at accountmanagementsystem.ads:97, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__L72s__T73s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T75s" defined at accountmanagementsystem.ads:99, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__L74s__T75s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T77s" defined at accountmanagementsystem.ads:101, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__L76s__T77s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T79s" defined at accountmanagementsystem.ads:103, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__L78s__T79s__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T1b" defined at accountmanagementsystem.adb:9, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T1b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T2b" defined at accountmanagementsystem.adb:9, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T2b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T3b" defined at accountmanagementsystem.adb:10, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T3b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T4b" defined at accountmanagementsystem.adb:10, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T4b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T5b" defined at accountmanagementsystem.adb:11, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T5b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T6b" defined at accountmanagementsystem.adb:11, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T6b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T7b" defined at accountmanagementsystem.adb:12, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T7b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T8b" defined at accountmanagementsystem.adb:12, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T8b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T9b" defined at accountmanagementsystem.adb:13, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T9b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T10b" defined at accountmanagementsystem.adb:13, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T10b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T11b" defined at accountmanagementsystem.adb:14, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T11b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T12b" defined at accountmanagementsystem.adb:14, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T12b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T13b" defined at accountmanagementsystem.adb:16, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T13b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T14b" defined at accountmanagementsystem.adb:16, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T14b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T15b" defined at accountmanagementsystem.adb:17, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T15b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T16b" defined at accountmanagementsystem.adb:17, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T16b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T17b" defined at accountmanagementsystem.adb:18, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T17b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T18b" defined at accountmanagementsystem.adb:18, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T18b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T19b" defined at accountmanagementsystem.adb:19, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T19b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T20b" defined at accountmanagementsystem.adb:19, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T20b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T21b" defined at accountmanagementsystem.adb:20, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T21b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T22b" defined at accountmanagementsystem.adb:20, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T22b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T23b" defined at accountmanagementsystem.adb:21, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T23b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T24b" defined at accountmanagementsystem.adb:21, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T24b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T25b" defined at accountmanagementsystem.adb:22, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T25b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T26b" defined at accountmanagementsystem.adb:22, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T26b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T27b" defined at accountmanagementsystem.adb:23, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T27b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T28b" defined at accountmanagementsystem.adb:23, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T28b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T29b" defined at accountmanagementsystem.adb:24, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T29b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T30b" defined at accountmanagementsystem.adb:24, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T30b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T31b" defined at accountmanagementsystem.adb:26, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T31b__axiom
 use import "_gnatprove_standard".Main


end

(* Module giving axioms for the type entity "T32b" defined at accountmanagementsystem.adb:26, created in Gnat2Why.Types.Generate_Type_Completion *)
module Accountmanagementsystem__init__T32b__axiom
 use import "_gnatprove_standard".Main


end

(* Module for declaring a program function (and possibly an axiom) for "contactemergency" defined at emergency.ads:12, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Emergency__contactemergency__axiom
 use import "_gnatprove_standard".Main
 use        Measures__gpslocation

 val contactemergency 
   (wearer : int) (vitals : int) (location : Measures__gpslocation.gpslocation)  :unit
  requires { true }
  ensures { true }


end

(* Module for declaring a program function (and possibly an axiom) for "init" defined at accountmanagementsystem.ads:72, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Accountmanagementsystem__init__axiom
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__vitals
 use        Accountmanagementsystem__mfootsteps
 use        Accountmanagementsystem__locations
 use        Accountmanagementsystem__friendfootsteppermission
 use        Accountmanagementsystem__friendlocationpermission
 use        Accountmanagementsystem__friendvitalpermission
 use        Accountmanagementsystem__insurerfootsteppermission
 use        Accountmanagementsystem__insurerlocationpermission
 use        Accountmanagementsystem__insurervitalpermission
 use        Accountmanagementsystem__emergencyfootsteppermission
 use        Accountmanagementsystem__emergencylocationpermission
 use        Accountmanagementsystem__emergencyvitalpermission
 use        Accountmanagementsystem__emrecordlist
 use import "_gnatprove_standard".Main
 use import "int".Int
 use import "real".RealInfix
 use        Array__Int
 use        Measures__userid
 use        Measures__bpm
 use        Measures__footsteps
 use        Measures__latitude
 use        Measures__longitude
 use        Measures__gpslocation
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__useruserarray
 use        Accountmanagementsystem__vitalsarray
 use        Accountmanagementsystem__footstepsarray
 use        Accountmanagementsystem__locationsarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__vitals
 use        Accountmanagementsystem__mfootsteps
 use        Accountmanagementsystem__locations
 use        Accountmanagementsystem__permissionarray
 use        Accountmanagementsystem__friendfootsteppermission
 use        Accountmanagementsystem__friendlocationpermission
 use        Accountmanagementsystem__friendvitalpermission
 use        Accountmanagementsystem__insurerfootsteppermission
 use        Accountmanagementsystem__insurerlocationpermission
 use        Accountmanagementsystem__insurervitalpermission
 use        Accountmanagementsystem__emergencyfootsteppermission
 use        Accountmanagementsystem__emergencylocationpermission
 use        Accountmanagementsystem__emergencyvitalpermission
 use        Accountmanagementsystem__emergencyrecord
 use        Accountmanagementsystem__emergencyrecordlist
 use        Accountmanagementsystem__emrecordlist

 val init 
   (__void_param : unit)  :unit
  requires { true }
  ensures { ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> (if (( (i <> ( -1 )) /\ (i <> 0) )) then (
    ( ((Array__Int.get !Accountmanagementsystem__users.users i) = True) <-> true )) else (
    ( ((Array__Int.get !Accountmanagementsystem__users.users i) = True) <-> false ))) )) /\ (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ((Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__friends.friends i)) = ( -1 )) )) ) /\ (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ((Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__insurers.insurers i)) = ( -1 )) )) ) /\ (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ((Measures__bpm.to_rep (Array__Int.get !Accountmanagementsystem__vitals.vitals i)) = ( -1 )) )) ) /\ (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ((Measures__footsteps.to_rep (Array__Int.get !Accountmanagementsystem__mfootsteps.mfootsteps i)) = 0) )) ) /\ (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ((Measures__gpslocation.bool_eq (Array__Int.get !Accountmanagementsystem__locations.locations i) { Measures__gpslocation.__split_fields = { Measures__gpslocation.rec__lat = (Measures__latitude.of_real (0.0E-1)); Measures__gpslocation.rec__long = (Measures__longitude.of_real (0.0E-1)) } }) = True) )) ) /\ (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( ((Array__Int.get !Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission i) = True) <-> false ) )) ) /\ (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( ((Array__Int.get !Accountmanagementsystem__friendlocationpermission.friendlocationpermission i) = True) <-> false ) )) ) /\ (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( ((Array__Int.get !Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission i) = True) <-> false ) )) ) /\ (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( ((Array__Int.get !Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission i) = True) <-> true ) )) ) /\ (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( ((Array__Int.get !Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission i) = True) <-> false ) )) ) /\ (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( ((Array__Int.get !Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission i) = True) <-> false ) )) ) /\ (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( ((Array__Int.get !Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission i) = True) <-> false ) )) ) /\ (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( ((Array__Int.get !Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission i) = True) <-> false ) )) ) /\ (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( ((Array__Int.get !Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission i) = True) <-> false ) )) ) /\ (forall i  : int.
   ( ( (0 <= i) /\ (i <= 2147483647) ) -> ((Accountmanagementsystem__emergencyrecord.bool_eq (Array__Int.get !Accountmanagementsystem__emrecordlist.emrecordlist i) { Accountmanagementsystem__emergencyrecord.__split_fields = { Accountmanagementsystem__emergencyrecord.rec__user = (Measures__userid.of_rep ( -1 )); Accountmanagementsystem__emergencyrecord.rec__vitals = (Measures__bpm.of_rep ( -1 )); Accountmanagementsystem__emergencyrecord.rec__location = { Measures__gpslocation.__split_fields = { Measures__gpslocation.rec__lat = (Measures__latitude.of_real (0.0E-1)); Measures__gpslocation.rec__long = (Measures__longitude.of_real (0.0E-1)) } } } }) = True) )) ) }
  writes {Accountmanagementsystem__users.users, Accountmanagementsystem__insurers.insurers, Accountmanagementsystem__friends.friends, Accountmanagementsystem__vitals.vitals, Accountmanagementsystem__mfootsteps.mfootsteps, Accountmanagementsystem__locations.locations, Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission, Accountmanagementsystem__friendlocationpermission.friendlocationpermission, Accountmanagementsystem__friendvitalpermission.friendvitalpermission, Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission, Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission, Accountmanagementsystem__insurervitalpermission.insurervitalpermission, Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission, Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission, Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission, Accountmanagementsystem__emrecordlist.emrecordlist }


end

(* Module for declaring a program function (and possibly an axiom) for "createuser" defined at accountmanagementsystem.ads:106, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Accountmanagementsystem__createuser__axiom
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__latestuser
 use        Accountmanagementsystem__emergencyfootsteppermission
 use        Accountmanagementsystem__emergencylocationpermission
 use        Accountmanagementsystem__emergencyvitalpermission
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__latestuser
 use        Accountmanagementsystem__emergencyfootsteppermission
 use        Accountmanagementsystem__emergencylocationpermission
 use        Accountmanagementsystem__emergencyvitalpermission
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__latestuser
 use        Accountmanagementsystem__permissionarray
 use        Accountmanagementsystem__emergencyfootsteppermission
 use        Accountmanagementsystem__emergencylocationpermission
 use        Accountmanagementsystem__emergencyvitalpermission
 use        Temp___standard__accountmanagementsystem_16
 use        Temp___standard__accountmanagementsystem_23
 use        Temp___standard__accountmanagementsystem_30
 use        Temp___standard__accountmanagementsystem_37

 val createuser 
   (newuser : ref Measures__userid.__split)  :unit
  requires { (!Accountmanagementsystem__latestuser.latestuser < 100) }
  ensures { ( ( ( ( ( (!Accountmanagementsystem__latestuser.latestuser = ((old !Accountmanagementsystem__latestuser.latestuser ) + 1)) /\ ((let temp___standard__accountmanagementsystem_22 = (Temp___standard__accountmanagementsystem_16.temp___standard__accountmanagementsystem_16 (old !Accountmanagementsystem__users.users ) !newuser (Boolean.of_int 1)) in (
   (Array__Int.bool_eq !Accountmanagementsystem__users.users Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_22 Measures__userid.first Measures__userid.last)))
   = True) ) /\ ((let temp___standard__accountmanagementsystem_29 = (Temp___standard__accountmanagementsystem_23.temp___standard__accountmanagementsystem_23 (old !Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission ) !newuser (Boolean.of_int 1)) in (
   (Array__Int.bool_eq !Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_29 Measures__userid.first Measures__userid.last)))
   = True) ) /\ ((let temp___standard__accountmanagementsystem_36 = (Temp___standard__accountmanagementsystem_30.temp___standard__accountmanagementsystem_30 (old !Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission ) !newuser (Boolean.of_int 1)) in (
   (Array__Int.bool_eq !Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_36 Measures__userid.first Measures__userid.last)))
   = True) ) /\ ((let temp___standard__accountmanagementsystem_43 = (Temp___standard__accountmanagementsystem_37.temp___standard__accountmanagementsystem_37 (old !Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission ) !newuser (Boolean.of_int 1)) in (
   (Array__Int.bool_eq !Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_43 Measures__userid.first Measures__userid.last)))
   = True) ) /\ ( (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last !newuser) /\ (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last !Accountmanagementsystem__latestuser.latestuser) ) ) }
  reads {Accountmanagementsystem__users.users, Accountmanagementsystem__latestuser.latestuser, Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission, Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission, Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission }
  writes {Accountmanagementsystem__users.users, Accountmanagementsystem__latestuser.latestuser, Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission, Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission, Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission, newuser }


end

(* Module for declaring a program function (and possibly an axiom) for "setinsurer" defined at accountmanagementsystem.ads:118, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Accountmanagementsystem__setinsurer__axiom
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__insurerfootsteppermission
 use        Accountmanagementsystem__insurerlocationpermission
 use        Accountmanagementsystem__insurervitalpermission
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__insurerfootsteppermission
 use        Accountmanagementsystem__insurerlocationpermission
 use        Accountmanagementsystem__insurervitalpermission
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__useruserarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__insurerfootsteppermission
 use        Accountmanagementsystem__insurerlocationpermission
 use        Accountmanagementsystem__insurervitalpermission
 use        Temp___standard__accountmanagementsystem_48

 val setinsurer 
   (wearer : int) (insurer : int)  :unit
  requires { ( ( ( ( ( ( ( ( (( -1 ) <= wearer) /\ (wearer <= 100) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users wearer) = True) <-> true ) ) /\ ( (( -1 ) <= insurer) /\ (insurer <= 100) ) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users insurer) = True) <-> true ) ) /\ (insurer <> wearer) ) /\ (insurer <> (Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__friends.friends wearer))) ) /\ (insurer <> 0) ) /\ (insurer <> ( -1 )) ) }
  ensures { ((let temp___standard__accountmanagementsystem_54 = (Temp___standard__accountmanagementsystem_48.temp___standard__accountmanagementsystem_48 (old !Accountmanagementsystem__insurers.insurers ) wearer insurer) in (
   (Array__Int.bool_eq !Accountmanagementsystem__insurers.insurers Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_54 Measures__userid.first Measures__userid.last)))
   = True) }
  reads {Accountmanagementsystem__users.users, Accountmanagementsystem__insurers.insurers, Accountmanagementsystem__friends.friends, Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission, Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission, Accountmanagementsystem__insurervitalpermission.insurervitalpermission }
  writes {Accountmanagementsystem__insurers.insurers, Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission, Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission, Accountmanagementsystem__insurervitalpermission.insurervitalpermission }


end

(* Module for declaring a program function (and possibly an axiom) for "removeinsurer" defined at accountmanagementsystem.ads:130, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Accountmanagementsystem__removeinsurer__axiom
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__insurerfootsteppermission
 use        Accountmanagementsystem__insurerlocationpermission
 use        Accountmanagementsystem__insurervitalpermission
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__insurerfootsteppermission
 use        Accountmanagementsystem__insurerlocationpermission
 use        Accountmanagementsystem__insurervitalpermission
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__useruserarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__permissionarray
 use        Accountmanagementsystem__insurerfootsteppermission
 use        Accountmanagementsystem__insurerlocationpermission
 use        Accountmanagementsystem__insurervitalpermission
 use        Temp___standard__accountmanagementsystem_61
 use        Temp___standard__accountmanagementsystem_68
 use        Temp___standard__accountmanagementsystem_75

 val removeinsurer 
   (wearer : int)  :unit
  requires { ( ( ( (( -1 ) <= wearer) /\ (wearer <= 100) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users wearer) = True) <-> true ) ) /\ ((Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__insurers.insurers wearer)) <> ( -1 )) ) }
  ensures { ( ( ((let temp___standard__accountmanagementsystem_67 = (Temp___standard__accountmanagementsystem_61.temp___standard__accountmanagementsystem_61 (old !Accountmanagementsystem__insurers.insurers ) wearer ( -1 )) in (
   (Array__Int.bool_eq !Accountmanagementsystem__insurers.insurers Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_67 Measures__userid.first Measures__userid.last)))
   = True) /\ ((let temp___standard__accountmanagementsystem_74 = (Temp___standard__accountmanagementsystem_68.temp___standard__accountmanagementsystem_68 (old !Accountmanagementsystem__insurervitalpermission.insurervitalpermission ) wearer (Boolean.of_int 0)) in (
   (Array__Int.bool_eq !Accountmanagementsystem__insurervitalpermission.insurervitalpermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_74 Measures__userid.first Measures__userid.last)))
   = True) ) /\ ((let temp___standard__accountmanagementsystem_81 = (Temp___standard__accountmanagementsystem_75.temp___standard__accountmanagementsystem_75 (old !Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission ) wearer (Boolean.of_int 0)) in (
   (Array__Int.bool_eq !Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_81 Measures__userid.first Measures__userid.last)))
   = True) ) }
  reads {Accountmanagementsystem__users.users, Accountmanagementsystem__insurers.insurers, Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission, Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission, Accountmanagementsystem__insurervitalpermission.insurervitalpermission }
  writes {Accountmanagementsystem__insurers.insurers, Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission, Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission, Accountmanagementsystem__insurervitalpermission.insurervitalpermission }


end

(* Module for declaring a program function (and possibly an axiom) for "setfriend" defined at accountmanagementsystem.ads:140, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Accountmanagementsystem__setfriend__axiom
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__friendfootsteppermission
 use        Accountmanagementsystem__friendlocationpermission
 use        Accountmanagementsystem__friendvitalpermission
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__friendfootsteppermission
 use        Accountmanagementsystem__friendlocationpermission
 use        Accountmanagementsystem__friendvitalpermission
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__useruserarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__friendfootsteppermission
 use        Accountmanagementsystem__friendlocationpermission
 use        Accountmanagementsystem__friendvitalpermission
 use        Temp___standard__accountmanagementsystem_86

 val setfriend 
   (wearer : int) (friend : int)  :unit
  requires { ( ( ( ( ( ( ( ( (( -1 ) <= wearer) /\ (wearer <= 100) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users wearer) = True) <-> true ) ) /\ ( (( -1 ) <= friend) /\ (friend <= 100) ) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users friend) = True) <-> true ) ) /\ (friend <> wearer) ) /\ (friend <> (Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__insurers.insurers wearer))) ) /\ (friend <> 0) ) /\ (friend <> ( -1 )) ) }
  ensures { ((let temp___standard__accountmanagementsystem_92 = (Temp___standard__accountmanagementsystem_86.temp___standard__accountmanagementsystem_86 (old !Accountmanagementsystem__friends.friends ) wearer friend) in (
   (Array__Int.bool_eq !Accountmanagementsystem__friends.friends Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_92 Measures__userid.first Measures__userid.last)))
   = True) }
  reads {Accountmanagementsystem__users.users, Accountmanagementsystem__insurers.insurers, Accountmanagementsystem__friends.friends, Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission, Accountmanagementsystem__friendlocationpermission.friendlocationpermission, Accountmanagementsystem__friendvitalpermission.friendvitalpermission }
  writes {Accountmanagementsystem__friends.friends, Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission, Accountmanagementsystem__friendlocationpermission.friendlocationpermission, Accountmanagementsystem__friendvitalpermission.friendvitalpermission }


end

(* Module for declaring a program function (and possibly an axiom) for "removefriend" defined at accountmanagementsystem.ads:152, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Accountmanagementsystem__removefriend__axiom
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__friendfootsteppermission
 use        Accountmanagementsystem__friendlocationpermission
 use        Accountmanagementsystem__friendvitalpermission
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__friendfootsteppermission
 use        Accountmanagementsystem__friendlocationpermission
 use        Accountmanagementsystem__friendvitalpermission
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__useruserarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__permissionarray
 use        Accountmanagementsystem__friendfootsteppermission
 use        Accountmanagementsystem__friendlocationpermission
 use        Accountmanagementsystem__friendvitalpermission
 use        Temp___standard__accountmanagementsystem_99
 use        Temp___standard__accountmanagementsystem_106
 use        Temp___standard__accountmanagementsystem_113
 use        Temp___standard__accountmanagementsystem_120

 val removefriend 
   (wearer : int)  :unit
  requires { ( ( ( (( -1 ) <= wearer) /\ (wearer <= 100) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users wearer) = True) <-> true ) ) /\ ((Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__friends.friends wearer)) <> ( -1 )) ) }
  ensures { ( ( ( ((let temp___standard__accountmanagementsystem_105 = (Temp___standard__accountmanagementsystem_99.temp___standard__accountmanagementsystem_99 (old !Accountmanagementsystem__friends.friends ) wearer ( -1 )) in (
   (Array__Int.bool_eq !Accountmanagementsystem__friends.friends Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_105 Measures__userid.first Measures__userid.last)))
   = True) /\ ((let temp___standard__accountmanagementsystem_112 = (Temp___standard__accountmanagementsystem_106.temp___standard__accountmanagementsystem_106 (old !Accountmanagementsystem__friendvitalpermission.friendvitalpermission ) wearer (Boolean.of_int 0)) in (
   (Array__Int.bool_eq !Accountmanagementsystem__friendvitalpermission.friendvitalpermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_112 Measures__userid.first Measures__userid.last)))
   = True) ) /\ ((let temp___standard__accountmanagementsystem_119 = (Temp___standard__accountmanagementsystem_113.temp___standard__accountmanagementsystem_113 (old !Accountmanagementsystem__friendlocationpermission.friendlocationpermission ) wearer (Boolean.of_int 0)) in (
   (Array__Int.bool_eq !Accountmanagementsystem__friendlocationpermission.friendlocationpermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_119 Measures__userid.first Measures__userid.last)))
   = True) ) /\ ((let temp___standard__accountmanagementsystem_126 = (Temp___standard__accountmanagementsystem_120.temp___standard__accountmanagementsystem_120 (old !Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission ) wearer (Boolean.of_int 0)) in (
   (Array__Int.bool_eq !Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_126 Measures__userid.first Measures__userid.last)))
   = True) ) }
  reads {Accountmanagementsystem__users.users, Accountmanagementsystem__friends.friends, Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission, Accountmanagementsystem__friendlocationpermission.friendlocationpermission, Accountmanagementsystem__friendvitalpermission.friendvitalpermission }
  writes {Accountmanagementsystem__friends.friends, Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission, Accountmanagementsystem__friendlocationpermission.friendlocationpermission, Accountmanagementsystem__friendvitalpermission.friendvitalpermission }


end

(* Module for declaring a program function (and possibly an axiom) for "updatevitals" defined at accountmanagementsystem.ads:164, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Accountmanagementsystem__updatevitals__axiom
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__vitals
 use        Accountmanagementsystem__vitals
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__vitalsarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__vitals
 use        Temp___standard__accountmanagementsystem_131

 val updatevitals 
   (wearer : int) (newvitals : int)  :unit
  requires { ( ( (( -1 ) <= wearer) /\ (wearer <= 100) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users wearer) = True) <-> true ) ) }
  ensures { ((let temp___standard__accountmanagementsystem_137 = (Temp___standard__accountmanagementsystem_131.temp___standard__accountmanagementsystem_131 (old !Accountmanagementsystem__vitals.vitals ) wearer newvitals) in (
   (Array__Int.bool_eq !Accountmanagementsystem__vitals.vitals Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_137 Measures__userid.first Measures__userid.last)))
   = True) }
  reads {Accountmanagementsystem__users.users, Accountmanagementsystem__vitals.vitals }
  writes {Accountmanagementsystem__vitals.vitals }


end

(* Module for declaring a program function (and possibly an axiom) for "updatefootsteps" defined at accountmanagementsystem.ads:168, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Accountmanagementsystem__updatefootsteps__axiom
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__mfootsteps
 use        Accountmanagementsystem__mfootsteps
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__footstepsarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__mfootsteps
 use        Temp___standard__accountmanagementsystem_139

 val updatefootsteps 
   (wearer : int) (newfootsteps : int)  :unit
  requires { ( ( (( -1 ) <= wearer) /\ (wearer <= 100) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users wearer) = True) <-> true ) ) }
  ensures { ((let temp___standard__accountmanagementsystem_145 = (Temp___standard__accountmanagementsystem_139.temp___standard__accountmanagementsystem_139 (old !Accountmanagementsystem__mfootsteps.mfootsteps ) wearer newfootsteps) in (
   (Array__Int.bool_eq !Accountmanagementsystem__mfootsteps.mfootsteps Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_145 Measures__userid.first Measures__userid.last)))
   = True) }
  reads {Accountmanagementsystem__users.users, Accountmanagementsystem__mfootsteps.mfootsteps }
  writes {Accountmanagementsystem__mfootsteps.mfootsteps }


end

(* Module for declaring a program function (and possibly an axiom) for "updatelocation" defined at accountmanagementsystem.ads:173, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Accountmanagementsystem__updatelocation__axiom
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__locations
 use        Accountmanagementsystem__locations
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int
 use        Measures__userid
 use        Measures__gpslocation
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__locationsarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__locations
 use        Temp___standard__accountmanagementsystem_147

 val updatelocation 
   (wearer : int) (newlocation : Measures__gpslocation.gpslocation)  :unit
  requires { ( ( (( -1 ) <= wearer) /\ (wearer <= 100) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users wearer) = True) <-> true ) ) }
  ensures { ((let temp___standard__accountmanagementsystem_153 = (Temp___standard__accountmanagementsystem_147.temp___standard__accountmanagementsystem_147 (old !Accountmanagementsystem__locations.locations ) wearer newlocation) in (
   (Array__Int.bool_eq !Accountmanagementsystem__locations.locations Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_153 Measures__userid.first Measures__userid.last)))
   = True) }
  reads {Accountmanagementsystem__users.users, Accountmanagementsystem__locations.locations }
  writes {Accountmanagementsystem__locations.locations }


end

(* Module for declaring a program function (and possibly an axiom) for "readvitals" defined at accountmanagementsystem.ads:189, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Accountmanagementsystem__readvitals__axiom
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__vitals
 use        Accountmanagementsystem__friendvitalpermission
 use        Accountmanagementsystem__insurervitalpermission
 use        Accountmanagementsystem__emergencyvitalpermission
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int
 use        Measures__userid
 use        Measures__bpm
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__useruserarray
 use        Accountmanagementsystem__vitalsarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__vitals
 use        Accountmanagementsystem__permissionarray
 use        Accountmanagementsystem__friendvitalpermission
 use        Accountmanagementsystem__insurervitalpermission
 use        Accountmanagementsystem__emergencyvitalpermission
 use        Accountmanagementsystem__readvitals

 val readvitals 
   (requester : int) (targetuser : int)  :Measures__bpm.__split
  requires { ( ( ( ( (( -1 ) <= targetuser) /\ (targetuser <= 100) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users targetuser) = True) <-> true ) ) /\ ( (( -1 ) <= requester) /\ (requester <= 100) ) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users requester) = True) <-> true ) ) }
  ensures { ( (result = (Accountmanagementsystem__readvitals.readvitals requester targetuser !Accountmanagementsystem__users.users !Accountmanagementsystem__insurers.insurers !Accountmanagementsystem__friends.friends !Accountmanagementsystem__vitals.vitals !Accountmanagementsystem__friendvitalpermission.friendvitalpermission !Accountmanagementsystem__insurervitalpermission.insurervitalpermission !Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission)) /\ ( (Measures__bpm.dynamic_property Measures__bpm.first Measures__bpm.last result) /\ (result = (if (( ( ( (requester = targetuser) \/ ( (requester = 0) /\ ( ((Array__Int.get !Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission targetuser) = True) <-> true ) ) ) \/ ( (requester = (Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__friends.friends targetuser))) /\ ( ((Array__Int.get !Accountmanagementsystem__friendvitalpermission.friendvitalpermission targetuser) = True) <-> true ) ) ) \/ ( (requester = (Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__insurers.insurers targetuser))) /\ ( ((Array__Int.get !Accountmanagementsystem__insurervitalpermission.insurervitalpermission targetuser) = True) <-> true ) ) )) then (
   (Measures__bpm.to_rep (Array__Int.get !Accountmanagementsystem__vitals.vitals targetuser))) else (
   ( -1 )))) ) ) }

 
 axiom readvitals__post_axiom :
  (forall requester targetuser  : int.
  (forall accountmanagementsystem__users  : Accountmanagementsystem__usersarray.usersarray.
  (forall accountmanagementsystem__insurers accountmanagementsystem__friends  : Accountmanagementsystem__useruserarray.useruserarray.
  (forall accountmanagementsystem__vitals  : Accountmanagementsystem__vitalsarray.vitalsarray.
  (forall accountmanagementsystem__friendvitalpermission accountmanagementsystem__insurervitalpermission accountmanagementsystem__emergencyvitalpermission  : Accountmanagementsystem__permissionarray.permissionarray [(Accountmanagementsystem__readvitals.readvitals requester targetuser accountmanagementsystem__users accountmanagementsystem__insurers accountmanagementsystem__friends accountmanagementsystem__vitals accountmanagementsystem__friendvitalpermission accountmanagementsystem__insurervitalpermission accountmanagementsystem__emergencyvitalpermission)].
   ( ( ( (Measures__userid.in_range requester) /\ (Measures__userid.in_range targetuser) ) /\ ( ( ( ( (( -1 ) <= targetuser) /\ (targetuser <= 100) ) /\ ( ((Array__Int.get accountmanagementsystem__users targetuser) = True) <-> true ) ) /\ ( (( -1 ) <= requester) /\ (requester <= 100) ) ) /\ ( ((Array__Int.get accountmanagementsystem__users requester) = True) <-> true ) ) ) -> (let result = (Accountmanagementsystem__readvitals.readvitals requester targetuser accountmanagementsystem__users accountmanagementsystem__insurers accountmanagementsystem__friends accountmanagementsystem__vitals accountmanagementsystem__friendvitalpermission accountmanagementsystem__insurervitalpermission accountmanagementsystem__emergencyvitalpermission) in (
    ( (result = (if (( ( ( (requester = targetuser) \/ ( (requester = 0) /\ ( ((Array__Int.get accountmanagementsystem__emergencyvitalpermission targetuser) = True) <-> true ) ) ) \/ ( (requester = (Measures__userid.to_rep (Array__Int.get accountmanagementsystem__friends targetuser))) /\ ( ((Array__Int.get accountmanagementsystem__friendvitalpermission targetuser) = True) <-> true ) ) ) \/ ( (requester = (Measures__userid.to_rep (Array__Int.get accountmanagementsystem__insurers targetuser))) /\ ( ((Array__Int.get accountmanagementsystem__insurervitalpermission targetuser) = True) <-> true ) ) )) then (
     (Measures__bpm.to_rep (Array__Int.get accountmanagementsystem__vitals targetuser))) else (
     ( -1 )))) /\ (Measures__bpm.dynamic_property Measures__bpm.first Measures__bpm.last result) )))
    ))))))

end

(* Module for declaring a program function (and possibly an axiom) for "readfootsteps" defined at accountmanagementsystem.ads:203, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Accountmanagementsystem__readfootsteps__axiom
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__mfootsteps
 use        Accountmanagementsystem__friendfootsteppermission
 use        Accountmanagementsystem__insurerfootsteppermission
 use        Accountmanagementsystem__emergencyfootsteppermission
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int
 use        Measures__userid
 use        Measures__footsteps
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__useruserarray
 use        Accountmanagementsystem__footstepsarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__mfootsteps
 use        Accountmanagementsystem__permissionarray
 use        Accountmanagementsystem__friendfootsteppermission
 use        Accountmanagementsystem__insurerfootsteppermission
 use        Accountmanagementsystem__emergencyfootsteppermission
 use        Accountmanagementsystem__readfootsteps

 val readfootsteps 
   (requester : int) (targetuser : int)  :Measures__footsteps.__split
  requires { ( ( ( ( (( -1 ) <= targetuser) /\ (targetuser <= 100) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users targetuser) = True) <-> true ) ) /\ ( (( -1 ) <= requester) /\ (requester <= 100) ) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users requester) = True) <-> true ) ) }
  ensures { ( (result = (Accountmanagementsystem__readfootsteps.readfootsteps requester targetuser !Accountmanagementsystem__users.users !Accountmanagementsystem__insurers.insurers !Accountmanagementsystem__friends.friends !Accountmanagementsystem__mfootsteps.mfootsteps !Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission !Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission !Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission)) /\ ( (Measures__footsteps.dynamic_property Measures__footsteps.first Measures__footsteps.last result) /\ (result = (if (( ( ( (requester = targetuser) \/ ( (requester = 0) /\ ( ((Array__Int.get !Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission targetuser) = True) <-> true ) ) ) \/ ( (requester = (Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__friends.friends targetuser))) /\ ( ((Array__Int.get !Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission targetuser) = True) <-> true ) ) ) \/ ( (requester = (Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__insurers.insurers targetuser))) /\ ( ((Array__Int.get !Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission targetuser) = True) <-> true ) ) )) then (
   targetuser) else (
   0))) ) ) }

 
 axiom readfootsteps__post_axiom :
  (forall requester targetuser  : int.
  (forall accountmanagementsystem__users  : Accountmanagementsystem__usersarray.usersarray.
  (forall accountmanagementsystem__insurers accountmanagementsystem__friends  : Accountmanagementsystem__useruserarray.useruserarray.
  (forall accountmanagementsystem__mfootsteps  : Accountmanagementsystem__footstepsarray.footstepsarray.
  (forall accountmanagementsystem__friendfootsteppermission accountmanagementsystem__insurerfootsteppermission accountmanagementsystem__emergencyfootsteppermission  : Accountmanagementsystem__permissionarray.permissionarray [(Accountmanagementsystem__readfootsteps.readfootsteps requester targetuser accountmanagementsystem__users accountmanagementsystem__insurers accountmanagementsystem__friends accountmanagementsystem__mfootsteps accountmanagementsystem__friendfootsteppermission accountmanagementsystem__insurerfootsteppermission accountmanagementsystem__emergencyfootsteppermission)].
   ( ( ( (Measures__userid.in_range requester) /\ (Measures__userid.in_range targetuser) ) /\ ( ( ( ( (( -1 ) <= targetuser) /\ (targetuser <= 100) ) /\ ( ((Array__Int.get accountmanagementsystem__users targetuser) = True) <-> true ) ) /\ ( (( -1 ) <= requester) /\ (requester <= 100) ) ) /\ ( ((Array__Int.get accountmanagementsystem__users requester) = True) <-> true ) ) ) -> (let result = (Accountmanagementsystem__readfootsteps.readfootsteps requester targetuser accountmanagementsystem__users accountmanagementsystem__insurers accountmanagementsystem__friends accountmanagementsystem__mfootsteps accountmanagementsystem__friendfootsteppermission accountmanagementsystem__insurerfootsteppermission accountmanagementsystem__emergencyfootsteppermission) in (
    ( (result = (if (( ( ( (requester = targetuser) \/ ( (requester = 0) /\ ( ((Array__Int.get accountmanagementsystem__emergencyfootsteppermission targetuser) = True) <-> true ) ) ) \/ ( (requester = (Measures__userid.to_rep (Array__Int.get accountmanagementsystem__friends targetuser))) /\ ( ((Array__Int.get accountmanagementsystem__friendfootsteppermission targetuser) = True) <-> true ) ) ) \/ ( (requester = (Measures__userid.to_rep (Array__Int.get accountmanagementsystem__insurers targetuser))) /\ ( ((Array__Int.get accountmanagementsystem__insurerfootsteppermission targetuser) = True) <-> true ) ) )) then (
     targetuser) else (
     0))) /\ (Measures__footsteps.dynamic_property Measures__footsteps.first Measures__footsteps.last result) )))
    ))))))

end

(* Module for declaring a program function (and possibly an axiom) for "readlocation" defined at accountmanagementsystem.ads:218, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Accountmanagementsystem__readlocation__axiom
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__locations
 use        Accountmanagementsystem__friendlocationpermission
 use        Accountmanagementsystem__insurerlocationpermission
 use        Accountmanagementsystem__emergencylocationpermission
 use import "_gnatprove_standard".Main
 use import "int".Int
 use import "real".RealInfix
 use        Array__Int
 use        Measures__userid
 use        Measures__latitude
 use        Measures__longitude
 use        Measures__gpslocation
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__useruserarray
 use        Accountmanagementsystem__locationsarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__locations
 use        Accountmanagementsystem__permissionarray
 use        Accountmanagementsystem__friendlocationpermission
 use        Accountmanagementsystem__insurerlocationpermission
 use        Accountmanagementsystem__emergencylocationpermission
 use        Accountmanagementsystem__readlocation

 val readlocation 
   (requester : int) (targetuser : int)  :Measures__gpslocation.gpslocation
  requires { ( ( ( ( (( -1 ) <= targetuser) /\ (targetuser <= 100) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users targetuser) = True) <-> true ) ) /\ ( (( -1 ) <= requester) /\ (requester <= 100) ) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users requester) = True) <-> true ) ) }
  ensures { ( (result = (Accountmanagementsystem__readlocation.readlocation requester targetuser !Accountmanagementsystem__users.users !Accountmanagementsystem__insurers.insurers !Accountmanagementsystem__friends.friends !Accountmanagementsystem__locations.locations !Accountmanagementsystem__friendlocationpermission.friendlocationpermission !Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission !Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission)) /\ ((Measures__gpslocation.bool_eq result (if (( ( ( (requester = targetuser) \/ ( (requester = 0) /\ ( ((Array__Int.get !Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission targetuser) = True) <-> true ) ) ) \/ ( (requester = (Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__friends.friends targetuser))) /\ ( ((Array__Int.get !Accountmanagementsystem__friendlocationpermission.friendlocationpermission targetuser) = True) <-> true ) ) ) \/ ( (requester = (Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__insurers.insurers targetuser))) /\ ( ((Array__Int.get !Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission targetuser) = True) <-> true ) ) )) then (
   (Array__Int.get !Accountmanagementsystem__locations.locations targetuser)) else (
   { Measures__gpslocation.__split_fields = { Measures__gpslocation.rec__lat = (Measures__latitude.of_real (0.0E-1)); Measures__gpslocation.rec__long = (Measures__longitude.of_real (0.0E-1)) } }))) = True) ) }

 
 axiom readlocation__post_axiom :
  (forall requester targetuser  : int.
  (forall accountmanagementsystem__users  : Accountmanagementsystem__usersarray.usersarray.
  (forall accountmanagementsystem__insurers accountmanagementsystem__friends  : Accountmanagementsystem__useruserarray.useruserarray.
  (forall accountmanagementsystem__locations  : Accountmanagementsystem__locationsarray.locationsarray.
  (forall accountmanagementsystem__friendlocationpermission accountmanagementsystem__insurerlocationpermission accountmanagementsystem__emergencylocationpermission  : Accountmanagementsystem__permissionarray.permissionarray [(Accountmanagementsystem__readlocation.readlocation requester targetuser accountmanagementsystem__users accountmanagementsystem__insurers accountmanagementsystem__friends accountmanagementsystem__locations accountmanagementsystem__friendlocationpermission accountmanagementsystem__insurerlocationpermission accountmanagementsystem__emergencylocationpermission)].
   ( ( ( (Measures__userid.in_range requester) /\ (Measures__userid.in_range targetuser) ) /\ ( ( ( ( (( -1 ) <= targetuser) /\ (targetuser <= 100) ) /\ ( ((Array__Int.get accountmanagementsystem__users targetuser) = True) <-> true ) ) /\ ( (( -1 ) <= requester) /\ (requester <= 100) ) ) /\ ( ((Array__Int.get accountmanagementsystem__users requester) = True) <-> true ) ) ) -> (let result = (Accountmanagementsystem__readlocation.readlocation requester targetuser accountmanagementsystem__users accountmanagementsystem__insurers accountmanagementsystem__friends accountmanagementsystem__locations accountmanagementsystem__friendlocationpermission accountmanagementsystem__insurerlocationpermission accountmanagementsystem__emergencylocationpermission) in (
    ((Measures__gpslocation.bool_eq result (if (( ( ( (requester = targetuser) \/ ( (requester = 0) /\ ( ((Array__Int.get accountmanagementsystem__emergencylocationpermission targetuser) = True) <-> true ) ) ) \/ ( (requester = (Measures__userid.to_rep (Array__Int.get accountmanagementsystem__friends targetuser))) /\ ( ((Array__Int.get accountmanagementsystem__friendlocationpermission targetuser) = True) <-> true ) ) ) \/ ( (requester = (Measures__userid.to_rep (Array__Int.get accountmanagementsystem__insurers targetuser))) /\ ( ((Array__Int.get accountmanagementsystem__insurerlocationpermission targetuser) = True) <-> true ) ) )) then (
     (Array__Int.get accountmanagementsystem__locations targetuser)) else (
     { Measures__gpslocation.__split_fields = { Measures__gpslocation.rec__lat = (Measures__latitude.of_real (0.0E-1)); Measures__gpslocation.rec__long = (Measures__longitude.of_real (0.0E-1)) } }))) = True)))
    ))))))

end

(* Module for declaring a program function (and possibly an axiom) for "updatevitalspermissions" defined at accountmanagementsystem.ads:232, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Accountmanagementsystem__updatevitalspermissions__axiom
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__friendvitalpermission
 use        Accountmanagementsystem__insurervitalpermission
 use        Accountmanagementsystem__emergencyvitalpermission
 use        Accountmanagementsystem__friendvitalpermission
 use        Accountmanagementsystem__insurervitalpermission
 use        Accountmanagementsystem__emergencyvitalpermission
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__useruserarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__permissionarray
 use        Accountmanagementsystem__friendvitalpermission
 use        Accountmanagementsystem__insurervitalpermission
 use        Accountmanagementsystem__emergencyvitalpermission
 use        Temp___standard__accountmanagementsystem_176
 use        Temp___standard__accountmanagementsystem_183
 use        Temp___standard__accountmanagementsystem_190

 val updatevitalspermissions 
   (wearer : int) (other : int) (allow : bool)  :unit
  requires { ( ( ( ( (( -1 ) <= wearer) /\ (wearer <= 100) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users wearer) = True) <-> true ) ) /\ ( (( -1 ) <= other) /\ (other <= 100) ) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users other) = True) <-> true ) ) }
  ensures { (if ((other = (Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__friends.friends wearer)))) then (
   ((let temp___standard__accountmanagementsystem_182 = (Temp___standard__accountmanagementsystem_176.temp___standard__accountmanagementsystem_176 (old !Accountmanagementsystem__friendvitalpermission.friendvitalpermission ) wearer allow) in (
    (Array__Int.bool_eq !Accountmanagementsystem__friendvitalpermission.friendvitalpermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_182 Measures__userid.first Measures__userid.last)))
    = True)) else ((if ((other = (Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__insurers.insurers wearer)))) then (
   ((let temp___standard__accountmanagementsystem_189 = (Temp___standard__accountmanagementsystem_183.temp___standard__accountmanagementsystem_183 (old !Accountmanagementsystem__insurervitalpermission.insurervitalpermission ) wearer allow) in (
    (Array__Int.bool_eq !Accountmanagementsystem__insurervitalpermission.insurervitalpermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_189 Measures__userid.first Measures__userid.last)))
    = True)) else ((if ((other = 0)) then (
   ((let temp___standard__accountmanagementsystem_196 = (Temp___standard__accountmanagementsystem_190.temp___standard__accountmanagementsystem_190 (old !Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission ) wearer allow) in (
    (Array__Int.bool_eq !Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_196 Measures__userid.first Measures__userid.last)))
    = True)) else (
   true)))))) }
  reads {Accountmanagementsystem__users.users, Accountmanagementsystem__insurers.insurers, Accountmanagementsystem__friends.friends, Accountmanagementsystem__friendvitalpermission.friendvitalpermission, Accountmanagementsystem__insurervitalpermission.insurervitalpermission, Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission }
  writes {Accountmanagementsystem__friendvitalpermission.friendvitalpermission, Accountmanagementsystem__insurervitalpermission.insurervitalpermission, Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission }


end

(* Module for declaring a program function (and possibly an axiom) for "updatefootstepspermissions" defined at accountmanagementsystem.ads:248, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Accountmanagementsystem__updatefootstepspermissions__axiom
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__friendfootsteppermission
 use        Accountmanagementsystem__insurerfootsteppermission
 use        Accountmanagementsystem__insurerlocationpermission
 use        Accountmanagementsystem__insurervitalpermission
 use        Accountmanagementsystem__emergencyfootsteppermission
 use        Accountmanagementsystem__friendfootsteppermission
 use        Accountmanagementsystem__insurerfootsteppermission
 use        Accountmanagementsystem__emergencyfootsteppermission
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Boolean
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__useruserarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__permissionarray
 use        Accountmanagementsystem__friendfootsteppermission
 use        Accountmanagementsystem__insurerfootsteppermission
 use        Accountmanagementsystem__insurerlocationpermission
 use        Accountmanagementsystem__insurervitalpermission
 use        Accountmanagementsystem__emergencyfootsteppermission
 use        Temp___standard__accountmanagementsystem_200
 use        Temp___standard__accountmanagementsystem_207
 use        Temp___standard__accountmanagementsystem_214
 use        Temp___standard__accountmanagementsystem_221
 use        Temp___standard__accountmanagementsystem_228
 use        Temp___standard__accountmanagementsystem_235

 val updatefootstepspermissions 
   (wearer : int) (other : int) (allow : bool)  :unit
  requires { ( ( ( ( (( -1 ) <= wearer) /\ (wearer <= 100) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users wearer) = True) <-> true ) ) /\ ( (( -1 ) <= other) /\ (other <= 100) ) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users other) = True) <-> true ) ) }
  ensures { (if ((other = (Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__friends.friends wearer)))) then (
   ((let temp___standard__accountmanagementsystem_206 = (Temp___standard__accountmanagementsystem_200.temp___standard__accountmanagementsystem_200 (old !Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission ) wearer allow) in (
    (Array__Int.bool_eq !Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_206 Measures__userid.first Measures__userid.last)))
    = True)) else ((if ((other = 0)) then (
   ((let temp___standard__accountmanagementsystem_213 = (Temp___standard__accountmanagementsystem_207.temp___standard__accountmanagementsystem_207 (old !Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission ) wearer allow) in (
    (Array__Int.bool_eq !Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_213 Measures__userid.first Measures__userid.last)))
    = True)) else ((if ((other = (Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__insurers.insurers wearer)))) then (
   (if (( (allow = True) <-> true )) then (
    ((let temp___standard__accountmanagementsystem_220 = (Temp___standard__accountmanagementsystem_214.temp___standard__accountmanagementsystem_214 (old !Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission ) wearer allow) in (
     (Array__Int.bool_eq !Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_220 Measures__userid.first Measures__userid.last)))
     = True)) else (
    ( ( ((let temp___standard__accountmanagementsystem_227 = (Temp___standard__accountmanagementsystem_221.temp___standard__accountmanagementsystem_221 (old !Accountmanagementsystem__insurers.insurers ) wearer ( -1 )) in (
     (Array__Int.bool_eq !Accountmanagementsystem__insurers.insurers Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_227 Measures__userid.first Measures__userid.last)))
     = True) /\ ((let temp___standard__accountmanagementsystem_234 = (Temp___standard__accountmanagementsystem_228.temp___standard__accountmanagementsystem_228 (old !Accountmanagementsystem__insurervitalpermission.insurervitalpermission ) wearer (Boolean.of_int 0)) in (
     (Array__Int.bool_eq !Accountmanagementsystem__insurervitalpermission.insurervitalpermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_234 Measures__userid.first Measures__userid.last)))
     = True) ) /\ ((let temp___standard__accountmanagementsystem_241 = (Temp___standard__accountmanagementsystem_235.temp___standard__accountmanagementsystem_235 (old !Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission ) wearer (Boolean.of_int 0)) in (
     (Array__Int.bool_eq !Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_241 Measures__userid.first Measures__userid.last)))
     = True) )))) else (
   true)))))) }
  reads {Accountmanagementsystem__users.users, Accountmanagementsystem__insurers.insurers, Accountmanagementsystem__friends.friends, Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission, Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission, Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission, Accountmanagementsystem__insurervitalpermission.insurervitalpermission, Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission }
  writes {Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission, Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission, Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission }


end

(* Module for declaring a program function (and possibly an axiom) for "updatelocationpermissions" defined at accountmanagementsystem.ads:269, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Accountmanagementsystem__updatelocationpermissions__axiom
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__friendlocationpermission
 use        Accountmanagementsystem__insurerlocationpermission
 use        Accountmanagementsystem__emergencylocationpermission
 use        Accountmanagementsystem__friendlocationpermission
 use        Accountmanagementsystem__insurerlocationpermission
 use        Accountmanagementsystem__emergencylocationpermission
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__useruserarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__permissionarray
 use        Accountmanagementsystem__friendlocationpermission
 use        Accountmanagementsystem__insurerlocationpermission
 use        Accountmanagementsystem__emergencylocationpermission
 use        Temp___standard__accountmanagementsystem_245
 use        Temp___standard__accountmanagementsystem_252
 use        Temp___standard__accountmanagementsystem_259

 val updatelocationpermissions 
   (wearer : int) (other : int) (allow : bool)  :unit
  requires { ( ( ( ( (( -1 ) <= wearer) /\ (wearer <= 100) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users wearer) = True) <-> true ) ) /\ ( (( -1 ) <= other) /\ (other <= 100) ) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users other) = True) <-> true ) ) }
  ensures { (if ((other = (Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__friends.friends wearer)))) then (
   ((let temp___standard__accountmanagementsystem_251 = (Temp___standard__accountmanagementsystem_245.temp___standard__accountmanagementsystem_245 (old !Accountmanagementsystem__friendlocationpermission.friendlocationpermission ) wearer allow) in (
    (Array__Int.bool_eq !Accountmanagementsystem__friendlocationpermission.friendlocationpermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_251 Measures__userid.first Measures__userid.last)))
    = True)) else ((if ((other = (Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__insurers.insurers wearer)))) then (
   ((let temp___standard__accountmanagementsystem_258 = (Temp___standard__accountmanagementsystem_252.temp___standard__accountmanagementsystem_252 (old !Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission ) wearer allow) in (
    (Array__Int.bool_eq !Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_258 Measures__userid.first Measures__userid.last)))
    = True)) else ((if ((other = 0)) then (
   ((let temp___standard__accountmanagementsystem_265 = (Temp___standard__accountmanagementsystem_259.temp___standard__accountmanagementsystem_259 (old !Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission ) wearer allow) in (
    (Array__Int.bool_eq !Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_265 Measures__userid.first Measures__userid.last)))
    = True)) else (
   true)))))) }
  reads {Accountmanagementsystem__users.users, Accountmanagementsystem__insurers.insurers, Accountmanagementsystem__friends.friends, Accountmanagementsystem__friendlocationpermission.friendlocationpermission, Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission, Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission }
  writes {Accountmanagementsystem__friendlocationpermission.friendlocationpermission, Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission, Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission }


end

(* Module for declaring a program function (and possibly an axiom) for "contactemergency" defined at accountmanagementsystem.ads:285, created in Gnat2Why.Subprograms.Generate_Subprogram_Completion *)
module Accountmanagementsystem__contactemergency__axiom
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__vitals
 use        Accountmanagementsystem__locations
 use        Accountmanagementsystem__emergencylocationpermission
 use        Accountmanagementsystem__emergencyvitalpermission
 use        Accountmanagementsystem__emrecordindex
 use        Accountmanagementsystem__emrecordlist
 use        Accountmanagementsystem__vitals
 use        Accountmanagementsystem__locations
 use        Accountmanagementsystem__emrecordindex
 use        Accountmanagementsystem__emrecordlist
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        Standard__natural
 use        Array__Int
 use        Measures__userid
 use        Measures__bpm
 use        Measures__gpslocation
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__vitalsarray
 use        Accountmanagementsystem__locationsarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__vitals
 use        Accountmanagementsystem__locations
 use        Accountmanagementsystem__permissionarray
 use        Accountmanagementsystem__emergencylocationpermission
 use        Accountmanagementsystem__emergencyvitalpermission
 use        Accountmanagementsystem__emergencyrecord
 use        Accountmanagementsystem__emergencyrecordlist
 use        Accountmanagementsystem__emrecordindex
 use        Accountmanagementsystem__emrecordlist
 use        Temp___standard__accountmanagementsystem_269
 use        Temp___standard__accountmanagementsystem_276
 use        Temp___standard__accountmanagementsystem_283

 val contactemergency 
   (wearer : int) (newlocation : Measures__gpslocation.gpslocation) (newvitals : int)  :unit
  requires { ( ( ( ( (( -1 ) <= wearer) /\ (wearer <= 100) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users wearer) = True) <-> true ) ) /\ ( ((Array__Int.get !Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission wearer) = True) <-> true ) ) /\ (!Accountmanagementsystem__emrecordindex.emrecordindex < 2147483647) ) }
  ensures { ( ( ( ( (!Accountmanagementsystem__emrecordindex.emrecordindex = ((old !Accountmanagementsystem__emrecordindex.emrecordindex ) + 1)) /\ ((let temp___standard__accountmanagementsystem_275 = (Temp___standard__accountmanagementsystem_269.temp___standard__accountmanagementsystem_269 (old !Accountmanagementsystem__emrecordlist.emrecordlist ) !Accountmanagementsystem__emrecordindex.emrecordindex { Accountmanagementsystem__emergencyrecord.__split_fields = { Accountmanagementsystem__emergencyrecord.rec__user = (Measures__userid.of_rep wearer); Accountmanagementsystem__emergencyrecord.rec__vitals = (Measures__bpm.of_rep newvitals); Accountmanagementsystem__emergencyrecord.rec__location = newlocation } }) in (
   (Array__Int.bool_eq !Accountmanagementsystem__emrecordlist.emrecordlist Standard__natural.first Standard__natural.last temp___standard__accountmanagementsystem_275 Standard__natural.first Standard__natural.last)))
   = True) ) /\ ((let temp___standard__accountmanagementsystem_282 = (Temp___standard__accountmanagementsystem_276.temp___standard__accountmanagementsystem_276 (old !Accountmanagementsystem__vitals.vitals ) wearer newvitals) in (
   (Array__Int.bool_eq !Accountmanagementsystem__vitals.vitals Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_282 Measures__userid.first Measures__userid.last)))
   = True) ) /\ ((let temp___standard__accountmanagementsystem_289 = (Temp___standard__accountmanagementsystem_283.temp___standard__accountmanagementsystem_283 (old !Accountmanagementsystem__locations.locations ) wearer newlocation) in (
   (Array__Int.bool_eq !Accountmanagementsystem__locations.locations Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_289 Measures__userid.first Measures__userid.last)))
   = True) ) /\ (Standard__natural.dynamic_property Standard__natural.first Standard__natural.last !Accountmanagementsystem__emrecordindex.emrecordindex) ) }
  reads {Accountmanagementsystem__users.users, Accountmanagementsystem__vitals.vitals, Accountmanagementsystem__locations.locations, Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission, Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission, Accountmanagementsystem__emrecordindex.emrecordindex, Accountmanagementsystem__emrecordlist.emrecordlist }
  writes {Accountmanagementsystem__vitals.vitals, Accountmanagementsystem__locations.locations, Accountmanagementsystem__emrecordindex.emrecordindex, Accountmanagementsystem__emrecordlist.emrecordlist }


end

(* Module for checking absence of run-time errors and package initial condition on package elaboration of "accountmanagementsystem" defined at accountmanagementsystem.ads:9, created in Gnat2Why.Subprograms.Generate_VCs_For_Package_Elaboration *)
module Accountmanagementsystem__package_def
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        Standard__natural
 use        Measures__userid
 use        Measures__gpslocation
 use        Accountmanagementsystem__latestuser
 use        Accountmanagementsystem__memergency
 use        Accountmanagementsystem__emergencyrecord
 use        Accountmanagementsystem__emrecordindex
 use        Standard__natural__axiom
 use        Accountmanagementsystem__latestuser__axiom
 use        Accountmanagementsystem__memergency__axiom
 use        Accountmanagementsystem__emergencyrecord__axiom
 use        Accountmanagementsystem__emrecordindex__axiom
 use        Measures__userid__axiom
 use        Measures__bpm__axiom
 use        Measures__latitude__axiom
 use        Measures__longitude__axiom
 use        Measures__gpslocation__axiom

 let def "GP_Subp:accountmanagementsystem.ads:9" "W:diverges:N" 
   (__void_param : unit) 
  requires { true }
  ensures { true }

   =
  ( abstract ensures {true}(Main.___ignore((if (((if ((Measures__userid.first <= Measures__userid.last)) then (
   ((Measures__userid.last - Measures__userid.first) + 1)) else (
   0)) > 0)) then (
   abstract ensures {true}(Main.___ignore(())) end )))) end ;
  ( Accountmanagementsystem__latestuser.latestuser := ( 0 );
  assume { (if ((Measures__userid.first <= Measures__userid.last)) then (
   (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last !Accountmanagementsystem__latestuser.latestuser)) else true) } );
  ( abstract ensures {true}(Main.___ignore((if (((if ((Measures__userid.first <= Measures__userid.last)) then (
   ((Measures__userid.last - Measures__userid.first) + 1)) else (
   0)) > 0)) then (
   abstract ensures {true}(Main.___ignore(())) end )))) end ;
  abstract ensures {true}(Main.___ignore((if (((if ((Measures__userid.first <= Measures__userid.last)) then (
   ((Measures__userid.last - Measures__userid.first) + 1)) else (
   0)) > 0)) then (
   abstract ensures {true}(Main.___ignore(())) end )))) end ;
  abstract ensures {true}(Main.___ignore((if (((if ((Measures__userid.first <= Measures__userid.last)) then (
   ((Measures__userid.last - Measures__userid.first) + 1)) else (
   0)) > 0)) then (
   abstract ensures {true}(Main.___ignore(())) end )))) end ;
  abstract ensures {true}(Main.___ignore((if (((if ((Measures__userid.first <= Measures__userid.last)) then (
   ((Measures__userid.last - Measures__userid.first) + 1)) else (
   0)) > 0)) then (
   abstract ensures {true}(Main.___ignore(())) end )))) end ;
  abstract ensures {true}(Main.___ignore((if (((if ((Measures__userid.first <= Measures__userid.last)) then (
   ((Measures__userid.last - Measures__userid.first) + 1)) else (
   0)) > 0)) then (
   abstract ensures {true}(Main.___ignore((let temp___standard__accountmanagementsystem_330 = (any Measures__gpslocation.gpslocation
   requires {true} 
   ensures {true} 
   ) in (
    ( (if ((Measures__gpslocation.lat__pred(temp___standard__accountmanagementsystem_330))) then (
     abstract ensures {true}(Main.___ignore(())) end ));
    (if ((Measures__gpslocation.long__pred(temp___standard__accountmanagementsystem_330))) then (
     abstract ensures {true}(Main.___ignore(())) end )) )))
   )) end )))) end ;
  ( abstract ensures {true}(Main.___ignore(0)) end ;
  assume { (if ((Measures__userid.first <= Measures__userid.last)) then (
   (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last Accountmanagementsystem__memergency.memergency)) else true) } );
  ( abstract ensures {true}(Main.___ignore((if (((if ((Measures__userid.first <= Measures__userid.last)) then (
   ((Measures__userid.last - Measures__userid.first) + 1)) else (
   0)) > 0)) then (
   abstract ensures {true}(Main.___ignore(())) end )))) end ;
  abstract ensures {true}(Main.___ignore((if (((if ((Measures__userid.first <= Measures__userid.last)) then (
   ((Measures__userid.last - Measures__userid.first) + 1)) else (
   0)) > 0)) then (
   abstract ensures {true}(Main.___ignore(())) end )))) end ;
  abstract ensures {true}(Main.___ignore((if (((if ((Measures__userid.first <= Measures__userid.last)) then (
   ((Measures__userid.last - Measures__userid.first) + 1)) else (
   0)) > 0)) then (
   abstract ensures {true}(Main.___ignore(())) end )))) end ;
  abstract ensures {true}(Main.___ignore((if (((if ((Measures__userid.first <= Measures__userid.last)) then (
   ((Measures__userid.last - Measures__userid.first) + 1)) else (
   0)) > 0)) then (
   abstract ensures {true}(Main.___ignore(())) end )))) end ;
  abstract ensures {true}(Main.___ignore((if (((if ((Measures__userid.first <= Measures__userid.last)) then (
   ((Measures__userid.last - Measures__userid.first) + 1)) else (
   0)) > 0)) then (
   abstract ensures {true}(Main.___ignore(())) end )))) end ;
  abstract ensures {true}(Main.___ignore((if (((if ((Measures__userid.first <= Measures__userid.last)) then (
   ((Measures__userid.last - Measures__userid.first) + 1)) else (
   0)) > 0)) then (
   abstract ensures {true}(Main.___ignore(())) end )))) end ;
  abstract ensures {true}(Main.___ignore((if (((if ((Measures__userid.first <= Measures__userid.last)) then (
   ((Measures__userid.last - Measures__userid.first) + 1)) else (
   0)) > 0)) then (
   abstract ensures {true}(Main.___ignore(())) end )))) end ;
  abstract ensures {true}(Main.___ignore((if (((if ((Measures__userid.first <= Measures__userid.last)) then (
   ((Measures__userid.last - Measures__userid.first) + 1)) else (
   0)) > 0)) then (
   abstract ensures {true}(Main.___ignore(())) end )))) end ;
  abstract ensures {true}(Main.___ignore((if (((if ((Measures__userid.first <= Measures__userid.last)) then (
   ((Measures__userid.last - Measures__userid.first) + 1)) else (
   0)) > 0)) then (
   abstract ensures {true}(Main.___ignore(())) end )))) end ;
  ( Accountmanagementsystem__emrecordindex.emrecordindex := ( 0 );
  assume { (if ((Standard__natural.first <= Standard__natural.last)) then (
   (Standard__natural.dynamic_property Standard__natural.first Standard__natural.last !Accountmanagementsystem__emrecordindex.emrecordindex)) else true) } );
  ( abstract ensures {true}(Main.___ignore((if (((if ((Standard__natural.first <= Standard__natural.last)) then (
   ((Standard__natural.last - Standard__natural.first) + 1)) else (
   0)) > 0)) then (
   abstract ensures {true}(Main.___ignore((let temp___standard__accountmanagementsystem_293 = (any Accountmanagementsystem__emergencyrecord.emergencyrecord
   requires {true} 
   ensures {true} 
   ) in (
    ( (if ((Accountmanagementsystem__emergencyrecord.user__pred(temp___standard__accountmanagementsystem_293))) then (
     abstract ensures {true}(Main.___ignore(())) end ));
    (if ((Accountmanagementsystem__emergencyrecord.vitals__pred(temp___standard__accountmanagementsystem_293))) then (
     abstract ensures {true}(Main.___ignore(())) end ));
    (if ((Accountmanagementsystem__emergencyrecord.location__pred(temp___standard__accountmanagementsystem_293))) then (
     abstract ensures {true}(Main.___ignore((let temp___standard__accountmanagementsystem_294 = (any Measures__gpslocation.gpslocation
     requires {true} 
     ensures {true} 
     ) in (
      ( (if ((Measures__gpslocation.lat__pred(temp___standard__accountmanagementsystem_294))) then (
       abstract ensures {true}(Main.___ignore(())) end ));
      (if ((Measures__gpslocation.long__pred(temp___standard__accountmanagementsystem_294))) then (
       abstract ensures {true}(Main.___ignore(())) end )) )))
     )) end )) )))
   )) end )))) end ;
  ( "GP_Sloc:accountmanagementsystem.adb:273:1" () ) ) ) ) )
end

(* Module for checking contracts and absence of run-time errors in subprogram "init" defined at accountmanagementsystem.ads:72, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Accountmanagementsystem__init__subprogram_def
 use import "int".Int
 use import "_gnatprove_standard".Main
 use import "int".Int
 use import "real".RealInfix
 use        "_gnatprove_standard".Main
 use        "_gnatprove_standard".Boolean
 use        Standard__natural
 use        Array__Int
 use        Measures__userid
 use        Measures__bpm
 use        Measures__footsteps
 use        Measures__latitude
 use        Measures__longitude
 use        Measures__gpslocation
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__useruserarray
 use        Accountmanagementsystem__vitalsarray
 use        Accountmanagementsystem__footstepsarray
 use        Accountmanagementsystem__locationsarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__vitals
 use        Accountmanagementsystem__mfootsteps
 use        Accountmanagementsystem__locations
 use        Accountmanagementsystem__permissionarray
 use        Accountmanagementsystem__friendfootsteppermission
 use        Accountmanagementsystem__friendlocationpermission
 use        Accountmanagementsystem__friendvitalpermission
 use        Accountmanagementsystem__insurerfootsteppermission
 use        Accountmanagementsystem__insurerlocationpermission
 use        Accountmanagementsystem__insurervitalpermission
 use        Accountmanagementsystem__emergencyfootsteppermission
 use        Accountmanagementsystem__emergencylocationpermission
 use        Accountmanagementsystem__emergencyvitalpermission
 use        Accountmanagementsystem__emergencyrecord
 use        Accountmanagementsystem__emergencyrecordlist
 use        Accountmanagementsystem__emrecordlist
 use        Accountmanagementsystem__init__T1b
 use        Accountmanagementsystem__init__T2b
 use        Accountmanagementsystem__init__T3b
 use        Accountmanagementsystem__init__T4b
 use        Accountmanagementsystem__init__T5b
 use        Accountmanagementsystem__init__T6b
 use        Accountmanagementsystem__init__T7b
 use        Accountmanagementsystem__init__T8b
 use        Accountmanagementsystem__init__T9b
 use        Accountmanagementsystem__init__T10b
 use        Accountmanagementsystem__init__T11b
 use        Accountmanagementsystem__init__T12b
 use        Accountmanagementsystem__init__T13b
 use        Accountmanagementsystem__init__T14b
 use        Accountmanagementsystem__init__T15b
 use        Accountmanagementsystem__init__T16b
 use        Accountmanagementsystem__init__T17b
 use        Accountmanagementsystem__init__T18b
 use        Accountmanagementsystem__init__T19b
 use        Accountmanagementsystem__init__T20b
 use        Accountmanagementsystem__init__T21b
 use        Accountmanagementsystem__init__T22b
 use        Accountmanagementsystem__init__T23b
 use        Accountmanagementsystem__init__T24b
 use        Accountmanagementsystem__init__T25b
 use        Accountmanagementsystem__init__T26b
 use        Accountmanagementsystem__init__T27b
 use        Accountmanagementsystem__init__T28b
 use        Accountmanagementsystem__init__T29b
 use        Accountmanagementsystem__init__T30b
 use        Accountmanagementsystem__init__T31b
 use        Accountmanagementsystem__init__T32b
 use        Temp___standard__accountmanagementsystem_351
 use        Temp___standard__accountmanagementsystem_355
 use        Temp___standard__accountmanagementsystem_359
 use        Temp___standard__accountmanagementsystem_363
 use        Temp___standard__accountmanagementsystem_367
 use        Temp___standard__accountmanagementsystem_371
 use        Temp___standard__accountmanagementsystem_375
 use        Temp___standard__accountmanagementsystem_379
 use        Temp___standard__accountmanagementsystem_383
 use        Temp___standard__accountmanagementsystem_387
 use        Temp___standard__accountmanagementsystem_391
 use        Temp___standard__accountmanagementsystem_395
 use        Temp___standard__accountmanagementsystem_399
 use        Temp___standard__accountmanagementsystem_403
 use        Temp___standard__accountmanagementsystem_407
 use        Temp___standard__accountmanagementsystem_411
 use        Standard__natural__axiom
 use        Accountmanagementsystem__usersarray__axiom
 use        Accountmanagementsystem__useruserarray__axiom
 use        Accountmanagementsystem__vitalsarray__axiom
 use        Accountmanagementsystem__footstepsarray__axiom
 use        Accountmanagementsystem__locationsarray__axiom
 use        Accountmanagementsystem__users__axiom
 use        Accountmanagementsystem__insurers__axiom
 use        Accountmanagementsystem__friends__axiom
 use        Accountmanagementsystem__vitals__axiom
 use        Accountmanagementsystem__mfootsteps__axiom
 use        Accountmanagementsystem__locations__axiom
 use        Accountmanagementsystem__permissionarray__axiom
 use        Accountmanagementsystem__friendfootsteppermission__axiom
 use        Accountmanagementsystem__friendlocationpermission__axiom
 use        Accountmanagementsystem__friendvitalpermission__axiom
 use        Accountmanagementsystem__insurerfootsteppermission__axiom
 use        Accountmanagementsystem__insurerlocationpermission__axiom
 use        Accountmanagementsystem__insurervitalpermission__axiom
 use        Accountmanagementsystem__emergencyfootsteppermission__axiom
 use        Accountmanagementsystem__emergencylocationpermission__axiom
 use        Accountmanagementsystem__emergencyvitalpermission__axiom
 use        Accountmanagementsystem__emergencyrecord__axiom
 use        Accountmanagementsystem__emergencyrecordlist__axiom
 use        Accountmanagementsystem__emrecordlist__axiom
 use        Measures__userid__axiom
 use        Measures__bpm__axiom
 use        Measures__footsteps__axiom
 use        Measures__latitude__axiom
 use        Measures__longitude__axiom
 use        Measures__gpslocation__axiom
 use        Accountmanagementsystem__init__T1b__axiom
 use        Accountmanagementsystem__init__T2b__axiom
 use        Accountmanagementsystem__init__T3b__axiom
 use        Accountmanagementsystem__init__T4b__axiom
 use        Accountmanagementsystem__init__T5b__axiom
 use        Accountmanagementsystem__init__T6b__axiom
 use        Accountmanagementsystem__init__T7b__axiom
 use        Accountmanagementsystem__init__T8b__axiom
 use        Accountmanagementsystem__init__T9b__axiom
 use        Accountmanagementsystem__init__T10b__axiom
 use        Accountmanagementsystem__init__T11b__axiom
 use        Accountmanagementsystem__init__T12b__axiom
 use        Accountmanagementsystem__init__T13b__axiom
 use        Accountmanagementsystem__init__T14b__axiom
 use        Accountmanagementsystem__init__T15b__axiom
 use        Accountmanagementsystem__init__T16b__axiom
 use        Accountmanagementsystem__init__T17b__axiom
 use        Accountmanagementsystem__init__T18b__axiom
 use        Accountmanagementsystem__init__T19b__axiom
 use        Accountmanagementsystem__init__T20b__axiom
 use        Accountmanagementsystem__init__T21b__axiom
 use        Accountmanagementsystem__init__T22b__axiom
 use        Accountmanagementsystem__init__T23b__axiom
 use        Accountmanagementsystem__init__T24b__axiom
 use        Accountmanagementsystem__init__T25b__axiom
 use        Accountmanagementsystem__init__T26b__axiom
 use        Accountmanagementsystem__init__T27b__axiom
 use        Accountmanagementsystem__init__T28b__axiom
 use        Accountmanagementsystem__init__T29b__axiom
 use        Accountmanagementsystem__init__T30b__axiom
 use        Accountmanagementsystem__init__T31b__axiom
 use        Accountmanagementsystem__init__T32b__axiom

 let def "W:diverges:N" "GP_Subp:accountmanagementsystem.ads:72" 
   (__void_param : unit) 
  requires { true }
  ensures { ( "GP_Reason:VC_POSTCONDITION" "GP_Id:0" "GP_Sloc:accountmanagementsystem.ads:75:8" "comment:       (for all I in Users'Range => (if(I /= UserID'First and I /= MEmergency)
       ^ accountmanagementsystem.ads:75:8:VC_POSTCONDITION" "GP_Shape:pragargs__and" "keep_on_simp" ( ( ( ( ( ( ( ( ( ( ( ( ( ( ( (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> (if (( (i <> ( -1 )) /\ (i <> 0) )) then (
    ( "GP_Pretty_Ada:3811" "GP_Sloc:accountmanagementsystem.ads:76:20" ( ((Array__Int.get !Accountmanagementsystem__users.users i) = True) <-> true ) )) else (
    ( "GP_Pretty_Ada:3816" "GP_Sloc:accountmanagementsystem.ads:76:41" ( ((Array__Int.get !Accountmanagementsystem__users.users i) = True) <-> false ) ))) )) /\ (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( "GP_Pretty_Ada:3834" "GP_Sloc:accountmanagementsystem.ads:77:37" ((Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__friends.friends i)) = ( -1 )) ) )) ) /\ (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( "GP_Pretty_Ada:3853" "GP_Sloc:accountmanagementsystem.ads:78:38" ((Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__insurers.insurers i)) = ( -1 )) ) )) ) /\ (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( "GP_Pretty_Ada:3872" "GP_Sloc:accountmanagementsystem.ads:79:36" ((Measures__bpm.to_rep (Array__Int.get !Accountmanagementsystem__vitals.vitals i)) = ( -1 )) ) )) ) /\ (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( "GP_Pretty_Ada:3891" "GP_Sloc:accountmanagementsystem.ads:80:40" ((Measures__footsteps.to_rep (Array__Int.get !Accountmanagementsystem__mfootsteps.mfootsteps i)) = 0) ) )) ) /\ (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( "GP_Pretty_Ada:3909" "GP_Sloc:accountmanagementsystem.ads:81:39" ((Measures__gpslocation.bool_eq (Array__Int.get !Accountmanagementsystem__locations.locations i) { Measures__gpslocation.__split_fields = { Measures__gpslocation.rec__lat = (Measures__latitude.of_real (0.0E-1)); Measures__gpslocation.rec__long = (Measures__longitude.of_real (0.0E-1)) } }) = True) ) )) ) /\ (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( "GP_Pretty_Ada:3929" "GP_Sloc:accountmanagementsystem.ads:86:10" ( ((Array__Int.get !Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission i) = True) <-> false ) ) )) ) /\ (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( "GP_Pretty_Ada:3946" "GP_Sloc:accountmanagementsystem.ads:88:10" ( ((Array__Int.get !Accountmanagementsystem__friendlocationpermission.friendlocationpermission i) = True) <-> false ) ) )) ) /\ (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( "GP_Pretty_Ada:3963" "GP_Sloc:accountmanagementsystem.ads:90:10" ( ((Array__Int.get !Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission i) = True) <-> false ) ) )) ) /\ (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( "GP_Pretty_Ada:3980" "GP_Sloc:accountmanagementsystem.ads:92:10" ( ((Array__Int.get !Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission i) = True) <-> true ) ) )) ) /\ (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( "GP_Pretty_Ada:3997" "GP_Sloc:accountmanagementsystem.ads:94:10" ( ((Array__Int.get !Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission i) = True) <-> false ) ) )) ) /\ (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( "GP_Pretty_Ada:4014" "GP_Sloc:accountmanagementsystem.ads:96:10" ( ((Array__Int.get !Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission i) = True) <-> false ) ) )) ) /\ (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( "GP_Pretty_Ada:4031" "GP_Sloc:accountmanagementsystem.ads:98:10" ( ((Array__Int.get !Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission i) = True) <-> false ) ) )) ) /\ (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( "GP_Pretty_Ada:4048" "GP_Sloc:accountmanagementsystem.ads:100:10" ( ((Array__Int.get !Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission i) = True) <-> false ) ) )) ) /\ (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( "GP_Pretty_Ada:4065" "GP_Sloc:accountmanagementsystem.ads:102:10" ( ((Array__Int.get !Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission i) = True) <-> false ) ) )) ) /\ (forall i  : int.
   ( ( (0 <= i) /\ (i <= 2147483647) ) -> ( "GP_Pretty_Ada:4081" "GP_Sloc:accountmanagementsystem.ads:104:7" ((Accountmanagementsystem__emergencyrecord.bool_eq (Array__Int.get !Accountmanagementsystem__emrecordlist.emrecordlist i) { Accountmanagementsystem__emergencyrecord.__split_fields = { Accountmanagementsystem__emergencyrecord.rec__user = (Measures__userid.of_rep ( -1 )); Accountmanagementsystem__emergencyrecord.rec__vitals = (Measures__bpm.of_rep ( -1 )); Accountmanagementsystem__emergencyrecord.rec__location = { Measures__gpslocation.__split_fields = { Measures__gpslocation.rec__lat = (Measures__latitude.of_real (0.0E-1)); Measures__gpslocation.rec__long = (Measures__longitude.of_real (0.0E-1)) } } } }) = True) ) )) ) ) }

   =
  ( () (* Assume dynamic property of params of the subprogram accountmanagementsystem.ads:72 *)
  ;
  ( () (* Declarations introduced by the compiler at the beginning of the subprogram accountmanagementsystem.ads:72 *)
  ;
  () (* Check for RTE in the Pre of the subprogram accountmanagementsystem.ads:72 *)
  ;
  abstract ensures {true}(Main.___ignore(True)) end ;
  () (* Assume Pre of the subprogram accountmanagementsystem.ads:72 *)
  ;
  assume { true } );
  ( () (* Check additional Pres of the subprogram accountmanagementsystem.ads:72 *)
  ;
  () (* Body of the subprogram accountmanagementsystem.ads:72 *)
  ;
  try
   ( ( "GP_Sloc:accountmanagementsystem.adb:9:13" Accountmanagementsystem__users.users := ( ( assert { ( "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Id:1" "GP_Sloc:accountmanagementsystem.adb:9:16" "comment:      Users := (others => False);
               ^ accountmanagementsystem.adb:9:16:VC_LENGTH_CHECK" "GP_Shape:users_assign__aggr" ((if ((Accountmanagementsystem__init__T1b.first <= Accountmanagementsystem__init__T1b.last)) then (
    ((Accountmanagementsystem__init__T1b.last - Accountmanagementsystem__init__T1b.first) + 1)) else (
    0)) = (if ((Measures__userid.first <= Measures__userid.last)) then (
    ((Measures__userid.last - Measures__userid.first) + 1)) else (
    0))) ) };
   (Temp___standard__accountmanagementsystem_351.temp___standard__accountmanagementsystem_351((Boolean.of_int(0)))) ) ) );
   ( "GP_Sloc:accountmanagementsystem.adb:10:16" Accountmanagementsystem__insurers.insurers := ( ( assert { ( "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Id:2" "GP_Sloc:accountmanagementsystem.adb:10:19" "comment:      Insurers := (others => UserID'First);
                  ^ accountmanagementsystem.adb:10:19:VC_LENGTH_CHECK" "GP_Shape:insurers_assign__aggr" ((if ((Accountmanagementsystem__init__T3b.first <= Accountmanagementsystem__init__T3b.last)) then (
    ((Accountmanagementsystem__init__T3b.last - Accountmanagementsystem__init__T3b.first) + 1)) else (
    0)) = (if ((Measures__userid.first <= Measures__userid.last)) then (
    ((Measures__userid.last - Measures__userid.first) + 1)) else (
    0))) ) };
   (Temp___standard__accountmanagementsystem_355.temp___standard__accountmanagementsystem_355(( -1 ))) ) ) );
   ( "GP_Sloc:accountmanagementsystem.adb:11:15" Accountmanagementsystem__friends.friends := ( ( assert { ( "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Id:3" "GP_Sloc:accountmanagementsystem.adb:11:18" "comment:      Friends := (others => UserID'First);
                 ^ accountmanagementsystem.adb:11:18:VC_LENGTH_CHECK" "GP_Shape:friends_assign__aggr" ((if ((Accountmanagementsystem__init__T5b.first <= Accountmanagementsystem__init__T5b.last)) then (
    ((Accountmanagementsystem__init__T5b.last - Accountmanagementsystem__init__T5b.first) + 1)) else (
    0)) = (if ((Measures__userid.first <= Measures__userid.last)) then (
    ((Measures__userid.last - Measures__userid.first) + 1)) else (
    0))) ) };
   (Temp___standard__accountmanagementsystem_359.temp___standard__accountmanagementsystem_359(( -1 ))) ) ) );
   ( "GP_Sloc:accountmanagementsystem.adb:12:14" Accountmanagementsystem__vitals.vitals := ( ( assert { ( "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Id:4" "GP_Sloc:accountmanagementsystem.adb:12:17" "comment:      Vitals := (others => BPM'First);
                ^ accountmanagementsystem.adb:12:17:VC_LENGTH_CHECK" "GP_Shape:vitals_assign__aggr" ((if ((Accountmanagementsystem__init__T7b.first <= Accountmanagementsystem__init__T7b.last)) then (
    ((Accountmanagementsystem__init__T7b.last - Accountmanagementsystem__init__T7b.first) + 1)) else (
    0)) = (if ((Measures__userid.first <= Measures__userid.last)) then (
    ((Measures__userid.last - Measures__userid.first) + 1)) else (
    0))) ) };
   (Temp___standard__accountmanagementsystem_363.temp___standard__accountmanagementsystem_363(( -1 ))) ) ) );
   ( "GP_Sloc:accountmanagementsystem.adb:13:18" Accountmanagementsystem__mfootsteps.mfootsteps := ( ( assert { ( "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Id:5" "GP_Sloc:accountmanagementsystem.adb:13:21" "comment:      MFootsteps := (others => Footsteps'First);
                    ^ accountmanagementsystem.adb:13:21:VC_LENGTH_CHECK" "GP_Shape:mfootsteps_assign__aggr" ((if ((Accountmanagementsystem__init__T9b.first <= Accountmanagementsystem__init__T9b.last)) then (
    ((Accountmanagementsystem__init__T9b.last - Accountmanagementsystem__init__T9b.first) + 1)) else (
    0)) = (if ((Measures__userid.first <= Measures__userid.last)) then (
    ((Measures__userid.last - Measures__userid.first) + 1)) else (
    0))) ) };
   (Temp___standard__accountmanagementsystem_367.temp___standard__accountmanagementsystem_367(0)) ) ) );
   ( "GP_Sloc:accountmanagementsystem.adb:14:17" Accountmanagementsystem__locations.locations := ( ( assert { ( "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Id:6" "GP_Sloc:accountmanagementsystem.adb:14:20" "comment:      Locations := (others => (0.0, 0.0));
                   ^ accountmanagementsystem.adb:14:20:VC_LENGTH_CHECK" "GP_Shape:locations_assign__aggr" ((if ((Accountmanagementsystem__init__T11b.first <= Accountmanagementsystem__init__T11b.last)) then (
    ((Accountmanagementsystem__init__T11b.last - Accountmanagementsystem__init__T11b.first) + 1)) else (
    0)) = (if ((Measures__userid.first <= Measures__userid.last)) then (
    ((Measures__userid.last - Measures__userid.first) + 1)) else (
    0))) ) };
   (Temp___standard__accountmanagementsystem_371.temp___standard__accountmanagementsystem_371({ Measures__gpslocation.__split_fields = { Measures__gpslocation.rec__lat = (Measures__latitude.of_real((0.0E-1))); Measures__gpslocation.rec__long = (Measures__longitude.of_real((0.0E-1))) } })) ) ) );
   ( "GP_Sloc:accountmanagementsystem.adb:16:32" Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission := ( ( assert { ( "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Id:7" "GP_Sloc:accountmanagementsystem.adb:16:35" "comment:      FriendFootstepPermission := (others => False);
                                  ^ accountmanagementsystem.adb:16:35:VC_LENGTH_CHECK" "GP_Shape:friendfootsteppermission_assign__aggr" ((if ((Accountmanagementsystem__init__T13b.first <= Accountmanagementsystem__init__T13b.last)) then (
    ((Accountmanagementsystem__init__T13b.last - Accountmanagementsystem__init__T13b.first) + 1)) else (
    0)) = (if ((Measures__userid.first <= Measures__userid.last)) then (
    ((Measures__userid.last - Measures__userid.first) + 1)) else (
    0))) ) };
   (Temp___standard__accountmanagementsystem_375.temp___standard__accountmanagementsystem_375((Boolean.of_int(0)))) ) ) );
   ( "GP_Sloc:accountmanagementsystem.adb:17:32" Accountmanagementsystem__friendlocationpermission.friendlocationpermission := ( ( assert { ( "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Id:8" "GP_Sloc:accountmanagementsystem.adb:17:35" "comment:      FriendLocationPermission := (others => False);
                                  ^ accountmanagementsystem.adb:17:35:VC_LENGTH_CHECK" "GP_Shape:friendlocationpermission_assign__aggr" ((if ((Accountmanagementsystem__init__T15b.first <= Accountmanagementsystem__init__T15b.last)) then (
    ((Accountmanagementsystem__init__T15b.last - Accountmanagementsystem__init__T15b.first) + 1)) else (
    0)) = (if ((Measures__userid.first <= Measures__userid.last)) then (
    ((Measures__userid.last - Measures__userid.first) + 1)) else (
    0))) ) };
   (Temp___standard__accountmanagementsystem_379.temp___standard__accountmanagementsystem_379((Boolean.of_int(0)))) ) ) );
   ( "GP_Sloc:accountmanagementsystem.adb:18:29" Accountmanagementsystem__friendvitalpermission.friendvitalpermission := ( ( assert { ( "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Id:9" "GP_Sloc:accountmanagementsystem.adb:18:32" "comment:      FriendVitalPermission := (others => False);
                               ^ accountmanagementsystem.adb:18:32:VC_LENGTH_CHECK" "GP_Shape:friendvitalpermission_assign__aggr" ((if ((Accountmanagementsystem__init__T17b.first <= Accountmanagementsystem__init__T17b.last)) then (
    ((Accountmanagementsystem__init__T17b.last - Accountmanagementsystem__init__T17b.first) + 1)) else (
    0)) = (if ((Measures__userid.first <= Measures__userid.last)) then (
    ((Measures__userid.last - Measures__userid.first) + 1)) else (
    0))) ) };
   (Temp___standard__accountmanagementsystem_383.temp___standard__accountmanagementsystem_383((Boolean.of_int(0)))) ) ) );
   ( "GP_Sloc:accountmanagementsystem.adb:19:33" Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission := ( ( assert { ( "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Id:10" "GP_Sloc:accountmanagementsystem.adb:19:36" "comment:      InsurerFootstepPermission := (others => True);
                                   ^ accountmanagementsystem.adb:19:36:VC_LENGTH_CHECK" "GP_Shape:insurerfootsteppermission_assign__aggr" ((if ((Accountmanagementsystem__init__T19b.first <= Accountmanagementsystem__init__T19b.last)) then (
    ((Accountmanagementsystem__init__T19b.last - Accountmanagementsystem__init__T19b.first) + 1)) else (
    0)) = (if ((Measures__userid.first <= Measures__userid.last)) then (
    ((Measures__userid.last - Measures__userid.first) + 1)) else (
    0))) ) };
   (Temp___standard__accountmanagementsystem_387.temp___standard__accountmanagementsystem_387((Boolean.of_int(1)))) ) ) );
   ( "GP_Sloc:accountmanagementsystem.adb:20:33" Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission := ( ( assert { ( "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Id:11" "GP_Sloc:accountmanagementsystem.adb:20:36" "comment:      InsurerLocationPermission := (others => False);
                                   ^ accountmanagementsystem.adb:20:36:VC_LENGTH_CHECK" "GP_Shape:insurerlocationpermission_assign__aggr" ((if ((Accountmanagementsystem__init__T21b.first <= Accountmanagementsystem__init__T21b.last)) then (
    ((Accountmanagementsystem__init__T21b.last - Accountmanagementsystem__init__T21b.first) + 1)) else (
    0)) = (if ((Measures__userid.first <= Measures__userid.last)) then (
    ((Measures__userid.last - Measures__userid.first) + 1)) else (
    0))) ) };
   (Temp___standard__accountmanagementsystem_391.temp___standard__accountmanagementsystem_391((Boolean.of_int(0)))) ) ) );
   ( "GP_Sloc:accountmanagementsystem.adb:21:30" Accountmanagementsystem__insurervitalpermission.insurervitalpermission := ( ( assert { ( "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Id:12" "GP_Sloc:accountmanagementsystem.adb:21:33" "comment:      InsurerVitalPermission := (others => False);
                                ^ accountmanagementsystem.adb:21:33:VC_LENGTH_CHECK" "GP_Shape:insurervitalpermission_assign__aggr" ((if ((Accountmanagementsystem__init__T23b.first <= Accountmanagementsystem__init__T23b.last)) then (
    ((Accountmanagementsystem__init__T23b.last - Accountmanagementsystem__init__T23b.first) + 1)) else (
    0)) = (if ((Measures__userid.first <= Measures__userid.last)) then (
    ((Measures__userid.last - Measures__userid.first) + 1)) else (
    0))) ) };
   (Temp___standard__accountmanagementsystem_395.temp___standard__accountmanagementsystem_395((Boolean.of_int(0)))) ) ) );
   ( "GP_Sloc:accountmanagementsystem.adb:22:35" Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission := ( ( assert { ( "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Id:13" "GP_Sloc:accountmanagementsystem.adb:22:38" "comment:      EmergencyFootstepPermission := (others => False);
                                     ^ accountmanagementsystem.adb:22:38:VC_LENGTH_CHECK" "GP_Shape:emergencyfootsteppermission_assign__aggr" ((if ((Accountmanagementsystem__init__T25b.first <= Accountmanagementsystem__init__T25b.last)) then (
    ((Accountmanagementsystem__init__T25b.last - Accountmanagementsystem__init__T25b.first) + 1)) else (
    0)) = (if ((Measures__userid.first <= Measures__userid.last)) then (
    ((Measures__userid.last - Measures__userid.first) + 1)) else (
    0))) ) };
   (Temp___standard__accountmanagementsystem_399.temp___standard__accountmanagementsystem_399((Boolean.of_int(0)))) ) ) );
   ( "GP_Sloc:accountmanagementsystem.adb:23:35" Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission := ( ( assert { ( "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Id:14" "GP_Sloc:accountmanagementsystem.adb:23:38" "comment:      EmergencyLocationPermission := (others => False);
                                     ^ accountmanagementsystem.adb:23:38:VC_LENGTH_CHECK" "GP_Shape:emergencylocationpermission_assign__aggr" ((if ((Accountmanagementsystem__init__T27b.first <= Accountmanagementsystem__init__T27b.last)) then (
    ((Accountmanagementsystem__init__T27b.last - Accountmanagementsystem__init__T27b.first) + 1)) else (
    0)) = (if ((Measures__userid.first <= Measures__userid.last)) then (
    ((Measures__userid.last - Measures__userid.first) + 1)) else (
    0))) ) };
   (Temp___standard__accountmanagementsystem_403.temp___standard__accountmanagementsystem_403((Boolean.of_int(0)))) ) ) );
   ( "GP_Sloc:accountmanagementsystem.adb:24:32" Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission := ( ( assert { ( "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Id:15" "GP_Sloc:accountmanagementsystem.adb:24:35" "comment:      EmergencyVitalPermission := (others => False);
                                  ^ accountmanagementsystem.adb:24:35:VC_LENGTH_CHECK" "GP_Shape:emergencyvitalpermission_assign__aggr" ((if ((Accountmanagementsystem__init__T29b.first <= Accountmanagementsystem__init__T29b.last)) then (
    ((Accountmanagementsystem__init__T29b.last - Accountmanagementsystem__init__T29b.first) + 1)) else (
    0)) = (if ((Measures__userid.first <= Measures__userid.last)) then (
    ((Measures__userid.last - Measures__userid.first) + 1)) else (
    0))) ) };
   (Temp___standard__accountmanagementsystem_407.temp___standard__accountmanagementsystem_407((Boolean.of_int(0)))) ) ) );
   ( "GP_Sloc:accountmanagementsystem.adb:26:20" Accountmanagementsystem__emrecordlist.emrecordlist := ( ( assert { ( "keep_on_simp" "GP_Reason:VC_LENGTH_CHECK" "GP_Id:16" "GP_Sloc:accountmanagementsystem.adb:26:23" "comment:      EMRecordList := (others => (UserID'First, BPM'First,(0.0, 0.0))); 
                      ^ accountmanagementsystem.adb:26:23:VC_LENGTH_CHECK" "GP_Shape:emrecordlist_assign__aggr" ((if ((Accountmanagementsystem__init__T31b.first <= Accountmanagementsystem__init__T31b.last)) then (
    ((Accountmanagementsystem__init__T31b.last - Accountmanagementsystem__init__T31b.first) + 1)) else (
    0)) = (if ((Standard__natural.first <= Standard__natural.last)) then (
    ((Standard__natural.last - Standard__natural.first) + 1)) else (
    0))) ) };
   (Temp___standard__accountmanagementsystem_411.temp___standard__accountmanagementsystem_411({ Accountmanagementsystem__emergencyrecord.__split_fields = { Accountmanagementsystem__emergencyrecord.rec__user = (Measures__userid.of_rep(( -1 ))); Accountmanagementsystem__emergencyrecord.rec__vitals = (Measures__bpm.of_rep(( -1 ))); Accountmanagementsystem__emergencyrecord.rec__location = { Measures__gpslocation.__split_fields = { Measures__gpslocation.rec__lat = (Measures__latitude.of_real((0.0E-1))); Measures__gpslocation.rec__long = (Measures__longitude.of_real((0.0E-1))) } } } })) ) ) );
   raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* Check additional Posts and RTE in Post of the subprogram accountmanagementsystem.ads:72 *)
  ;
  abstract ensures {true}(Main.___ignore((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb(( (let i = (any int
  ) in (
   (if ((Boolean.andb((( -1 ) <= i)) ((i <= 100)))) then (
    abstract ensures {true}(Main.___ignore((if ((Boolean.andb((i <> ( -1 ))) ((i <> 0)))) then (
     ((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (i)))) = (Boolean.to_int((Boolean.of_int(1)))))) else (
     ((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (i)))) = (Boolean.to_int((Boolean.of_int(0))))))))) end ))))
  ;
  (any bool
  requires {true} 
  ensures {( (result = True) <-> (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> (if (( (i <> ( -1 )) /\ (i <> 0) )) then (
    ( ((Array__Int.get !Accountmanagementsystem__users.users i) = True) <-> true )) else (
    ( ((Array__Int.get !Accountmanagementsystem__users.users i) = True) <-> false ))) )) )} 
  ) )) (( (let i = (any int
  ) in (
   (if ((Boolean.andb((( -1 ) <= i)) ((i <= 100)))) then (
    abstract ensures {true}(Main.___ignore(((Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__friends.friends) (i)))) = ( -1 )))) end ))))
  ;
  (any bool
  requires {true} 
  ensures {( (result = True) <-> (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ((Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__friends.friends i)) = ( -1 )) )) )} 
  ) )))) (( (let i = (any int
  ) in (
   (if ((Boolean.andb((( -1 ) <= i)) ((i <= 100)))) then (
    abstract ensures {true}(Main.___ignore(((Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__insurers.insurers) (i)))) = ( -1 )))) end ))))
  ;
  (any bool
  requires {true} 
  ensures {( (result = True) <-> (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ((Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__insurers.insurers i)) = ( -1 )) )) )} 
  ) )))) (( (let i = (any int
  ) in (
   (if ((Boolean.andb((( -1 ) <= i)) ((i <= 100)))) then (
    abstract ensures {true}(Main.___ignore(((Measures__bpm.to_rep((Array__Int.get(!Accountmanagementsystem__vitals.vitals) (i)))) = ( -1 )))) end ))))
  ;
  (any bool
  requires {true} 
  ensures {( (result = True) <-> (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ((Measures__bpm.to_rep (Array__Int.get !Accountmanagementsystem__vitals.vitals i)) = ( -1 )) )) )} 
  ) )))) (( (let i = (any int
  ) in (
   (if ((Boolean.andb((( -1 ) <= i)) ((i <= 100)))) then (
    abstract ensures {true}(Main.___ignore(((Measures__footsteps.to_rep((Array__Int.get(!Accountmanagementsystem__mfootsteps.mfootsteps) (i)))) = 0))) end ))))
  ;
  (any bool
  requires {true} 
  ensures {( (result = True) <-> (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ((Measures__footsteps.to_rep (Array__Int.get !Accountmanagementsystem__mfootsteps.mfootsteps i)) = 0) )) )} 
  ) )))) (( (let i = (any int
  ) in (
   (if ((Boolean.andb((( -1 ) <= i)) ((i <= 100)))) then (
    abstract ensures {true}(Main.___ignore((Measures__gpslocation.bool_eq((Array__Int.get(!Accountmanagementsystem__locations.locations) (i))) ({ Measures__gpslocation.__split_fields = { Measures__gpslocation.rec__lat = (Measures__latitude.of_real((0.0E-1))); Measures__gpslocation.rec__long = (Measures__longitude.of_real((0.0E-1))) } })))) end ))))
  ;
  (any bool
  requires {true} 
  ensures {( (result = True) <-> (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ((Measures__gpslocation.bool_eq (Array__Int.get !Accountmanagementsystem__locations.locations i) { Measures__gpslocation.__split_fields = { Measures__gpslocation.rec__lat = (Measures__latitude.of_real (0.0E-1)); Measures__gpslocation.rec__long = (Measures__longitude.of_real (0.0E-1)) } }) = True) )) )} 
  ) )))) (( (let i = (any int
  ) in (
   (if ((Boolean.andb((( -1 ) <= i)) ((i <= 100)))) then (
    abstract ensures {true}(Main.___ignore(((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission) (i)))) = (Boolean.to_int((Boolean.of_int(0))))))) end ))))
  ;
  (any bool
  requires {true} 
  ensures {( (result = True) <-> (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( ((Array__Int.get !Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission i) = True) <-> false ) )) )} 
  ) )))) (( (let i = (any int
  ) in (
   (if ((Boolean.andb((( -1 ) <= i)) ((i <= 100)))) then (
    abstract ensures {true}(Main.___ignore(((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__friendlocationpermission.friendlocationpermission) (i)))) = (Boolean.to_int((Boolean.of_int(0))))))) end ))))
  ;
  (any bool
  requires {true} 
  ensures {( (result = True) <-> (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( ((Array__Int.get !Accountmanagementsystem__friendlocationpermission.friendlocationpermission i) = True) <-> false ) )) )} 
  ) )))) (( (let i = (any int
  ) in (
   (if ((Boolean.andb((( -1 ) <= i)) ((i <= 100)))) then (
    abstract ensures {true}(Main.___ignore(((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission) (i)))) = (Boolean.to_int((Boolean.of_int(0))))))) end ))))
  ;
  (any bool
  requires {true} 
  ensures {( (result = True) <-> (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( ((Array__Int.get !Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission i) = True) <-> false ) )) )} 
  ) )))) (( (let i = (any int
  ) in (
   (if ((Boolean.andb((( -1 ) <= i)) ((i <= 100)))) then (
    abstract ensures {true}(Main.___ignore(((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission) (i)))) = (Boolean.to_int((Boolean.of_int(1))))))) end ))))
  ;
  (any bool
  requires {true} 
  ensures {( (result = True) <-> (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( ((Array__Int.get !Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission i) = True) <-> true ) )) )} 
  ) )))) (( (let i = (any int
  ) in (
   (if ((Boolean.andb((( -1 ) <= i)) ((i <= 100)))) then (
    abstract ensures {true}(Main.___ignore(((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission) (i)))) = (Boolean.to_int((Boolean.of_int(0))))))) end ))))
  ;
  (any bool
  requires {true} 
  ensures {( (result = True) <-> (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( ((Array__Int.get !Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission i) = True) <-> false ) )) )} 
  ) )))) (( (let i = (any int
  ) in (
   (if ((Boolean.andb((( -1 ) <= i)) ((i <= 100)))) then (
    abstract ensures {true}(Main.___ignore(((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission) (i)))) = (Boolean.to_int((Boolean.of_int(0))))))) end ))))
  ;
  (any bool
  requires {true} 
  ensures {( (result = True) <-> (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( ((Array__Int.get !Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission i) = True) <-> false ) )) )} 
  ) )))) (( (let i = (any int
  ) in (
   (if ((Boolean.andb((( -1 ) <= i)) ((i <= 100)))) then (
    abstract ensures {true}(Main.___ignore(((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission) (i)))) = (Boolean.to_int((Boolean.of_int(0))))))) end ))))
  ;
  (any bool
  requires {true} 
  ensures {( (result = True) <-> (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( ((Array__Int.get !Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission i) = True) <-> false ) )) )} 
  ) )))) (( (let i = (any int
  ) in (
   (if ((Boolean.andb((( -1 ) <= i)) ((i <= 100)))) then (
    abstract ensures {true}(Main.___ignore(((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission) (i)))) = (Boolean.to_int((Boolean.of_int(0))))))) end ))))
  ;
  (any bool
  requires {true} 
  ensures {( (result = True) <-> (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( ((Array__Int.get !Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission i) = True) <-> false ) )) )} 
  ) )))) (( (let i = (any int
  ) in (
   (if ((Boolean.andb((( -1 ) <= i)) ((i <= 100)))) then (
    abstract ensures {true}(Main.___ignore(((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission) (i)))) = (Boolean.to_int((Boolean.of_int(0))))))) end ))))
  ;
  (any bool
  requires {true} 
  ensures {( (result = True) <-> (forall i  : int.
   ( ( (( -1 ) <= i) /\ (i <= 100) ) -> ( ((Array__Int.get !Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission i) = True) <-> false ) )) )} 
  ) )))) (( (let i = (any int
  ) in (
   (if ((Boolean.andb((0 <= i)) ((i <= 2147483647)))) then (
    abstract ensures {true}(Main.___ignore((Accountmanagementsystem__emergencyrecord.bool_eq((Array__Int.get(!Accountmanagementsystem__emrecordlist.emrecordlist) (i))) ({ Accountmanagementsystem__emergencyrecord.__split_fields = { Accountmanagementsystem__emergencyrecord.rec__user = (Measures__userid.of_rep(( -1 ))); Accountmanagementsystem__emergencyrecord.rec__vitals = (Measures__bpm.of_rep(( -1 ))); Accountmanagementsystem__emergencyrecord.rec__location = { Measures__gpslocation.__split_fields = { Measures__gpslocation.rec__lat = (Measures__latitude.of_real((0.0E-1))); Measures__gpslocation.rec__long = (Measures__longitude.of_real((0.0E-1))) } } } })))) end ))))
  ;
  (any bool
  requires {true} 
  ensures {( (result = True) <-> (forall i  : int.
   ( ( (0 <= i) /\ (i <= 2147483647) ) -> ((Accountmanagementsystem__emergencyrecord.bool_eq (Array__Int.get !Accountmanagementsystem__emrecordlist.emrecordlist i) { Accountmanagementsystem__emergencyrecord.__split_fields = { Accountmanagementsystem__emergencyrecord.rec__user = (Measures__userid.of_rep ( -1 )); Accountmanagementsystem__emergencyrecord.rec__vitals = (Measures__bpm.of_rep ( -1 )); Accountmanagementsystem__emergencyrecord.rec__location = { Measures__gpslocation.__split_fields = { Measures__gpslocation.rec__lat = (Measures__latitude.of_real (0.0E-1)); Measures__gpslocation.rec__long = (Measures__longitude.of_real (0.0E-1)) } } } }) = True) )) )} 
  ) ))))) end  ) )
end

(* Module for checking contracts and absence of run-time errors in subprogram "createuser" defined at accountmanagementsystem.ads:106, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Accountmanagementsystem__createuser__subprogram_def
 use import "int".Int
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        "_gnatprove_standard".Boolean
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__latestuser
 use        Accountmanagementsystem__permissionarray
 use        Accountmanagementsystem__emergencyfootsteppermission
 use        Accountmanagementsystem__emergencylocationpermission
 use        Accountmanagementsystem__emergencyvitalpermission
 use        Accountmanagementsystem__createuser__newuser
 use        Temp___standard__accountmanagementsystem_16
 use        Temp___standard__accountmanagementsystem_23
 use        Temp___standard__accountmanagementsystem_30
 use        Temp___standard__accountmanagementsystem_37
 use        Accountmanagementsystem__usersarray__axiom
 use        Accountmanagementsystem__users__axiom
 use        Accountmanagementsystem__latestuser__axiom
 use        Accountmanagementsystem__permissionarray__axiom
 use        Accountmanagementsystem__emergencyfootsteppermission__axiom
 use        Accountmanagementsystem__emergencylocationpermission__axiom
 use        Accountmanagementsystem__emergencyvitalpermission__axiom
 use        Accountmanagementsystem__createuser__newuser__axiom
 use        Measures__userid__axiom

 let def "W:diverges:N" "GP_Subp:accountmanagementsystem.ads:106" 
   (__void_param : unit) 
  requires { true }
  ensures { ( "GP_Reason:VC_POSTCONDITION" "GP_Shape:pragargs__and" "keep_on_simp" "GP_Sloc:accountmanagementsystem.ads:109:6" "GP_Id:17" "comment:     (LatestUser = LatestUser'Old +1 ) and 
     ^ accountmanagementsystem.ads:109:6:VC_POSTCONDITION" ( ( ( ( ( "GP_Pretty_Ada:4123" "GP_Sloc:accountmanagementsystem.ads:109:6" (!Accountmanagementsystem__latestuser.latestuser = ((old !Accountmanagementsystem__latestuser.latestuser ) + 1)) ) /\ ( "GP_Pretty_Ada:4131" "GP_Sloc:accountmanagementsystem.ads:110:6" ((let temp___standard__accountmanagementsystem_440 = (Temp___standard__accountmanagementsystem_16.temp___standard__accountmanagementsystem_16 (old !Accountmanagementsystem__users.users ) !Accountmanagementsystem__createuser__newuser.newuser (Boolean.of_int 1)) in (
   (Array__Int.bool_eq !Accountmanagementsystem__users.users Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_440 Measures__userid.first Measures__userid.last)))
   = True) ) ) /\ ( "GP_Pretty_Ada:4143" "GP_Sloc:accountmanagementsystem.ads:111:6" ((let temp___standard__accountmanagementsystem_441 = (Temp___standard__accountmanagementsystem_23.temp___standard__accountmanagementsystem_23 (old !Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission ) !Accountmanagementsystem__createuser__newuser.newuser (Boolean.of_int 1)) in (
   (Array__Int.bool_eq !Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_441 Measures__userid.first Measures__userid.last)))
   = True) ) ) /\ ( "GP_Pretty_Ada:4155" "GP_Sloc:accountmanagementsystem.ads:113:6" ((let temp___standard__accountmanagementsystem_442 = (Temp___standard__accountmanagementsystem_30.temp___standard__accountmanagementsystem_30 (old !Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission ) !Accountmanagementsystem__createuser__newuser.newuser (Boolean.of_int 1)) in (
   (Array__Int.bool_eq !Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_442 Measures__userid.first Measures__userid.last)))
   = True) ) ) /\ ( "GP_Pretty_Ada:4167" "GP_Sloc:accountmanagementsystem.ads:115:6" ((let temp___standard__accountmanagementsystem_443 = (Temp___standard__accountmanagementsystem_37.temp___standard__accountmanagementsystem_37 (old !Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission ) !Accountmanagementsystem__createuser__newuser.newuser (Boolean.of_int 1)) in (
   (Array__Int.bool_eq !Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_443 Measures__userid.first Measures__userid.last)))
   = True) ) ) ) }

   =
  ( ( () (* Assume dynamic property of params of the subprogram accountmanagementsystem.ads:106 *)
  ;
  assume { (if ((Measures__userid.first <= Measures__userid.last)) then (
   (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last !Accountmanagementsystem__latestuser.latestuser)) else true) };
  assume { (if ((Measures__userid.first <= Measures__userid.last)) then (
   (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last !Accountmanagementsystem__createuser__newuser.newuser)) else true) } );
  ( ( () (* Declarations introduced by the compiler at the beginning of the subprogram accountmanagementsystem.ads:106 *)
  ;
  () (* Check for RTE in the Pre of the subprogram accountmanagementsystem.ads:106 *)
  ;
  abstract ensures {true}(Main.___ignore((!Accountmanagementsystem__latestuser.latestuser < 100))) end ;
  () (* Assume Pre of the subprogram accountmanagementsystem.ads:106 *)
  ;
  assume { (!Accountmanagementsystem__latestuser.latestuser < 100) } );
  ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__users.users)) end ;
  (let temp___standard__accountmanagementsystem_432 = (any Accountmanagementsystem__usersarray.usersarray
  ensures {(result = !Accountmanagementsystem__users.users)} 
  ) in (
   ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__latestuser.latestuser)) end ;
   (let temp___standard__accountmanagementsystem_431 = (any Measures__userid.__split
   ensures {(result = !Accountmanagementsystem__latestuser.latestuser)} 
   ) in (
    ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission)) end ;
    (let temp___standard__accountmanagementsystem_438 = (any Accountmanagementsystem__permissionarray.permissionarray
    ensures {(result = !Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission)} 
    ) in (
     ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission)) end ;
     (let temp___standard__accountmanagementsystem_436 = (any Accountmanagementsystem__permissionarray.permissionarray
     ensures {(result = !Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission)} 
     ) in (
      ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission)) end ;
      (let temp___standard__accountmanagementsystem_434 = (any Accountmanagementsystem__permissionarray.permissionarray
      ensures {(result = !Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission)} 
      ) in (
       ( () (* Check additional Pres of the subprogram accountmanagementsystem.ads:106 *)
       ;
       () (* Body of the subprogram accountmanagementsystem.ads:106 *)
       ;
       try
        ( ( "GP_Sloc:accountmanagementsystem.adb:31:18" Accountmanagementsystem__latestuser.latestuser := ( ( "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Id:18" "GP_Sloc:accountmanagementsystem.adb:31:32" "comment:      LatestUser := LatestUser + 1;
                               ^ accountmanagementsystem.adb:31:32:VC_RANGE_CHECK" "GP_Shape:latestuser_assign__add" (Measures__userid.range_check_((!Accountmanagementsystem__latestuser.latestuser + 1))) ) ) );
        ( "GP_Sloc:accountmanagementsystem.adb:32:25" Accountmanagementsystem__users.users := ( (Array__Int.set(!Accountmanagementsystem__users.users) (!Accountmanagementsystem__latestuser.latestuser) ((Boolean.of_int(1)))) ) );
        ( "GP_Sloc:accountmanagementsystem.adb:33:15" Accountmanagementsystem__createuser__newuser.newuser := ( !Accountmanagementsystem__latestuser.latestuser ) );
        ( "GP_Sloc:accountmanagementsystem.adb:35:41" Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission := ( (Array__Int.set(!Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission) (!Accountmanagementsystem__createuser__newuser.newuser) ((Boolean.of_int(1)))) ) );
        ( "GP_Sloc:accountmanagementsystem.adb:36:44" Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission := ( (Array__Int.set(!Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission) (!Accountmanagementsystem__createuser__newuser.newuser) ((Boolean.of_int(1)))) ) );
        ( "GP_Sloc:accountmanagementsystem.adb:37:44" Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission := ( (Array__Int.set(!Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission) (!Accountmanagementsystem__createuser__newuser.newuser) ((Boolean.of_int(1)))) ) );
        raise Return__exc )
       with
        Return__exc -> ()
       end;
       () (* Check additional Posts and RTE in Post of the subprogram accountmanagementsystem.ads:106 *)
       ;
       abstract ensures {true}(Main.___ignore((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((!Accountmanagementsystem__latestuser.latestuser = (temp___standard__accountmanagementsystem_431 + 1))) ((let temp___standard__accountmanagementsystem_433 = (Temp___standard__accountmanagementsystem_16.temp___standard__accountmanagementsystem_16(temp___standard__accountmanagementsystem_432) (!Accountmanagementsystem__createuser__newuser.newuser) ((Boolean.of_int(1)))) in (
        (Array__Int.bool_eq(!Accountmanagementsystem__users.users) (Measures__userid.first) (Measures__userid.last) (temp___standard__accountmanagementsystem_433) (Measures__userid.first) (Measures__userid.last))))
       ))) ((let temp___standard__accountmanagementsystem_435 = (Temp___standard__accountmanagementsystem_23.temp___standard__accountmanagementsystem_23(temp___standard__accountmanagementsystem_434) (!Accountmanagementsystem__createuser__newuser.newuser) ((Boolean.of_int(1)))) in (
        (Array__Int.bool_eq(!Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission) (Measures__userid.first) (Measures__userid.last) (temp___standard__accountmanagementsystem_435) (Measures__userid.first) (Measures__userid.last))))
       ))) ((let temp___standard__accountmanagementsystem_437 = (Temp___standard__accountmanagementsystem_30.temp___standard__accountmanagementsystem_30(temp___standard__accountmanagementsystem_436) (!Accountmanagementsystem__createuser__newuser.newuser) ((Boolean.of_int(1)))) in (
        (Array__Int.bool_eq(!Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission) (Measures__userid.first) (Measures__userid.last) (temp___standard__accountmanagementsystem_437) (Measures__userid.first) (Measures__userid.last))))
       ))) ((let temp___standard__accountmanagementsystem_439 = (Temp___standard__accountmanagementsystem_37.temp___standard__accountmanagementsystem_37(temp___standard__accountmanagementsystem_438) (!Accountmanagementsystem__createuser__newuser.newuser) ((Boolean.of_int(1)))) in (
        (Array__Int.bool_eq(!Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission) (Measures__userid.first) (Measures__userid.last) (temp___standard__accountmanagementsystem_439) (Measures__userid.first) (Measures__userid.last))))
       )))) end  )))
       )))
      )))
     )))
    )))
   ) ) )
end

(* Module for checking contracts and absence of run-time errors in subprogram "setinsurer" defined at accountmanagementsystem.ads:118, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Accountmanagementsystem__setinsurer__subprogram_def
 use import "int".Int
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        "_gnatprove_standard".Boolean
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__useruserarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__permissionarray
 use        Accountmanagementsystem__insurerfootsteppermission
 use        Accountmanagementsystem__insurerlocationpermission
 use        Accountmanagementsystem__insurervitalpermission
 use        Accountmanagementsystem__setinsurer__wearer
 use        Accountmanagementsystem__setinsurer__insurer
 use        Temp___standard__accountmanagementsystem_48
 use        Accountmanagementsystem__usersarray__axiom
 use        Accountmanagementsystem__useruserarray__axiom
 use        Accountmanagementsystem__users__axiom
 use        Accountmanagementsystem__insurers__axiom
 use        Accountmanagementsystem__friends__axiom
 use        Accountmanagementsystem__permissionarray__axiom
 use        Accountmanagementsystem__insurerfootsteppermission__axiom
 use        Accountmanagementsystem__insurerlocationpermission__axiom
 use        Accountmanagementsystem__insurervitalpermission__axiom
 use        Accountmanagementsystem__setinsurer__wearer__axiom
 use        Accountmanagementsystem__setinsurer__insurer__axiom
 use        Measures__userid__axiom

 let def "W:diverges:N" "GP_Subp:accountmanagementsystem.ads:118" 
   (__void_param : unit) 
  requires { true }
  ensures { ( "GP_Reason:VC_POSTCONDITION" "keep_on_simp" "GP_Sloc:accountmanagementsystem.ads:125:14" "GP_Id:19" "comment:     Post => (Insurers = Insurers'Old'Update(Wearer => Insurer));
             ^ accountmanagementsystem.ads:125:14:VC_POSTCONDITION" "GP_Shape:pragargs__cmp" ( "GP_Pretty_Ada:6442" "GP_Sloc:accountmanagementsystem.ads:125:14" ((let temp___standard__accountmanagementsystem_450 = (Temp___standard__accountmanagementsystem_48.temp___standard__accountmanagementsystem_48 (old !Accountmanagementsystem__insurers.insurers ) Accountmanagementsystem__setinsurer__wearer.wearer Accountmanagementsystem__setinsurer__insurer.insurer) in (
   (Array__Int.bool_eq !Accountmanagementsystem__insurers.insurers Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_450 Measures__userid.first Measures__userid.last)))
   = True) ) ) }

   =
  ( ( () (* Assume dynamic property of params of the subprogram accountmanagementsystem.ads:118 *)
  ;
  assume { (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last Accountmanagementsystem__setinsurer__wearer.wearer) };
  assume { (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last Accountmanagementsystem__setinsurer__insurer.insurer) } );
  ( ( () (* Declarations introduced by the compiler at the beginning of the subprogram accountmanagementsystem.ads:118 *)
  ;
  () (* Check for RTE in the Pre of the subprogram accountmanagementsystem.ads:118 *)
  ;
  abstract ensures {true}(Main.___ignore((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((( -1 ) <= Accountmanagementsystem__setinsurer__wearer.wearer)) ((Accountmanagementsystem__setinsurer__wearer.wearer <= 100)))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__setinsurer__wearer.wearer)))) = (Boolean.to_int((Boolean.of_int(1)))))))) ((Boolean.andb((( -1 ) <= Accountmanagementsystem__setinsurer__insurer.insurer)) ((Accountmanagementsystem__setinsurer__insurer.insurer <= 100)))))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__setinsurer__insurer.insurer)))) = (Boolean.to_int((Boolean.of_int(1)))))))) ((Accountmanagementsystem__setinsurer__insurer.insurer <> Accountmanagementsystem__setinsurer__wearer.wearer)))) ((Accountmanagementsystem__setinsurer__insurer.insurer <> (Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__friends.friends) (Accountmanagementsystem__setinsurer__wearer.wearer)))))))) ((Accountmanagementsystem__setinsurer__insurer.insurer <> 0)))) ((Accountmanagementsystem__setinsurer__insurer.insurer <> ( -1 )))))) end ;
  () (* Assume Pre of the subprogram accountmanagementsystem.ads:118 *)
  ;
  assume { ( ( ( ( ( ( ( ( (( -1 ) <= Accountmanagementsystem__setinsurer__wearer.wearer) /\ (Accountmanagementsystem__setinsurer__wearer.wearer <= 100) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users Accountmanagementsystem__setinsurer__wearer.wearer) = True) <-> true ) ) /\ ( (( -1 ) <= Accountmanagementsystem__setinsurer__insurer.insurer) /\ (Accountmanagementsystem__setinsurer__insurer.insurer <= 100) ) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users Accountmanagementsystem__setinsurer__insurer.insurer) = True) <-> true ) ) /\ (Accountmanagementsystem__setinsurer__insurer.insurer <> Accountmanagementsystem__setinsurer__wearer.wearer) ) /\ (Accountmanagementsystem__setinsurer__insurer.insurer <> (Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__friends.friends Accountmanagementsystem__setinsurer__wearer.wearer))) ) /\ (Accountmanagementsystem__setinsurer__insurer.insurer <> 0) ) /\ (Accountmanagementsystem__setinsurer__insurer.insurer <> ( -1 )) ) } );
  ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__insurers.insurers)) end ;
  (let temp___standard__accountmanagementsystem_448 = (any Accountmanagementsystem__useruserarray.useruserarray
  ensures {(result = !Accountmanagementsystem__insurers.insurers)} 
  ) in (
   ( () (* Check additional Pres of the subprogram accountmanagementsystem.ads:118 *)
   ;
   () (* Body of the subprogram accountmanagementsystem.ads:118 *)
   ;
   try
    ( ( "GP_Sloc:accountmanagementsystem.adb:43:7" (if ((Boolean.andb(((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__setinsurer__wearer.wearer)))) = (Boolean.to_int((Boolean.of_int(1)))))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__setinsurer__insurer.insurer)))) = (Boolean.to_int((Boolean.of_int(1)))))))) then (
     ( "GP_Sloc:accountmanagementsystem.adb:44:10" (if ((Boolean.andb((Boolean.andb((Accountmanagementsystem__setinsurer__insurer.insurer <> (Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__friends.friends) (Accountmanagementsystem__setinsurer__wearer.wearer)))))) ((Accountmanagementsystem__setinsurer__insurer.insurer <> 0)))) ((Accountmanagementsystem__setinsurer__insurer.insurer <> Accountmanagementsystem__setinsurer__wearer.wearer)))) then (
      ( ( "GP_Sloc:accountmanagementsystem.adb:45:30" Accountmanagementsystem__insurers.insurers := ( (Array__Int.set(!Accountmanagementsystem__insurers.insurers) (Accountmanagementsystem__setinsurer__wearer.wearer) ((Measures__userid.of_rep(Accountmanagementsystem__setinsurer__insurer.insurer)))) ) );
      ( "GP_Sloc:accountmanagementsystem.adb:47:44" Accountmanagementsystem__insurervitalpermission.insurervitalpermission := ( (Array__Int.set(!Accountmanagementsystem__insurervitalpermission.insurervitalpermission) (Accountmanagementsystem__setinsurer__wearer.wearer) ((Boolean.of_int(0)))) ) );
      ( "GP_Sloc:accountmanagementsystem.adb:48:47" Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission := ( (Array__Int.set(!Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission) (Accountmanagementsystem__setinsurer__wearer.wearer) ((Boolean.of_int(0)))) ) );
      ( "GP_Sloc:accountmanagementsystem.adb:49:47" Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission := ( (Array__Int.set(!Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission) (Accountmanagementsystem__setinsurer__wearer.wearer) ((Boolean.of_int(1)))) ) ) )) else (
      ())) )) else (
     ())) );
    raise Return__exc )
   with
    Return__exc -> ()
   end;
   () (* Check additional Posts and RTE in Post of the subprogram accountmanagementsystem.ads:118 *)
   ;
   abstract ensures {true}(Main.___ignore((let temp___standard__accountmanagementsystem_449 = (Temp___standard__accountmanagementsystem_48.temp___standard__accountmanagementsystem_48(temp___standard__accountmanagementsystem_448) (Accountmanagementsystem__setinsurer__wearer.wearer) (Accountmanagementsystem__setinsurer__insurer.insurer)) in (
    (Array__Int.bool_eq(!Accountmanagementsystem__insurers.insurers) (Measures__userid.first) (Measures__userid.last) (temp___standard__accountmanagementsystem_449) (Measures__userid.first) (Measures__userid.last))))
   )) end  )))
   ) ) )
end

(* Module for checking contracts and absence of run-time errors in subprogram "readinsurer" defined at accountmanagementsystem.ads:127, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Accountmanagementsystem__readinsurer__subprogram_def
 use import "int".Int
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__useruserarray
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__readinsurer__wearer
 use        Accountmanagementsystem__useruserarray__axiom
 use        Accountmanagementsystem__insurers__axiom
 use        Accountmanagementsystem__readinsurer__wearer__axiom
 use        Measures__userid__axiom

 val accountmanagementsystem__readinsurer__result "\"GP_Ada_Name:ReadInsurer'Result\""  : ref Measures__userid.__split
 
 let def "W:diverges:N" "GP_Subp:accountmanagementsystem.ads:127" 
   (__void_param : unit) 
  requires { true }
  ensures { true }

   =
  ( ( () (* Assume dynamic property of params of the subprogram accountmanagementsystem.ads:127 *)
  ;
  assume { (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last Accountmanagementsystem__readinsurer__wearer.wearer) } );
  ( ( () (* Declarations introduced by the compiler at the beginning of the subprogram accountmanagementsystem.ads:127 *)
  ;
  () (* Check for RTE in the Pre of the subprogram accountmanagementsystem.ads:127 *)
  ;
  abstract ensures {true}(Main.___ignore(True)) end ;
  () (* Assume Pre of the subprogram accountmanagementsystem.ads:127 *)
  ;
  assume { true } );
  ( () (* Check additional Pres of the subprogram accountmanagementsystem.ads:127 *)
  ;
  () (* Body of the subprogram accountmanagementsystem.ads:127 *)
  ;
  try
   ( ( "GP_Sloc:accountmanagementsystem.ads:128:8" ( accountmanagementsystem__readinsurer__result := ( (Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__insurers.insurers) (Accountmanagementsystem__readinsurer__wearer.wearer)))) );
   raise Return__exc ) );
   raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* Check additional Posts and RTE in Post of the subprogram accountmanagementsystem.ads:127 *)
  ;
  abstract ensures {true}(Main.___ignore(True)) end ;
  !accountmanagementsystem__readinsurer__result ) ) )
end

(* Module for checking contracts and absence of run-time errors in subprogram "removeinsurer" defined at accountmanagementsystem.ads:130, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Accountmanagementsystem__removeinsurer__subprogram_def
 use import "int".Int
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        "_gnatprove_standard".Boolean
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__useruserarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__permissionarray
 use        Accountmanagementsystem__insurerfootsteppermission
 use        Accountmanagementsystem__insurerlocationpermission
 use        Accountmanagementsystem__insurervitalpermission
 use        Accountmanagementsystem__removeinsurer__wearer
 use        Temp___standard__accountmanagementsystem_61
 use        Temp___standard__accountmanagementsystem_68
 use        Temp___standard__accountmanagementsystem_75
 use        Accountmanagementsystem__usersarray__axiom
 use        Accountmanagementsystem__useruserarray__axiom
 use        Accountmanagementsystem__users__axiom
 use        Accountmanagementsystem__insurers__axiom
 use        Accountmanagementsystem__permissionarray__axiom
 use        Accountmanagementsystem__insurerfootsteppermission__axiom
 use        Accountmanagementsystem__insurerlocationpermission__axiom
 use        Accountmanagementsystem__insurervitalpermission__axiom
 use        Accountmanagementsystem__removeinsurer__wearer__axiom
 use        Measures__userid__axiom

 let def "W:diverges:N" "GP_Subp:accountmanagementsystem.ads:130" 
   (__void_param : unit) 
  requires { true }
  ensures { ( "GP_Reason:VC_POSTCONDITION" "GP_Shape:pragargs__and" "keep_on_simp" "GP_Sloc:accountmanagementsystem.ads:134:14" "GP_Id:20" "comment:     Post => (Insurers = Insurers'Old'Update(Wearer => UserID'First))
             ^ accountmanagementsystem.ads:134:14:VC_POSTCONDITION" ( ( ( "GP_Pretty_Ada:4329" "GP_Sloc:accountmanagementsystem.ads:134:14" ((let temp___standard__accountmanagementsystem_464 = (Temp___standard__accountmanagementsystem_61.temp___standard__accountmanagementsystem_61 (old !Accountmanagementsystem__insurers.insurers ) Accountmanagementsystem__removeinsurer__wearer.wearer ( -1 )) in (
   (Array__Int.bool_eq !Accountmanagementsystem__insurers.insurers Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_464 Measures__userid.first Measures__userid.last)))
   = True) ) /\ ( "GP_Pretty_Ada:4343" "GP_Sloc:accountmanagementsystem.ads:135:10" ((let temp___standard__accountmanagementsystem_465 = (Temp___standard__accountmanagementsystem_68.temp___standard__accountmanagementsystem_68 (old !Accountmanagementsystem__insurervitalpermission.insurervitalpermission ) Accountmanagementsystem__removeinsurer__wearer.wearer (Boolean.of_int 0)) in (
   (Array__Int.bool_eq !Accountmanagementsystem__insurervitalpermission.insurervitalpermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_465 Measures__userid.first Measures__userid.last)))
   = True) ) ) /\ ( "GP_Pretty_Ada:4355" "GP_Sloc:accountmanagementsystem.ads:137:10" ((let temp___standard__accountmanagementsystem_466 = (Temp___standard__accountmanagementsystem_75.temp___standard__accountmanagementsystem_75 (old !Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission ) Accountmanagementsystem__removeinsurer__wearer.wearer (Boolean.of_int 0)) in (
   (Array__Int.bool_eq !Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_466 Measures__userid.first Measures__userid.last)))
   = True) ) ) ) }

   =
  ( ( () (* Assume dynamic property of params of the subprogram accountmanagementsystem.ads:130 *)
  ;
  assume { (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last Accountmanagementsystem__removeinsurer__wearer.wearer) } );
  ( ( () (* Declarations introduced by the compiler at the beginning of the subprogram accountmanagementsystem.ads:130 *)
  ;
  () (* Check for RTE in the Pre of the subprogram accountmanagementsystem.ads:130 *)
  ;
  abstract ensures {true}(Main.___ignore((Boolean.andb((Boolean.andb((Boolean.andb((( -1 ) <= Accountmanagementsystem__removeinsurer__wearer.wearer)) ((Accountmanagementsystem__removeinsurer__wearer.wearer <= 100)))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__removeinsurer__wearer.wearer)))) = (Boolean.to_int((Boolean.of_int(1)))))))) (((Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__insurers.insurers) (Accountmanagementsystem__removeinsurer__wearer.wearer)))) <> ( -1 )))))) end ;
  () (* Assume Pre of the subprogram accountmanagementsystem.ads:130 *)
  ;
  assume { ( ( ( (( -1 ) <= Accountmanagementsystem__removeinsurer__wearer.wearer) /\ (Accountmanagementsystem__removeinsurer__wearer.wearer <= 100) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users Accountmanagementsystem__removeinsurer__wearer.wearer) = True) <-> true ) ) /\ ((Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__insurers.insurers Accountmanagementsystem__removeinsurer__wearer.wearer)) <> ( -1 )) ) } );
  ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__insurervitalpermission.insurervitalpermission)) end ;
  (let temp___standard__accountmanagementsystem_460 = (any Accountmanagementsystem__permissionarray.permissionarray
  ensures {(result = !Accountmanagementsystem__insurervitalpermission.insurervitalpermission)} 
  ) in (
   ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__insurers.insurers)) end ;
   (let temp___standard__accountmanagementsystem_458 = (any Accountmanagementsystem__useruserarray.useruserarray
   ensures {(result = !Accountmanagementsystem__insurers.insurers)} 
   ) in (
    ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission)) end ;
    (let temp___standard__accountmanagementsystem_462 = (any Accountmanagementsystem__permissionarray.permissionarray
    ensures {(result = !Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission)} 
    ) in (
     ( () (* Check additional Pres of the subprogram accountmanagementsystem.ads:130 *)
     ;
     () (* Body of the subprogram accountmanagementsystem.ads:130 *)
     ;
     try
      ( ( "GP_Sloc:accountmanagementsystem.adb:59:7" (if (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__removeinsurer__wearer.wearer)))) = (Boolean.to_int((Boolean.of_int(1)))))) then (
       ( ( "GP_Sloc:accountmanagementsystem.adb:60:27" Accountmanagementsystem__insurers.insurers := ( (Array__Int.set(!Accountmanagementsystem__insurers.insurers) (Accountmanagementsystem__removeinsurer__wearer.wearer) ((Measures__userid.of_rep(( -1 ))))) ) );
       ( "GP_Sloc:accountmanagementsystem.adb:62:41" Accountmanagementsystem__insurervitalpermission.insurervitalpermission := ( (Array__Int.set(!Accountmanagementsystem__insurervitalpermission.insurervitalpermission) (Accountmanagementsystem__removeinsurer__wearer.wearer) ((Boolean.of_int(0)))) ) );
       ( "GP_Sloc:accountmanagementsystem.adb:63:44" Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission := ( (Array__Int.set(!Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission) (Accountmanagementsystem__removeinsurer__wearer.wearer) ((Boolean.of_int(0)))) ) );
       ( "GP_Sloc:accountmanagementsystem.adb:64:44" Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission := ( (Array__Int.set(!Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission) (Accountmanagementsystem__removeinsurer__wearer.wearer) ((Boolean.of_int(1)))) ) ) )) else (
       ())) );
      raise Return__exc )
     with
      Return__exc -> ()
     end;
     () (* Check additional Posts and RTE in Post of the subprogram accountmanagementsystem.ads:130 *)
     ;
     abstract ensures {true}(Main.___ignore((Boolean.andb((Boolean.andb((let temp___standard__accountmanagementsystem_459 = (Temp___standard__accountmanagementsystem_61.temp___standard__accountmanagementsystem_61(temp___standard__accountmanagementsystem_458) (Accountmanagementsystem__removeinsurer__wearer.wearer) (( -1 ))) in (
      (Array__Int.bool_eq(!Accountmanagementsystem__insurers.insurers) (Measures__userid.first) (Measures__userid.last) (temp___standard__accountmanagementsystem_459) (Measures__userid.first) (Measures__userid.last))))
     ) ((let temp___standard__accountmanagementsystem_461 = (Temp___standard__accountmanagementsystem_68.temp___standard__accountmanagementsystem_68(temp___standard__accountmanagementsystem_460) (Accountmanagementsystem__removeinsurer__wearer.wearer) ((Boolean.of_int(0)))) in (
      (Array__Int.bool_eq(!Accountmanagementsystem__insurervitalpermission.insurervitalpermission) (Measures__userid.first) (Measures__userid.last) (temp___standard__accountmanagementsystem_461) (Measures__userid.first) (Measures__userid.last))))
     ))) ((let temp___standard__accountmanagementsystem_463 = (Temp___standard__accountmanagementsystem_75.temp___standard__accountmanagementsystem_75(temp___standard__accountmanagementsystem_462) (Accountmanagementsystem__removeinsurer__wearer.wearer) ((Boolean.of_int(0)))) in (
      (Array__Int.bool_eq(!Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission) (Measures__userid.first) (Measures__userid.last) (temp___standard__accountmanagementsystem_463) (Measures__userid.first) (Measures__userid.last))))
     )))) end  )))
     )))
    )))
   ) ) )
end

(* Module for checking contracts and absence of run-time errors in subprogram "setfriend" defined at accountmanagementsystem.ads:140, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Accountmanagementsystem__setfriend__subprogram_def
 use import "int".Int
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        "_gnatprove_standard".Boolean
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__useruserarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__permissionarray
 use        Accountmanagementsystem__friendfootsteppermission
 use        Accountmanagementsystem__friendlocationpermission
 use        Accountmanagementsystem__friendvitalpermission
 use        Accountmanagementsystem__setfriend__wearer
 use        Accountmanagementsystem__setfriend__friend
 use        Temp___standard__accountmanagementsystem_86
 use        Accountmanagementsystem__usersarray__axiom
 use        Accountmanagementsystem__useruserarray__axiom
 use        Accountmanagementsystem__users__axiom
 use        Accountmanagementsystem__insurers__axiom
 use        Accountmanagementsystem__friends__axiom
 use        Accountmanagementsystem__permissionarray__axiom
 use        Accountmanagementsystem__friendfootsteppermission__axiom
 use        Accountmanagementsystem__friendlocationpermission__axiom
 use        Accountmanagementsystem__friendvitalpermission__axiom
 use        Accountmanagementsystem__setfriend__wearer__axiom
 use        Accountmanagementsystem__setfriend__friend__axiom
 use        Measures__userid__axiom

 let def "W:diverges:N" "GP_Subp:accountmanagementsystem.ads:140" 
   (__void_param : unit) 
  requires { true }
  ensures { ( "GP_Reason:VC_POSTCONDITION" "keep_on_simp" "GP_Shape:pragargs__cmp" "GP_Sloc:accountmanagementsystem.ads:147:14" "GP_Id:21" "comment:     Post => Friends = Friends'Old'Update(Wearer => Friend);
             ^ accountmanagementsystem.ads:147:14:VC_POSTCONDITION" ( "GP_Pretty_Ada:6619" "GP_Sloc:accountmanagementsystem.ads:147:14" ((let temp___standard__accountmanagementsystem_474 = (Temp___standard__accountmanagementsystem_86.temp___standard__accountmanagementsystem_86 (old !Accountmanagementsystem__friends.friends ) Accountmanagementsystem__setfriend__wearer.wearer Accountmanagementsystem__setfriend__friend.friend) in (
   (Array__Int.bool_eq !Accountmanagementsystem__friends.friends Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_474 Measures__userid.first Measures__userid.last)))
   = True) ) ) }

   =
  ( ( () (* Assume dynamic property of params of the subprogram accountmanagementsystem.ads:140 *)
  ;
  assume { (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last Accountmanagementsystem__setfriend__wearer.wearer) };
  assume { (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last Accountmanagementsystem__setfriend__friend.friend) } );
  ( ( () (* Declarations introduced by the compiler at the beginning of the subprogram accountmanagementsystem.ads:140 *)
  ;
  () (* Check for RTE in the Pre of the subprogram accountmanagementsystem.ads:140 *)
  ;
  abstract ensures {true}(Main.___ignore((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((( -1 ) <= Accountmanagementsystem__setfriend__wearer.wearer)) ((Accountmanagementsystem__setfriend__wearer.wearer <= 100)))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__setfriend__wearer.wearer)))) = (Boolean.to_int((Boolean.of_int(1)))))))) ((Boolean.andb((( -1 ) <= Accountmanagementsystem__setfriend__friend.friend)) ((Accountmanagementsystem__setfriend__friend.friend <= 100)))))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__setfriend__friend.friend)))) = (Boolean.to_int((Boolean.of_int(1)))))))) ((Accountmanagementsystem__setfriend__friend.friend <> Accountmanagementsystem__setfriend__wearer.wearer)))) ((Accountmanagementsystem__setfriend__friend.friend <> (Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__insurers.insurers) (Accountmanagementsystem__setfriend__wearer.wearer)))))))) ((Accountmanagementsystem__setfriend__friend.friend <> 0)))) ((Accountmanagementsystem__setfriend__friend.friend <> ( -1 )))))) end ;
  () (* Assume Pre of the subprogram accountmanagementsystem.ads:140 *)
  ;
  assume { ( ( ( ( ( ( ( ( (( -1 ) <= Accountmanagementsystem__setfriend__wearer.wearer) /\ (Accountmanagementsystem__setfriend__wearer.wearer <= 100) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users Accountmanagementsystem__setfriend__wearer.wearer) = True) <-> true ) ) /\ ( (( -1 ) <= Accountmanagementsystem__setfriend__friend.friend) /\ (Accountmanagementsystem__setfriend__friend.friend <= 100) ) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users Accountmanagementsystem__setfriend__friend.friend) = True) <-> true ) ) /\ (Accountmanagementsystem__setfriend__friend.friend <> Accountmanagementsystem__setfriend__wearer.wearer) ) /\ (Accountmanagementsystem__setfriend__friend.friend <> (Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__insurers.insurers Accountmanagementsystem__setfriend__wearer.wearer))) ) /\ (Accountmanagementsystem__setfriend__friend.friend <> 0) ) /\ (Accountmanagementsystem__setfriend__friend.friend <> ( -1 )) ) } );
  ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__friends.friends)) end ;
  (let temp___standard__accountmanagementsystem_472 = (any Accountmanagementsystem__useruserarray.useruserarray
  ensures {(result = !Accountmanagementsystem__friends.friends)} 
  ) in (
   ( () (* Check additional Pres of the subprogram accountmanagementsystem.ads:140 *)
   ;
   () (* Body of the subprogram accountmanagementsystem.ads:140 *)
   ;
   try
    ( ( "GP_Sloc:accountmanagementsystem.adb:72:6" (if ((Boolean.andb(((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__setfriend__wearer.wearer)))) = (Boolean.to_int((Boolean.of_int(1)))))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__setfriend__friend.friend)))) = (Boolean.to_int((Boolean.of_int(1)))))))) then (
     ( "GP_Sloc:accountmanagementsystem.adb:73:7" (if ((Boolean.andb((Boolean.andb((Accountmanagementsystem__setfriend__friend.friend <> (Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__insurers.insurers) (Accountmanagementsystem__setfriend__wearer.wearer)))))) ((Accountmanagementsystem__setfriend__friend.friend <> Accountmanagementsystem__setfriend__wearer.wearer)))) ((Accountmanagementsystem__setfriend__friend.friend <> 0)))) then (
      ( ( "GP_Sloc:accountmanagementsystem.adb:74:29" Accountmanagementsystem__friends.friends := ( (Array__Int.set(!Accountmanagementsystem__friends.friends) (Accountmanagementsystem__setfriend__wearer.wearer) ((Measures__userid.of_rep(Accountmanagementsystem__setfriend__friend.friend)))) ) );
      ( "GP_Sloc:accountmanagementsystem.adb:76:43" Accountmanagementsystem__friendvitalpermission.friendvitalpermission := ( (Array__Int.set(!Accountmanagementsystem__friendvitalpermission.friendvitalpermission) (Accountmanagementsystem__setfriend__wearer.wearer) ((Boolean.of_int(0)))) ) );
      ( "GP_Sloc:accountmanagementsystem.adb:77:46" Accountmanagementsystem__friendlocationpermission.friendlocationpermission := ( (Array__Int.set(!Accountmanagementsystem__friendlocationpermission.friendlocationpermission) (Accountmanagementsystem__setfriend__wearer.wearer) ((Boolean.of_int(0)))) ) );
      ( "GP_Sloc:accountmanagementsystem.adb:78:46" Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission := ( (Array__Int.set(!Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission) (Accountmanagementsystem__setfriend__wearer.wearer) ((Boolean.of_int(0)))) ) ) )) else (
      ())) )) else (
     ())) );
    raise Return__exc )
   with
    Return__exc -> ()
   end;
   () (* Check additional Posts and RTE in Post of the subprogram accountmanagementsystem.ads:140 *)
   ;
   abstract ensures {true}(Main.___ignore((let temp___standard__accountmanagementsystem_473 = (Temp___standard__accountmanagementsystem_86.temp___standard__accountmanagementsystem_86(temp___standard__accountmanagementsystem_472) (Accountmanagementsystem__setfriend__wearer.wearer) (Accountmanagementsystem__setfriend__friend.friend)) in (
    (Array__Int.bool_eq(!Accountmanagementsystem__friends.friends) (Measures__userid.first) (Measures__userid.last) (temp___standard__accountmanagementsystem_473) (Measures__userid.first) (Measures__userid.last))))
   )) end  )))
   ) ) )
end

(* Module for checking contracts and absence of run-time errors in subprogram "readfriend" defined at accountmanagementsystem.ads:149, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Accountmanagementsystem__readfriend__subprogram_def
 use import "int".Int
 use import "_gnatprove_standard".Main
 use        "_gnatprove_standard".Main
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__useruserarray
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__readfriend__wearer
 use        Accountmanagementsystem__useruserarray__axiom
 use        Accountmanagementsystem__friends__axiom
 use        Accountmanagementsystem__readfriend__wearer__axiom
 use        Measures__userid__axiom

 val accountmanagementsystem__readfriend__result "\"GP_Ada_Name:ReadFriend'Result\""  : ref Measures__userid.__split
 
 let def "W:diverges:N" "GP_Subp:accountmanagementsystem.ads:149" 
   (__void_param : unit) 
  requires { true }
  ensures { true }

   =
  ( ( () (* Assume dynamic property of params of the subprogram accountmanagementsystem.ads:149 *)
  ;
  assume { (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last Accountmanagementsystem__readfriend__wearer.wearer) } );
  ( ( () (* Declarations introduced by the compiler at the beginning of the subprogram accountmanagementsystem.ads:149 *)
  ;
  () (* Check for RTE in the Pre of the subprogram accountmanagementsystem.ads:149 *)
  ;
  abstract ensures {true}(Main.___ignore(True)) end ;
  () (* Assume Pre of the subprogram accountmanagementsystem.ads:149 *)
  ;
  assume { true } );
  ( () (* Check additional Pres of the subprogram accountmanagementsystem.ads:149 *)
  ;
  () (* Body of the subprogram accountmanagementsystem.ads:149 *)
  ;
  try
   ( ( "GP_Sloc:accountmanagementsystem.ads:150:8" ( accountmanagementsystem__readfriend__result := ( (Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__friends.friends) (Accountmanagementsystem__readfriend__wearer.wearer)))) );
   raise Return__exc ) );
   raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* Check additional Posts and RTE in Post of the subprogram accountmanagementsystem.ads:149 *)
  ;
  abstract ensures {true}(Main.___ignore(True)) end ;
  !accountmanagementsystem__readfriend__result ) ) )
end

(* Module for checking contracts and absence of run-time errors in subprogram "removefriend" defined at accountmanagementsystem.ads:152, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Accountmanagementsystem__removefriend__subprogram_def
 use import "int".Int
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        "_gnatprove_standard".Boolean
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__useruserarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__permissionarray
 use        Accountmanagementsystem__friendfootsteppermission
 use        Accountmanagementsystem__friendlocationpermission
 use        Accountmanagementsystem__friendvitalpermission
 use        Accountmanagementsystem__removefriend__wearer
 use        Temp___standard__accountmanagementsystem_99
 use        Temp___standard__accountmanagementsystem_106
 use        Temp___standard__accountmanagementsystem_113
 use        Temp___standard__accountmanagementsystem_120
 use        Accountmanagementsystem__usersarray__axiom
 use        Accountmanagementsystem__useruserarray__axiom
 use        Accountmanagementsystem__users__axiom
 use        Accountmanagementsystem__friends__axiom
 use        Accountmanagementsystem__permissionarray__axiom
 use        Accountmanagementsystem__friendfootsteppermission__axiom
 use        Accountmanagementsystem__friendlocationpermission__axiom
 use        Accountmanagementsystem__friendvitalpermission__axiom
 use        Accountmanagementsystem__removefriend__wearer__axiom
 use        Measures__userid__axiom

 let def "W:diverges:N" "GP_Subp:accountmanagementsystem.ads:152" 
   (__void_param : unit) 
  requires { true }
  ensures { ( "GP_Reason:VC_POSTCONDITION" "GP_Shape:pragargs__and" "keep_on_simp" "GP_Sloc:accountmanagementsystem.ads:156:14" "GP_Id:22" "comment:     Post => (Friends = Friends'Old'Update(Wearer => UserID'First))
             ^ accountmanagementsystem.ads:156:14:VC_POSTCONDITION" ( ( ( ( "GP_Pretty_Ada:4517" "GP_Sloc:accountmanagementsystem.ads:156:14" ((let temp___standard__accountmanagementsystem_490 = (Temp___standard__accountmanagementsystem_99.temp___standard__accountmanagementsystem_99 (old !Accountmanagementsystem__friends.friends ) Accountmanagementsystem__removefriend__wearer.wearer ( -1 )) in (
   (Array__Int.bool_eq !Accountmanagementsystem__friends.friends Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_490 Measures__userid.first Measures__userid.last)))
   = True) ) /\ ( "GP_Pretty_Ada:4531" "GP_Sloc:accountmanagementsystem.ads:157:10" ((let temp___standard__accountmanagementsystem_491 = (Temp___standard__accountmanagementsystem_106.temp___standard__accountmanagementsystem_106 (old !Accountmanagementsystem__friendvitalpermission.friendvitalpermission ) Accountmanagementsystem__removefriend__wearer.wearer (Boolean.of_int 0)) in (
   (Array__Int.bool_eq !Accountmanagementsystem__friendvitalpermission.friendvitalpermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_491 Measures__userid.first Measures__userid.last)))
   = True) ) ) /\ ( "GP_Pretty_Ada:4543" "GP_Sloc:accountmanagementsystem.ads:159:10" ((let temp___standard__accountmanagementsystem_492 = (Temp___standard__accountmanagementsystem_113.temp___standard__accountmanagementsystem_113 (old !Accountmanagementsystem__friendlocationpermission.friendlocationpermission ) Accountmanagementsystem__removefriend__wearer.wearer (Boolean.of_int 0)) in (
   (Array__Int.bool_eq !Accountmanagementsystem__friendlocationpermission.friendlocationpermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_492 Measures__userid.first Measures__userid.last)))
   = True) ) ) /\ ( "GP_Pretty_Ada:4555" "GP_Sloc:accountmanagementsystem.ads:161:10" ((let temp___standard__accountmanagementsystem_493 = (Temp___standard__accountmanagementsystem_120.temp___standard__accountmanagementsystem_120 (old !Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission ) Accountmanagementsystem__removefriend__wearer.wearer (Boolean.of_int 0)) in (
   (Array__Int.bool_eq !Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_493 Measures__userid.first Measures__userid.last)))
   = True) ) ) ) }

   =
  ( ( () (* Assume dynamic property of params of the subprogram accountmanagementsystem.ads:152 *)
  ;
  assume { (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last Accountmanagementsystem__removefriend__wearer.wearer) } );
  ( ( () (* Declarations introduced by the compiler at the beginning of the subprogram accountmanagementsystem.ads:152 *)
  ;
  () (* Check for RTE in the Pre of the subprogram accountmanagementsystem.ads:152 *)
  ;
  abstract ensures {true}(Main.___ignore((Boolean.andb((Boolean.andb((Boolean.andb((( -1 ) <= Accountmanagementsystem__removefriend__wearer.wearer)) ((Accountmanagementsystem__removefriend__wearer.wearer <= 100)))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__removefriend__wearer.wearer)))) = (Boolean.to_int((Boolean.of_int(1)))))))) (((Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__friends.friends) (Accountmanagementsystem__removefriend__wearer.wearer)))) <> ( -1 )))))) end ;
  () (* Assume Pre of the subprogram accountmanagementsystem.ads:152 *)
  ;
  assume { ( ( ( (( -1 ) <= Accountmanagementsystem__removefriend__wearer.wearer) /\ (Accountmanagementsystem__removefriend__wearer.wearer <= 100) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users Accountmanagementsystem__removefriend__wearer.wearer) = True) <-> true ) ) /\ ((Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__friends.friends Accountmanagementsystem__removefriend__wearer.wearer)) <> ( -1 )) ) } );
  ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission)) end ;
  (let temp___standard__accountmanagementsystem_488 = (any Accountmanagementsystem__permissionarray.permissionarray
  ensures {(result = !Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission)} 
  ) in (
   ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__friendlocationpermission.friendlocationpermission)) end ;
   (let temp___standard__accountmanagementsystem_486 = (any Accountmanagementsystem__permissionarray.permissionarray
   ensures {(result = !Accountmanagementsystem__friendlocationpermission.friendlocationpermission)} 
   ) in (
    ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__friendvitalpermission.friendvitalpermission)) end ;
    (let temp___standard__accountmanagementsystem_484 = (any Accountmanagementsystem__permissionarray.permissionarray
    ensures {(result = !Accountmanagementsystem__friendvitalpermission.friendvitalpermission)} 
    ) in (
     ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__friends.friends)) end ;
     (let temp___standard__accountmanagementsystem_482 = (any Accountmanagementsystem__useruserarray.useruserarray
     ensures {(result = !Accountmanagementsystem__friends.friends)} 
     ) in (
      ( () (* Check additional Pres of the subprogram accountmanagementsystem.ads:152 *)
      ;
      () (* Body of the subprogram accountmanagementsystem.ads:152 *)
      ;
      try
       ( ( "GP_Sloc:accountmanagementsystem.adb:88:7" (if (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__removefriend__wearer.wearer)))) = (Boolean.to_int((Boolean.of_int(1)))))) then (
        ( ( "GP_Sloc:accountmanagementsystem.adb:89:26" Accountmanagementsystem__friends.friends := ( (Array__Int.set(!Accountmanagementsystem__friends.friends) (Accountmanagementsystem__removefriend__wearer.wearer) ((Measures__userid.of_rep(( -1 ))))) ) );
        ( "GP_Sloc:accountmanagementsystem.adb:90:40" Accountmanagementsystem__friendvitalpermission.friendvitalpermission := ( (Array__Int.set(!Accountmanagementsystem__friendvitalpermission.friendvitalpermission) (Accountmanagementsystem__removefriend__wearer.wearer) ((Boolean.of_int(0)))) ) );
        ( "GP_Sloc:accountmanagementsystem.adb:91:43" Accountmanagementsystem__friendlocationpermission.friendlocationpermission := ( (Array__Int.set(!Accountmanagementsystem__friendlocationpermission.friendlocationpermission) (Accountmanagementsystem__removefriend__wearer.wearer) ((Boolean.of_int(0)))) ) );
        ( "GP_Sloc:accountmanagementsystem.adb:92:43" Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission := ( (Array__Int.set(!Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission) (Accountmanagementsystem__removefriend__wearer.wearer) ((Boolean.of_int(0)))) ) ) )) else (
        ())) );
       raise Return__exc )
      with
       Return__exc -> ()
      end;
      () (* Check additional Posts and RTE in Post of the subprogram accountmanagementsystem.ads:152 *)
      ;
      abstract ensures {true}(Main.___ignore((Boolean.andb((Boolean.andb((Boolean.andb((let temp___standard__accountmanagementsystem_483 = (Temp___standard__accountmanagementsystem_99.temp___standard__accountmanagementsystem_99(temp___standard__accountmanagementsystem_482) (Accountmanagementsystem__removefriend__wearer.wearer) (( -1 ))) in (
       (Array__Int.bool_eq(!Accountmanagementsystem__friends.friends) (Measures__userid.first) (Measures__userid.last) (temp___standard__accountmanagementsystem_483) (Measures__userid.first) (Measures__userid.last))))
      ) ((let temp___standard__accountmanagementsystem_485 = (Temp___standard__accountmanagementsystem_106.temp___standard__accountmanagementsystem_106(temp___standard__accountmanagementsystem_484) (Accountmanagementsystem__removefriend__wearer.wearer) ((Boolean.of_int(0)))) in (
       (Array__Int.bool_eq(!Accountmanagementsystem__friendvitalpermission.friendvitalpermission) (Measures__userid.first) (Measures__userid.last) (temp___standard__accountmanagementsystem_485) (Measures__userid.first) (Measures__userid.last))))
      ))) ((let temp___standard__accountmanagementsystem_487 = (Temp___standard__accountmanagementsystem_113.temp___standard__accountmanagementsystem_113(temp___standard__accountmanagementsystem_486) (Accountmanagementsystem__removefriend__wearer.wearer) ((Boolean.of_int(0)))) in (
       (Array__Int.bool_eq(!Accountmanagementsystem__friendlocationpermission.friendlocationpermission) (Measures__userid.first) (Measures__userid.last) (temp___standard__accountmanagementsystem_487) (Measures__userid.first) (Measures__userid.last))))
      ))) ((let temp___standard__accountmanagementsystem_489 = (Temp___standard__accountmanagementsystem_120.temp___standard__accountmanagementsystem_120(temp___standard__accountmanagementsystem_488) (Accountmanagementsystem__removefriend__wearer.wearer) ((Boolean.of_int(0)))) in (
       (Array__Int.bool_eq(!Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission) (Measures__userid.first) (Measures__userid.last) (temp___standard__accountmanagementsystem_489) (Measures__userid.first) (Measures__userid.last))))
      )))) end  )))
      )))
     )))
    )))
   ) ) )
end

(* Module for checking contracts and absence of run-time errors in subprogram "updatevitals" defined at accountmanagementsystem.ads:164, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Accountmanagementsystem__updatevitals__subprogram_def
 use import "int".Int
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        "_gnatprove_standard".Boolean
 use        Array__Int
 use        Measures__userid
 use        Measures__bpm
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__vitalsarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__vitals
 use        Accountmanagementsystem__updatevitals__wearer
 use        Accountmanagementsystem__updatevitals__newvitals
 use        Temp___standard__accountmanagementsystem_131
 use        Accountmanagementsystem__usersarray__axiom
 use        Accountmanagementsystem__vitalsarray__axiom
 use        Accountmanagementsystem__users__axiom
 use        Accountmanagementsystem__vitals__axiom
 use        Accountmanagementsystem__updatevitals__wearer__axiom
 use        Accountmanagementsystem__updatevitals__newvitals__axiom
 use        Measures__userid__axiom
 use        Measures__bpm__axiom

 let def "W:diverges:N" "GP_Subp:accountmanagementsystem.ads:164" 
   (__void_param : unit) 
  requires { true }
  ensures { ( "GP_Reason:VC_POSTCONDITION" "keep_on_simp" "GP_Shape:pragargs__cmp" "GP_Sloc:accountmanagementsystem.ads:166:14" "GP_Id:23" "comment:     Post => Vitals = Vitals'Old'Update(Wearer => NewVitals);
             ^ accountmanagementsystem.ads:166:14:VC_POSTCONDITION" ( "GP_Pretty_Ada:6776" "GP_Sloc:accountmanagementsystem.ads:166:14" ((let temp___standard__accountmanagementsystem_501 = (Temp___standard__accountmanagementsystem_131.temp___standard__accountmanagementsystem_131 (old !Accountmanagementsystem__vitals.vitals ) Accountmanagementsystem__updatevitals__wearer.wearer Accountmanagementsystem__updatevitals__newvitals.newvitals) in (
   (Array__Int.bool_eq !Accountmanagementsystem__vitals.vitals Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_501 Measures__userid.first Measures__userid.last)))
   = True) ) ) }

   =
  ( ( () (* Assume dynamic property of params of the subprogram accountmanagementsystem.ads:164 *)
  ;
  assume { (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last Accountmanagementsystem__updatevitals__wearer.wearer) };
  assume { (Measures__bpm.dynamic_property Measures__bpm.first Measures__bpm.last Accountmanagementsystem__updatevitals__newvitals.newvitals) } );
  ( ( () (* Declarations introduced by the compiler at the beginning of the subprogram accountmanagementsystem.ads:164 *)
  ;
  () (* Check for RTE in the Pre of the subprogram accountmanagementsystem.ads:164 *)
  ;
  abstract ensures {true}(Main.___ignore((Boolean.andb((Boolean.andb((( -1 ) <= Accountmanagementsystem__updatevitals__wearer.wearer)) ((Accountmanagementsystem__updatevitals__wearer.wearer <= 100)))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__updatevitals__wearer.wearer)))) = (Boolean.to_int((Boolean.of_int(1))))))))) end ;
  () (* Assume Pre of the subprogram accountmanagementsystem.ads:164 *)
  ;
  assume { ( ( (( -1 ) <= Accountmanagementsystem__updatevitals__wearer.wearer) /\ (Accountmanagementsystem__updatevitals__wearer.wearer <= 100) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users Accountmanagementsystem__updatevitals__wearer.wearer) = True) <-> true ) ) } );
  ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__vitals.vitals)) end ;
  (let temp___standard__accountmanagementsystem_499 = (any Accountmanagementsystem__vitalsarray.vitalsarray
  ensures {(result = !Accountmanagementsystem__vitals.vitals)} 
  ) in (
   ( () (* Check additional Pres of the subprogram accountmanagementsystem.ads:164 *)
   ;
   () (* Body of the subprogram accountmanagementsystem.ads:164 *)
   ;
   try
    ( ( "GP_Sloc:accountmanagementsystem.adb:178:7" (if (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__updatevitals__wearer.wearer)))) = (Boolean.to_int((Boolean.of_int(1)))))) then (
     ( "GP_Sloc:accountmanagementsystem.adb:179:25" Accountmanagementsystem__vitals.vitals := ( (Array__Int.set(!Accountmanagementsystem__vitals.vitals) (Accountmanagementsystem__updatevitals__wearer.wearer) ((Measures__bpm.of_rep(Accountmanagementsystem__updatevitals__newvitals.newvitals)))) ) )) else (
     ())) );
    raise Return__exc )
   with
    Return__exc -> ()
   end;
   () (* Check additional Posts and RTE in Post of the subprogram accountmanagementsystem.ads:164 *)
   ;
   abstract ensures {true}(Main.___ignore((let temp___standard__accountmanagementsystem_500 = (Temp___standard__accountmanagementsystem_131.temp___standard__accountmanagementsystem_131(temp___standard__accountmanagementsystem_499) (Accountmanagementsystem__updatevitals__wearer.wearer) (Accountmanagementsystem__updatevitals__newvitals.newvitals)) in (
    (Array__Int.bool_eq(!Accountmanagementsystem__vitals.vitals) (Measures__userid.first) (Measures__userid.last) (temp___standard__accountmanagementsystem_500) (Measures__userid.first) (Measures__userid.last))))
   )) end  )))
   ) ) )
end

(* Module for checking contracts and absence of run-time errors in subprogram "updatefootsteps" defined at accountmanagementsystem.ads:168, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Accountmanagementsystem__updatefootsteps__subprogram_def
 use import "int".Int
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        "_gnatprove_standard".Boolean
 use        Array__Int
 use        Measures__userid
 use        Measures__footsteps
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__footstepsarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__mfootsteps
 use        Accountmanagementsystem__updatefootsteps__wearer
 use        Accountmanagementsystem__updatefootsteps__newfootsteps
 use        Temp___standard__accountmanagementsystem_139
 use        Accountmanagementsystem__usersarray__axiom
 use        Accountmanagementsystem__footstepsarray__axiom
 use        Accountmanagementsystem__users__axiom
 use        Accountmanagementsystem__mfootsteps__axiom
 use        Accountmanagementsystem__updatefootsteps__wearer__axiom
 use        Accountmanagementsystem__updatefootsteps__newfootsteps__axiom
 use        Measures__userid__axiom
 use        Measures__footsteps__axiom

 let def "W:diverges:N" "GP_Subp:accountmanagementsystem.ads:168" 
   (__void_param : unit) 
  requires { true }
  ensures { ( "GP_Reason:VC_POSTCONDITION" "keep_on_simp" "GP_Shape:pragargs__cmp" "GP_Sloc:accountmanagementsystem.ads:171:14" "GP_Id:24" "comment:     Post => MFootsteps = MFootsteps'Old'Update(Wearer => NewFootsteps);
             ^ accountmanagementsystem.ads:171:14:VC_POSTCONDITION" ( "GP_Pretty_Ada:6824" "GP_Sloc:accountmanagementsystem.ads:171:14" ((let temp___standard__accountmanagementsystem_506 = (Temp___standard__accountmanagementsystem_139.temp___standard__accountmanagementsystem_139 (old !Accountmanagementsystem__mfootsteps.mfootsteps ) Accountmanagementsystem__updatefootsteps__wearer.wearer Accountmanagementsystem__updatefootsteps__newfootsteps.newfootsteps) in (
   (Array__Int.bool_eq !Accountmanagementsystem__mfootsteps.mfootsteps Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_506 Measures__userid.first Measures__userid.last)))
   = True) ) ) }

   =
  ( ( () (* Assume dynamic property of params of the subprogram accountmanagementsystem.ads:168 *)
  ;
  assume { (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last Accountmanagementsystem__updatefootsteps__wearer.wearer) };
  assume { (Measures__footsteps.dynamic_property Measures__footsteps.first Measures__footsteps.last Accountmanagementsystem__updatefootsteps__newfootsteps.newfootsteps) } );
  ( ( () (* Declarations introduced by the compiler at the beginning of the subprogram accountmanagementsystem.ads:168 *)
  ;
  () (* Check for RTE in the Pre of the subprogram accountmanagementsystem.ads:168 *)
  ;
  abstract ensures {true}(Main.___ignore((Boolean.andb((Boolean.andb((( -1 ) <= Accountmanagementsystem__updatefootsteps__wearer.wearer)) ((Accountmanagementsystem__updatefootsteps__wearer.wearer <= 100)))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__updatefootsteps__wearer.wearer)))) = (Boolean.to_int((Boolean.of_int(1))))))))) end ;
  () (* Assume Pre of the subprogram accountmanagementsystem.ads:168 *)
  ;
  assume { ( ( (( -1 ) <= Accountmanagementsystem__updatefootsteps__wearer.wearer) /\ (Accountmanagementsystem__updatefootsteps__wearer.wearer <= 100) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users Accountmanagementsystem__updatefootsteps__wearer.wearer) = True) <-> true ) ) } );
  ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__mfootsteps.mfootsteps)) end ;
  (let temp___standard__accountmanagementsystem_504 = (any Accountmanagementsystem__footstepsarray.footstepsarray
  ensures {(result = !Accountmanagementsystem__mfootsteps.mfootsteps)} 
  ) in (
   ( () (* Check additional Pres of the subprogram accountmanagementsystem.ads:168 *)
   ;
   () (* Body of the subprogram accountmanagementsystem.ads:168 *)
   ;
   try
    ( ( "GP_Sloc:accountmanagementsystem.adb:186:7" (if (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__updatefootsteps__wearer.wearer)))) = (Boolean.to_int((Boolean.of_int(1)))))) then (
     ( "GP_Sloc:accountmanagementsystem.adb:187:29" Accountmanagementsystem__mfootsteps.mfootsteps := ( (Array__Int.set(!Accountmanagementsystem__mfootsteps.mfootsteps) (Accountmanagementsystem__updatefootsteps__wearer.wearer) ((Measures__footsteps.of_rep(Accountmanagementsystem__updatefootsteps__newfootsteps.newfootsteps)))) ) )) else (
     ())) );
    raise Return__exc )
   with
    Return__exc -> ()
   end;
   () (* Check additional Posts and RTE in Post of the subprogram accountmanagementsystem.ads:168 *)
   ;
   abstract ensures {true}(Main.___ignore((let temp___standard__accountmanagementsystem_505 = (Temp___standard__accountmanagementsystem_139.temp___standard__accountmanagementsystem_139(temp___standard__accountmanagementsystem_504) (Accountmanagementsystem__updatefootsteps__wearer.wearer) (Accountmanagementsystem__updatefootsteps__newfootsteps.newfootsteps)) in (
    (Array__Int.bool_eq(!Accountmanagementsystem__mfootsteps.mfootsteps) (Measures__userid.first) (Measures__userid.last) (temp___standard__accountmanagementsystem_505) (Measures__userid.first) (Measures__userid.last))))
   )) end  )))
   ) ) )
end

(* Module for checking contracts and absence of run-time errors in subprogram "updatelocation" defined at accountmanagementsystem.ads:173, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Accountmanagementsystem__updatelocation__subprogram_def
 use import "int".Int
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        "_gnatprove_standard".Boolean
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__locationsarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__locations
 use        Accountmanagementsystem__updatelocation__wearer
 use        Accountmanagementsystem__updatelocation__newlocation
 use        Temp___standard__accountmanagementsystem_147
 use        Accountmanagementsystem__usersarray__axiom
 use        Accountmanagementsystem__locationsarray__axiom
 use        Accountmanagementsystem__users__axiom
 use        Accountmanagementsystem__locations__axiom
 use        Accountmanagementsystem__updatelocation__wearer__axiom
 use        Accountmanagementsystem__updatelocation__newlocation__axiom
 use        Measures__userid__axiom
 use        Measures__latitude__axiom
 use        Measures__longitude__axiom
 use        Measures__gpslocation__axiom

 let def "W:diverges:N" "GP_Subp:accountmanagementsystem.ads:173" 
   (__void_param : unit) 
  requires { true }
  ensures { ( "GP_Reason:VC_POSTCONDITION" "keep_on_simp" "GP_Shape:pragargs__cmp" "GP_Sloc:accountmanagementsystem.ads:176:14" "GP_Id:25" "comment:     Post => Locations = Locations'Old'Update(Wearer => NewLocation);
             ^ accountmanagementsystem.ads:176:14:VC_POSTCONDITION" ( "GP_Pretty_Ada:6872" "GP_Sloc:accountmanagementsystem.ads:176:14" ((let temp___standard__accountmanagementsystem_511 = (Temp___standard__accountmanagementsystem_147.temp___standard__accountmanagementsystem_147 (old !Accountmanagementsystem__locations.locations ) Accountmanagementsystem__updatelocation__wearer.wearer Accountmanagementsystem__updatelocation__newlocation.newlocation) in (
   (Array__Int.bool_eq !Accountmanagementsystem__locations.locations Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_511 Measures__userid.first Measures__userid.last)))
   = True) ) ) }

   =
  ( ( () (* Assume dynamic property of params of the subprogram accountmanagementsystem.ads:173 *)
  ;
  assume { (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last Accountmanagementsystem__updatelocation__wearer.wearer) } );
  ( ( () (* Declarations introduced by the compiler at the beginning of the subprogram accountmanagementsystem.ads:173 *)
  ;
  () (* Check for RTE in the Pre of the subprogram accountmanagementsystem.ads:173 *)
  ;
  abstract ensures {true}(Main.___ignore((Boolean.andb((Boolean.andb((( -1 ) <= Accountmanagementsystem__updatelocation__wearer.wearer)) ((Accountmanagementsystem__updatelocation__wearer.wearer <= 100)))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__updatelocation__wearer.wearer)))) = (Boolean.to_int((Boolean.of_int(1))))))))) end ;
  () (* Assume Pre of the subprogram accountmanagementsystem.ads:173 *)
  ;
  assume { ( ( (( -1 ) <= Accountmanagementsystem__updatelocation__wearer.wearer) /\ (Accountmanagementsystem__updatelocation__wearer.wearer <= 100) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users Accountmanagementsystem__updatelocation__wearer.wearer) = True) <-> true ) ) } );
  ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__locations.locations)) end ;
  (let temp___standard__accountmanagementsystem_509 = (any Accountmanagementsystem__locationsarray.locationsarray
  ensures {(result = !Accountmanagementsystem__locations.locations)} 
  ) in (
   ( () (* Check additional Pres of the subprogram accountmanagementsystem.ads:173 *)
   ;
   () (* Body of the subprogram accountmanagementsystem.ads:173 *)
   ;
   try
    ( ( "GP_Sloc:accountmanagementsystem.adb:194:7" (if (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__updatelocation__wearer.wearer)))) = (Boolean.to_int((Boolean.of_int(1)))))) then (
     ( "GP_Sloc:accountmanagementsystem.adb:195:28" Accountmanagementsystem__locations.locations := ( (Array__Int.set(!Accountmanagementsystem__locations.locations) (Accountmanagementsystem__updatelocation__wearer.wearer) (Accountmanagementsystem__updatelocation__newlocation.newlocation)) ) )) else (
     ())) );
    raise Return__exc )
   with
    Return__exc -> ()
   end;
   () (* Check additional Posts and RTE in Post of the subprogram accountmanagementsystem.ads:173 *)
   ;
   abstract ensures {true}(Main.___ignore((let temp___standard__accountmanagementsystem_510 = (Temp___standard__accountmanagementsystem_147.temp___standard__accountmanagementsystem_147(temp___standard__accountmanagementsystem_509) (Accountmanagementsystem__updatelocation__wearer.wearer) (Accountmanagementsystem__updatelocation__newlocation.newlocation)) in (
    (Array__Int.bool_eq(!Accountmanagementsystem__locations.locations) (Measures__userid.first) (Measures__userid.last) (temp___standard__accountmanagementsystem_510) (Measures__userid.first) (Measures__userid.last))))
   )) end  )))
   ) ) )
end

(* Module for checking contracts and absence of run-time errors in subprogram "readvitals" defined at accountmanagementsystem.ads:189, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Accountmanagementsystem__readvitals__subprogram_def
 use import "int".Int
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        "_gnatprove_standard".Boolean
 use        Array__Int
 use        Measures__userid
 use        Measures__bpm
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__useruserarray
 use        Accountmanagementsystem__vitalsarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__vitals
 use        Accountmanagementsystem__permissionarray
 use        Accountmanagementsystem__friendvitalpermission
 use        Accountmanagementsystem__insurervitalpermission
 use        Accountmanagementsystem__emergencyvitalpermission
 use        Accountmanagementsystem__readvitals__requester
 use        Accountmanagementsystem__readvitals__targetuser
 use        Accountmanagementsystem__usersarray__axiom
 use        Accountmanagementsystem__useruserarray__axiom
 use        Accountmanagementsystem__vitalsarray__axiom
 use        Accountmanagementsystem__users__axiom
 use        Accountmanagementsystem__insurers__axiom
 use        Accountmanagementsystem__friends__axiom
 use        Accountmanagementsystem__vitals__axiom
 use        Accountmanagementsystem__permissionarray__axiom
 use        Accountmanagementsystem__friendvitalpermission__axiom
 use        Accountmanagementsystem__insurervitalpermission__axiom
 use        Accountmanagementsystem__emergencyvitalpermission__axiom
 use        Accountmanagementsystem__readvitals__requester__axiom
 use        Accountmanagementsystem__readvitals__targetuser__axiom
 use        Measures__userid__axiom
 use        Measures__bpm__axiom

 val accountmanagementsystem__readvitals__result "\"GP_Ada_Name:ReadVitals'Result\""  : ref Measures__bpm.__split
 
 let def "W:diverges:N" "GP_Subp:accountmanagementsystem.ads:189" 
   (__void_param : unit) 
  requires { true }
  ensures { ( "GP_Reason:VC_POSTCONDITION" "keep_on_simp" "GP_Shape:pragargs__cmp" "GP_Sloc:accountmanagementsystem.ads:195:16" "GP_Id:26" "comment:       Post => ReadVitals'Result = (if((Requester = TargetUser) or
               ^ accountmanagementsystem.ads:195:16:VC_POSTCONDITION" ( "GP_Pretty_Ada:6968" "GP_Sloc:accountmanagementsystem.ads:195:16" (!accountmanagementsystem__readvitals__result = (if (( ( ( (Accountmanagementsystem__readvitals__requester.requester = Accountmanagementsystem__readvitals__targetuser.targetuser) \/ ( (Accountmanagementsystem__readvitals__requester.requester = 0) /\ ( ((Array__Int.get !Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission Accountmanagementsystem__readvitals__targetuser.targetuser) = True) <-> true ) ) ) \/ ( (Accountmanagementsystem__readvitals__requester.requester = (Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__friends.friends Accountmanagementsystem__readvitals__targetuser.targetuser))) /\ ( ((Array__Int.get !Accountmanagementsystem__friendvitalpermission.friendvitalpermission Accountmanagementsystem__readvitals__targetuser.targetuser) = True) <-> true ) ) ) \/ ( (Accountmanagementsystem__readvitals__requester.requester = (Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__insurers.insurers Accountmanagementsystem__readvitals__targetuser.targetuser))) /\ ( ((Array__Int.get !Accountmanagementsystem__insurervitalpermission.insurervitalpermission Accountmanagementsystem__readvitals__targetuser.targetuser) = True) <-> true ) ) )) then (
   (Measures__bpm.to_rep (Array__Int.get !Accountmanagementsystem__vitals.vitals Accountmanagementsystem__readvitals__targetuser.targetuser))) else (
   ( -1 )))) ) ) }

   =
  ( ( () (* Assume dynamic property of params of the subprogram accountmanagementsystem.ads:189 *)
  ;
  assume { (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last Accountmanagementsystem__readvitals__requester.requester) };
  assume { (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last Accountmanagementsystem__readvitals__targetuser.targetuser) } );
  ( ( () (* Declarations introduced by the compiler at the beginning of the subprogram accountmanagementsystem.ads:189 *)
  ;
  () (* Check for RTE in the Pre of the subprogram accountmanagementsystem.ads:189 *)
  ;
  abstract ensures {true}(Main.___ignore((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((( -1 ) <= Accountmanagementsystem__readvitals__targetuser.targetuser)) ((Accountmanagementsystem__readvitals__targetuser.targetuser <= 100)))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__readvitals__targetuser.targetuser)))) = (Boolean.to_int((Boolean.of_int(1)))))))) ((Boolean.andb((( -1 ) <= Accountmanagementsystem__readvitals__requester.requester)) ((Accountmanagementsystem__readvitals__requester.requester <= 100)))))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__readvitals__requester.requester)))) = (Boolean.to_int((Boolean.of_int(1))))))))) end ;
  () (* Assume Pre of the subprogram accountmanagementsystem.ads:189 *)
  ;
  assume { ( ( ( ( (( -1 ) <= Accountmanagementsystem__readvitals__targetuser.targetuser) /\ (Accountmanagementsystem__readvitals__targetuser.targetuser <= 100) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users Accountmanagementsystem__readvitals__targetuser.targetuser) = True) <-> true ) ) /\ ( (( -1 ) <= Accountmanagementsystem__readvitals__requester.requester) /\ (Accountmanagementsystem__readvitals__requester.requester <= 100) ) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users Accountmanagementsystem__readvitals__requester.requester) = True) <-> true ) ) } );
  ( () (* Check additional Pres of the subprogram accountmanagementsystem.ads:189 *)
  ;
  () (* Body of the subprogram accountmanagementsystem.ads:189 *)
  ;
  try
   ( ( "GP_Sloc:accountmanagementsystem.adb:105:7" (if ((Accountmanagementsystem__readvitals__requester.requester = Accountmanagementsystem__readvitals__targetuser.targetuser)) then (
    ( "GP_Sloc:accountmanagementsystem.adb:106:10" ( accountmanagementsystem__readvitals__result := ( (Measures__bpm.to_rep((Array__Int.get(!Accountmanagementsystem__vitals.vitals) (Accountmanagementsystem__readvitals__targetuser.targetuser)))) );
    raise Return__exc ) )) else (
    ( "GP_Sloc:accountmanagementsystem.adb:107:7" (if ((Boolean.andb(((Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__friends.friends) (Accountmanagementsystem__readvitals__targetuser.targetuser)))) = Accountmanagementsystem__readvitals__requester.requester)) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__friendvitalpermission.friendvitalpermission) (Accountmanagementsystem__readvitals__targetuser.targetuser)))) = (Boolean.to_int((Boolean.of_int(1)))))))) then (
     ( "GP_Sloc:accountmanagementsystem.adb:108:10" ( accountmanagementsystem__readvitals__result := ( (Measures__bpm.to_rep((Array__Int.get(!Accountmanagementsystem__vitals.vitals) (Accountmanagementsystem__readvitals__targetuser.targetuser)))) );
     raise Return__exc ) )) else (
     ( "GP_Sloc:accountmanagementsystem.adb:109:7" (if ((Boolean.andb(((Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__insurers.insurers) (Accountmanagementsystem__readvitals__targetuser.targetuser)))) = Accountmanagementsystem__readvitals__requester.requester)) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__insurervitalpermission.insurervitalpermission) (Accountmanagementsystem__readvitals__targetuser.targetuser)))) = (Boolean.to_int((Boolean.of_int(1)))))))) then (
      ( "GP_Sloc:accountmanagementsystem.adb:110:10" ( accountmanagementsystem__readvitals__result := ( (Measures__bpm.to_rep((Array__Int.get(!Accountmanagementsystem__vitals.vitals) (Accountmanagementsystem__readvitals__targetuser.targetuser)))) );
      raise Return__exc ) )) else (
      ( "GP_Sloc:accountmanagementsystem.adb:111:7" (if ((Boolean.andb((Accountmanagementsystem__readvitals__requester.requester = 0)) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission) (Accountmanagementsystem__readvitals__targetuser.targetuser)))) = (Boolean.to_int((Boolean.of_int(1)))))))) then (
       ( "GP_Sloc:accountmanagementsystem.adb:112:10" ( accountmanagementsystem__readvitals__result := ( (Measures__bpm.to_rep((Array__Int.get(!Accountmanagementsystem__vitals.vitals) (Accountmanagementsystem__readvitals__targetuser.targetuser)))) );
       raise Return__exc ) )) else (
       ( "GP_Sloc:accountmanagementsystem.adb:114:13" ( accountmanagementsystem__readvitals__result := ( ( -1 ) );
       raise Return__exc ) ))) ))) ))) ))) );
   raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* Check additional Posts and RTE in Post of the subprogram accountmanagementsystem.ads:189 *)
  ;
  abstract ensures {true}(Main.___ignore((!accountmanagementsystem__readvitals__result = (if ((Boolean.orb((Boolean.orb((Boolean.orb((Accountmanagementsystem__readvitals__requester.requester = Accountmanagementsystem__readvitals__targetuser.targetuser)) ((Boolean.andb((Accountmanagementsystem__readvitals__requester.requester = 0)) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission) (Accountmanagementsystem__readvitals__targetuser.targetuser)))) = (Boolean.to_int((Boolean.of_int(1)))))))))) ((Boolean.andb((Accountmanagementsystem__readvitals__requester.requester = (Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__friends.friends) (Accountmanagementsystem__readvitals__targetuser.targetuser)))))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__friendvitalpermission.friendvitalpermission) (Accountmanagementsystem__readvitals__targetuser.targetuser)))) = (Boolean.to_int((Boolean.of_int(1)))))))))) ((Boolean.andb((Accountmanagementsystem__readvitals__requester.requester = (Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__insurers.insurers) (Accountmanagementsystem__readvitals__targetuser.targetuser)))))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__insurervitalpermission.insurervitalpermission) (Accountmanagementsystem__readvitals__targetuser.targetuser)))) = (Boolean.to_int((Boolean.of_int(1)))))))))) then (
   (Measures__bpm.to_rep((Array__Int.get(!Accountmanagementsystem__vitals.vitals) (Accountmanagementsystem__readvitals__targetuser.targetuser))))) else (
   ( -1 )))))) end ;
  !accountmanagementsystem__readvitals__result ) ) )
end

(* Module for checking contracts and absence of run-time errors in subprogram "readfootsteps" defined at accountmanagementsystem.ads:203, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Accountmanagementsystem__readfootsteps__subprogram_def
 use import "int".Int
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        "_gnatprove_standard".Boolean
 use        Array__Int
 use        Measures__userid
 use        Measures__footsteps
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__useruserarray
 use        Accountmanagementsystem__footstepsarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__mfootsteps
 use        Accountmanagementsystem__permissionarray
 use        Accountmanagementsystem__friendfootsteppermission
 use        Accountmanagementsystem__insurerfootsteppermission
 use        Accountmanagementsystem__emergencyfootsteppermission
 use        Accountmanagementsystem__readfootsteps__requester
 use        Accountmanagementsystem__readfootsteps__targetuser
 use        Accountmanagementsystem__usersarray__axiom
 use        Accountmanagementsystem__useruserarray__axiom
 use        Accountmanagementsystem__footstepsarray__axiom
 use        Accountmanagementsystem__users__axiom
 use        Accountmanagementsystem__insurers__axiom
 use        Accountmanagementsystem__friends__axiom
 use        Accountmanagementsystem__mfootsteps__axiom
 use        Accountmanagementsystem__permissionarray__axiom
 use        Accountmanagementsystem__friendfootsteppermission__axiom
 use        Accountmanagementsystem__insurerfootsteppermission__axiom
 use        Accountmanagementsystem__emergencyfootsteppermission__axiom
 use        Accountmanagementsystem__readfootsteps__requester__axiom
 use        Accountmanagementsystem__readfootsteps__targetuser__axiom
 use        Measures__userid__axiom
 use        Measures__footsteps__axiom

 val accountmanagementsystem__readfootsteps__result "\"GP_Ada_Name:ReadFootsteps'Result\""  : ref Measures__footsteps.__split
 
 let def "W:diverges:N" "GP_Subp:accountmanagementsystem.ads:203" 
   (__void_param : unit) 
  requires { true }
  ensures { ( "GP_Reason:VC_POSTCONDITION" "keep_on_simp" "GP_Shape:pragargs__cmp" "GP_Sloc:accountmanagementsystem.ads:209:16" "GP_Id:28" "comment:       Post => ReadFootsteps'Result = (if((Requester = TargetUser) or
               ^ accountmanagementsystem.ads:209:16:VC_POSTCONDITION" ( "GP_Pretty_Ada:7064" "GP_Sloc:accountmanagementsystem.ads:209:16" (!accountmanagementsystem__readfootsteps__result = (if (( ( ( (Accountmanagementsystem__readfootsteps__requester.requester = Accountmanagementsystem__readfootsteps__targetuser.targetuser) \/ ( (Accountmanagementsystem__readfootsteps__requester.requester = 0) /\ ( ((Array__Int.get !Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission Accountmanagementsystem__readfootsteps__targetuser.targetuser) = True) <-> true ) ) ) \/ ( (Accountmanagementsystem__readfootsteps__requester.requester = (Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__friends.friends Accountmanagementsystem__readfootsteps__targetuser.targetuser))) /\ ( ((Array__Int.get !Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission Accountmanagementsystem__readfootsteps__targetuser.targetuser) = True) <-> true ) ) ) \/ ( (Accountmanagementsystem__readfootsteps__requester.requester = (Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__insurers.insurers Accountmanagementsystem__readfootsteps__targetuser.targetuser))) /\ ( ((Array__Int.get !Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission Accountmanagementsystem__readfootsteps__targetuser.targetuser) = True) <-> true ) ) )) then (
   Accountmanagementsystem__readfootsteps__targetuser.targetuser) else (
   0))) ) ) }

   =
  ( ( () (* Assume dynamic property of params of the subprogram accountmanagementsystem.ads:203 *)
  ;
  assume { (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last Accountmanagementsystem__readfootsteps__requester.requester) };
  assume { (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last Accountmanagementsystem__readfootsteps__targetuser.targetuser) } );
  ( ( () (* Declarations introduced by the compiler at the beginning of the subprogram accountmanagementsystem.ads:203 *)
  ;
  () (* Check for RTE in the Pre of the subprogram accountmanagementsystem.ads:203 *)
  ;
  abstract ensures {true}(Main.___ignore((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((( -1 ) <= Accountmanagementsystem__readfootsteps__targetuser.targetuser)) ((Accountmanagementsystem__readfootsteps__targetuser.targetuser <= 100)))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__readfootsteps__targetuser.targetuser)))) = (Boolean.to_int((Boolean.of_int(1)))))))) ((Boolean.andb((( -1 ) <= Accountmanagementsystem__readfootsteps__requester.requester)) ((Accountmanagementsystem__readfootsteps__requester.requester <= 100)))))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__readfootsteps__requester.requester)))) = (Boolean.to_int((Boolean.of_int(1))))))))) end ;
  () (* Assume Pre of the subprogram accountmanagementsystem.ads:203 *)
  ;
  assume { ( ( ( ( (( -1 ) <= Accountmanagementsystem__readfootsteps__targetuser.targetuser) /\ (Accountmanagementsystem__readfootsteps__targetuser.targetuser <= 100) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users Accountmanagementsystem__readfootsteps__targetuser.targetuser) = True) <-> true ) ) /\ ( (( -1 ) <= Accountmanagementsystem__readfootsteps__requester.requester) /\ (Accountmanagementsystem__readfootsteps__requester.requester <= 100) ) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users Accountmanagementsystem__readfootsteps__requester.requester) = True) <-> true ) ) } );
  ( () (* Check additional Pres of the subprogram accountmanagementsystem.ads:203 *)
  ;
  () (* Body of the subprogram accountmanagementsystem.ads:203 *)
  ;
  try
   ( ( "GP_Sloc:accountmanagementsystem.adb:125:7" (if ((Accountmanagementsystem__readfootsteps__requester.requester = Accountmanagementsystem__readfootsteps__targetuser.targetuser)) then (
    ( "GP_Sloc:accountmanagementsystem.adb:126:10" ( accountmanagementsystem__readfootsteps__result := ( (Measures__footsteps.to_rep((Array__Int.get(!Accountmanagementsystem__mfootsteps.mfootsteps) (Accountmanagementsystem__readfootsteps__targetuser.targetuser)))) );
    raise Return__exc ) )) else (
    ( "GP_Sloc:accountmanagementsystem.adb:128:7" (if ((Boolean.andb(((Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__friends.friends) (Accountmanagementsystem__readfootsteps__targetuser.targetuser)))) = Accountmanagementsystem__readfootsteps__requester.requester)) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission) (Accountmanagementsystem__readfootsteps__targetuser.targetuser)))) = (Boolean.to_int((Boolean.of_int(1)))))))) then (
     ( "GP_Sloc:accountmanagementsystem.adb:129:10" ( accountmanagementsystem__readfootsteps__result := ( (Measures__footsteps.to_rep((Array__Int.get(!Accountmanagementsystem__mfootsteps.mfootsteps) (Accountmanagementsystem__readfootsteps__targetuser.targetuser)))) );
     raise Return__exc ) )) else (
     ( "GP_Sloc:accountmanagementsystem.adb:131:7" (if ((Boolean.andb(((Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__insurers.insurers) (Accountmanagementsystem__readfootsteps__targetuser.targetuser)))) = Accountmanagementsystem__readfootsteps__requester.requester)) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission) (Accountmanagementsystem__readfootsteps__targetuser.targetuser)))) = (Boolean.to_int((Boolean.of_int(1)))))))) then (
      ( "GP_Sloc:accountmanagementsystem.adb:132:10" ( accountmanagementsystem__readfootsteps__result := ( (Measures__footsteps.to_rep((Array__Int.get(!Accountmanagementsystem__mfootsteps.mfootsteps) (Accountmanagementsystem__readfootsteps__targetuser.targetuser)))) );
      raise Return__exc ) )) else (
      ( "GP_Sloc:accountmanagementsystem.adb:134:7" (if ((Boolean.andb((Accountmanagementsystem__readfootsteps__requester.requester = 0)) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission) (Accountmanagementsystem__readfootsteps__targetuser.targetuser)))) = (Boolean.to_int((Boolean.of_int(1)))))))) then (
       ( "GP_Sloc:accountmanagementsystem.adb:135:10" ( accountmanagementsystem__readfootsteps__result := ( (Measures__footsteps.to_rep((Array__Int.get(!Accountmanagementsystem__mfootsteps.mfootsteps) (Accountmanagementsystem__readfootsteps__targetuser.targetuser)))) );
       raise Return__exc ) )) else (
       ( "GP_Sloc:accountmanagementsystem.adb:138:10" ( accountmanagementsystem__readfootsteps__result := ( 0 );
       raise Return__exc ) ))) ))) ))) ))) );
   raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* Check additional Posts and RTE in Post of the subprogram accountmanagementsystem.ads:203 *)
  ;
  abstract ensures {true}(Main.___ignore((!accountmanagementsystem__readfootsteps__result = (if ((Boolean.orb((Boolean.orb((Boolean.orb((Accountmanagementsystem__readfootsteps__requester.requester = Accountmanagementsystem__readfootsteps__targetuser.targetuser)) ((Boolean.andb((Accountmanagementsystem__readfootsteps__requester.requester = 0)) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission) (Accountmanagementsystem__readfootsteps__targetuser.targetuser)))) = (Boolean.to_int((Boolean.of_int(1)))))))))) ((Boolean.andb((Accountmanagementsystem__readfootsteps__requester.requester = (Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__friends.friends) (Accountmanagementsystem__readfootsteps__targetuser.targetuser)))))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission) (Accountmanagementsystem__readfootsteps__targetuser.targetuser)))) = (Boolean.to_int((Boolean.of_int(1)))))))))) ((Boolean.andb((Accountmanagementsystem__readfootsteps__requester.requester = (Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__insurers.insurers) (Accountmanagementsystem__readfootsteps__targetuser.targetuser)))))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission) (Accountmanagementsystem__readfootsteps__targetuser.targetuser)))) = (Boolean.to_int((Boolean.of_int(1)))))))))) then (
   ( "keep_on_simp" "GP_Reason:VC_RANGE_CHECK" "GP_Id:27" "GP_Sloc:accountmanagementsystem.ads:215:19" "comment:   then Footsteps(TargetUser) else Footsteps'First);
                  ^ accountmanagementsystem.ads:215:19:VC_RANGE_CHECK" "GP_Shape:pragargs__cmp__if__typeconv__typeconv" (Measures__footsteps.range_check_(Accountmanagementsystem__readfootsteps__targetuser.targetuser)) )) else (
   0))))) end ;
  !accountmanagementsystem__readfootsteps__result ) ) )
end

(* Module for checking contracts and absence of run-time errors in subprogram "readlocation" defined at accountmanagementsystem.ads:218, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Accountmanagementsystem__readlocation__subprogram_def
 use import "int".Int
 use import "_gnatprove_standard".Main
 use import "int".Int
 use import "real".RealInfix
 use        "_gnatprove_standard".Main
 use        "_gnatprove_standard".Boolean
 use        Array__Int
 use        Measures__userid
 use        Measures__latitude
 use        Measures__longitude
 use        Measures__gpslocation
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__useruserarray
 use        Accountmanagementsystem__locationsarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__locations
 use        Accountmanagementsystem__permissionarray
 use        Accountmanagementsystem__friendlocationpermission
 use        Accountmanagementsystem__insurerlocationpermission
 use        Accountmanagementsystem__emergencylocationpermission
 use        Accountmanagementsystem__readlocation__requester
 use        Accountmanagementsystem__readlocation__targetuser
 use        Accountmanagementsystem__usersarray__axiom
 use        Accountmanagementsystem__useruserarray__axiom
 use        Accountmanagementsystem__locationsarray__axiom
 use        Accountmanagementsystem__users__axiom
 use        Accountmanagementsystem__insurers__axiom
 use        Accountmanagementsystem__friends__axiom
 use        Accountmanagementsystem__locations__axiom
 use        Accountmanagementsystem__permissionarray__axiom
 use        Accountmanagementsystem__friendlocationpermission__axiom
 use        Accountmanagementsystem__insurerlocationpermission__axiom
 use        Accountmanagementsystem__emergencylocationpermission__axiom
 use        Accountmanagementsystem__readlocation__requester__axiom
 use        Accountmanagementsystem__readlocation__targetuser__axiom
 use        Measures__userid__axiom
 use        Measures__latitude__axiom
 use        Measures__longitude__axiom
 use        Measures__gpslocation__axiom

 val accountmanagementsystem__readlocation__result "\"GP_Ada_Name:ReadLocation'Result\""  : ref Measures__gpslocation.gpslocation
 
 let def "W:diverges:N" "GP_Subp:accountmanagementsystem.ads:218" 
   (__void_param : unit) 
  requires { true }
  ensures { ( "GP_Reason:VC_POSTCONDITION" "keep_on_simp" "GP_Shape:pragargs__cmp" "GP_Sloc:accountmanagementsystem.ads:224:16" "GP_Id:29" "comment:       Post => ReadLocation'Result = (if((Requester = TargetUser) or
               ^ accountmanagementsystem.ads:224:16:VC_POSTCONDITION" ( "GP_Pretty_Ada:7161" "GP_Sloc:accountmanagementsystem.ads:224:16" ((Measures__gpslocation.bool_eq !accountmanagementsystem__readlocation__result (if (( ( ( (Accountmanagementsystem__readlocation__requester.requester = Accountmanagementsystem__readlocation__targetuser.targetuser) \/ ( (Accountmanagementsystem__readlocation__requester.requester = 0) /\ ( ((Array__Int.get !Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission Accountmanagementsystem__readlocation__targetuser.targetuser) = True) <-> true ) ) ) \/ ( (Accountmanagementsystem__readlocation__requester.requester = (Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__friends.friends Accountmanagementsystem__readlocation__targetuser.targetuser))) /\ ( ((Array__Int.get !Accountmanagementsystem__friendlocationpermission.friendlocationpermission Accountmanagementsystem__readlocation__targetuser.targetuser) = True) <-> true ) ) ) \/ ( (Accountmanagementsystem__readlocation__requester.requester = (Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__insurers.insurers Accountmanagementsystem__readlocation__targetuser.targetuser))) /\ ( ((Array__Int.get !Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission Accountmanagementsystem__readlocation__targetuser.targetuser) = True) <-> true ) ) )) then (
   (Array__Int.get !Accountmanagementsystem__locations.locations Accountmanagementsystem__readlocation__targetuser.targetuser)) else (
   { Measures__gpslocation.__split_fields = { Measures__gpslocation.rec__lat = (Measures__latitude.of_real (0.0E-1)); Measures__gpslocation.rec__long = (Measures__longitude.of_real (0.0E-1)) } }))) = True) ) ) }

   =
  ( ( () (* Assume dynamic property of params of the subprogram accountmanagementsystem.ads:218 *)
  ;
  assume { (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last Accountmanagementsystem__readlocation__requester.requester) };
  assume { (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last Accountmanagementsystem__readlocation__targetuser.targetuser) } );
  ( ( () (* Declarations introduced by the compiler at the beginning of the subprogram accountmanagementsystem.ads:218 *)
  ;
  () (* Check for RTE in the Pre of the subprogram accountmanagementsystem.ads:218 *)
  ;
  abstract ensures {true}(Main.___ignore((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((( -1 ) <= Accountmanagementsystem__readlocation__targetuser.targetuser)) ((Accountmanagementsystem__readlocation__targetuser.targetuser <= 100)))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__readlocation__targetuser.targetuser)))) = (Boolean.to_int((Boolean.of_int(1)))))))) ((Boolean.andb((( -1 ) <= Accountmanagementsystem__readlocation__requester.requester)) ((Accountmanagementsystem__readlocation__requester.requester <= 100)))))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__readlocation__requester.requester)))) = (Boolean.to_int((Boolean.of_int(1))))))))) end ;
  () (* Assume Pre of the subprogram accountmanagementsystem.ads:218 *)
  ;
  assume { ( ( ( ( (( -1 ) <= Accountmanagementsystem__readlocation__targetuser.targetuser) /\ (Accountmanagementsystem__readlocation__targetuser.targetuser <= 100) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users Accountmanagementsystem__readlocation__targetuser.targetuser) = True) <-> true ) ) /\ ( (( -1 ) <= Accountmanagementsystem__readlocation__requester.requester) /\ (Accountmanagementsystem__readlocation__requester.requester <= 100) ) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users Accountmanagementsystem__readlocation__requester.requester) = True) <-> true ) ) } );
  ( () (* Check additional Pres of the subprogram accountmanagementsystem.ads:218 *)
  ;
  () (* Body of the subprogram accountmanagementsystem.ads:218 *)
  ;
  try
   ( ( "GP_Sloc:accountmanagementsystem.adb:160:7" (if ((Accountmanagementsystem__readlocation__requester.requester = Accountmanagementsystem__readlocation__targetuser.targetuser)) then (
    ( "GP_Sloc:accountmanagementsystem.adb:161:10" ( accountmanagementsystem__readlocation__result := ( (Array__Int.get(!Accountmanagementsystem__locations.locations) (Accountmanagementsystem__readlocation__targetuser.targetuser)) );
    raise Return__exc ) )) else (
    ( "GP_Sloc:accountmanagementsystem.adb:163:7" (if ((Boolean.andb(((Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__friends.friends) (Accountmanagementsystem__readlocation__targetuser.targetuser)))) = Accountmanagementsystem__readlocation__requester.requester)) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__friendlocationpermission.friendlocationpermission) (Accountmanagementsystem__readlocation__targetuser.targetuser)))) = (Boolean.to_int((Boolean.of_int(1)))))))) then (
     ( "GP_Sloc:accountmanagementsystem.adb:164:10" ( accountmanagementsystem__readlocation__result := ( (Array__Int.get(!Accountmanagementsystem__locations.locations) (Accountmanagementsystem__readlocation__targetuser.targetuser)) );
     raise Return__exc ) )) else (
     ( "GP_Sloc:accountmanagementsystem.adb:165:7" (if ((Boolean.andb(((Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__insurers.insurers) (Accountmanagementsystem__readlocation__targetuser.targetuser)))) = Accountmanagementsystem__readlocation__requester.requester)) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission) (Accountmanagementsystem__readlocation__targetuser.targetuser)))) = (Boolean.to_int((Boolean.of_int(1)))))))) then (
      ( "GP_Sloc:accountmanagementsystem.adb:166:10" ( accountmanagementsystem__readlocation__result := ( (Array__Int.get(!Accountmanagementsystem__locations.locations) (Accountmanagementsystem__readlocation__targetuser.targetuser)) );
      raise Return__exc ) )) else (
      ( "GP_Sloc:accountmanagementsystem.adb:167:7" (if ((Boolean.andb((Accountmanagementsystem__readlocation__requester.requester = 0)) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission) (Accountmanagementsystem__readlocation__targetuser.targetuser)))) = (Boolean.to_int((Boolean.of_int(1)))))))) then (
       ( "GP_Sloc:accountmanagementsystem.adb:168:10" ( accountmanagementsystem__readlocation__result := ( (Array__Int.get(!Accountmanagementsystem__locations.locations) (Accountmanagementsystem__readlocation__targetuser.targetuser)) );
       raise Return__exc ) )) else (
       ( "GP_Sloc:accountmanagementsystem.adb:170:10" ( accountmanagementsystem__readlocation__result := ( { Measures__gpslocation.__split_fields = { Measures__gpslocation.rec__lat = (Measures__latitude.of_real((0.0E-1))); Measures__gpslocation.rec__long = (Measures__longitude.of_real((0.0E-1))) } } );
       raise Return__exc ) ))) ))) ))) ))) );
   raise Return__exc )
  with
   Return__exc -> ()
  end;
  () (* Check additional Posts and RTE in Post of the subprogram accountmanagementsystem.ads:218 *)
  ;
  abstract ensures {true}(Main.___ignore((Measures__gpslocation.bool_eq(!accountmanagementsystem__readlocation__result) ((if ((Boolean.orb((Boolean.orb((Boolean.orb((Accountmanagementsystem__readlocation__requester.requester = Accountmanagementsystem__readlocation__targetuser.targetuser)) ((Boolean.andb((Accountmanagementsystem__readlocation__requester.requester = 0)) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission) (Accountmanagementsystem__readlocation__targetuser.targetuser)))) = (Boolean.to_int((Boolean.of_int(1)))))))))) ((Boolean.andb((Accountmanagementsystem__readlocation__requester.requester = (Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__friends.friends) (Accountmanagementsystem__readlocation__targetuser.targetuser)))))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__friendlocationpermission.friendlocationpermission) (Accountmanagementsystem__readlocation__targetuser.targetuser)))) = (Boolean.to_int((Boolean.of_int(1)))))))))) ((Boolean.andb((Accountmanagementsystem__readlocation__requester.requester = (Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__insurers.insurers) (Accountmanagementsystem__readlocation__targetuser.targetuser)))))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission) (Accountmanagementsystem__readlocation__targetuser.targetuser)))) = (Boolean.to_int((Boolean.of_int(1)))))))))) then (
   (Array__Int.get(!Accountmanagementsystem__locations.locations) (Accountmanagementsystem__readlocation__targetuser.targetuser))) else (
   { Measures__gpslocation.__split_fields = { Measures__gpslocation.rec__lat = (Measures__latitude.of_real((0.0E-1))); Measures__gpslocation.rec__long = (Measures__longitude.of_real((0.0E-1))) } })))))) end ;
  !accountmanagementsystem__readlocation__result ) ) )
end

(* Module for checking contracts and absence of run-time errors in subprogram "updatevitalspermissions" defined at accountmanagementsystem.ads:232, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Accountmanagementsystem__updatevitalspermissions__subprogram_def
 use import "int".Int
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        "_gnatprove_standard".Boolean
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__useruserarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__permissionarray
 use        Accountmanagementsystem__friendvitalpermission
 use        Accountmanagementsystem__insurervitalpermission
 use        Accountmanagementsystem__emergencyvitalpermission
 use        Accountmanagementsystem__updatevitalspermissions__wearer
 use        Accountmanagementsystem__updatevitalspermissions__other
 use        Accountmanagementsystem__updatevitalspermissions__allow
 use        Temp___standard__accountmanagementsystem_176
 use        Temp___standard__accountmanagementsystem_183
 use        Temp___standard__accountmanagementsystem_190
 use        Accountmanagementsystem__usersarray__axiom
 use        Accountmanagementsystem__useruserarray__axiom
 use        Accountmanagementsystem__users__axiom
 use        Accountmanagementsystem__insurers__axiom
 use        Accountmanagementsystem__friends__axiom
 use        Accountmanagementsystem__permissionarray__axiom
 use        Accountmanagementsystem__friendvitalpermission__axiom
 use        Accountmanagementsystem__insurervitalpermission__axiom
 use        Accountmanagementsystem__emergencyvitalpermission__axiom
 use        Accountmanagementsystem__updatevitalspermissions__wearer__axiom
 use        Accountmanagementsystem__updatevitalspermissions__other__axiom
 use        Accountmanagementsystem__updatevitalspermissions__allow__axiom
 use        Measures__userid__axiom

 let def "W:diverges:N" "GP_Subp:accountmanagementsystem.ads:232" 
   (__void_param : unit) 
  requires { true }
  ensures { ( "GP_Reason:VC_POSTCONDITION" "keep_on_simp" "GP_Id:30" "GP_Sloc:accountmanagementsystem.ads:237:14" "comment:     Post => (if (Other = Friends(Wearer)) then 
             ^ accountmanagementsystem.ads:237:14:VC_POSTCONDITION" "GP_Shape:pragargs__if" (if ((Accountmanagementsystem__updatevitalspermissions__other.other = (Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__friends.friends Accountmanagementsystem__updatevitalspermissions__wearer.wearer)))) then (
   ( "GP_Pretty_Ada:5112" "GP_Sloc:accountmanagementsystem.ads:238:11" ((let temp___standard__accountmanagementsystem_541 = (Temp___standard__accountmanagementsystem_176.temp___standard__accountmanagementsystem_176 (old !Accountmanagementsystem__friendvitalpermission.friendvitalpermission ) Accountmanagementsystem__updatevitalspermissions__wearer.wearer Accountmanagementsystem__updatevitalspermissions__allow.allow) in (
    (Array__Int.bool_eq !Accountmanagementsystem__friendvitalpermission.friendvitalpermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_541 Measures__userid.first Measures__userid.last)))
    = True) )) else ((if ((Accountmanagementsystem__updatevitalspermissions__other.other = (Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__insurers.insurers Accountmanagementsystem__updatevitalspermissions__wearer.wearer)))) then (
   ( "GP_Pretty_Ada:5128" "GP_Sloc:accountmanagementsystem.ads:241:11" ((let temp___standard__accountmanagementsystem_542 = (Temp___standard__accountmanagementsystem_183.temp___standard__accountmanagementsystem_183 (old !Accountmanagementsystem__insurervitalpermission.insurervitalpermission ) Accountmanagementsystem__updatevitalspermissions__wearer.wearer Accountmanagementsystem__updatevitalspermissions__allow.allow) in (
    (Array__Int.bool_eq !Accountmanagementsystem__insurervitalpermission.insurervitalpermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_542 Measures__userid.first Measures__userid.last)))
    = True) )) else ((if ((Accountmanagementsystem__updatevitalspermissions__other.other = 0)) then (
   ( "GP_Pretty_Ada:5142" "GP_Sloc:accountmanagementsystem.ads:244:9" ((let temp___standard__accountmanagementsystem_543 = (Temp___standard__accountmanagementsystem_190.temp___standard__accountmanagementsystem_190 (old !Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission ) Accountmanagementsystem__updatevitalspermissions__wearer.wearer Accountmanagementsystem__updatevitalspermissions__allow.allow) in (
    (Array__Int.bool_eq !Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_543 Measures__userid.first Measures__userid.last)))
    = True) )) else (
   ( "GP_Pretty_Ada:8383" "GP_Sloc:accountmanagementsystem.ads:242:64" true ))))))) ) }

   =
  ( ( () (* Assume dynamic property of params of the subprogram accountmanagementsystem.ads:232 *)
  ;
  assume { (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last Accountmanagementsystem__updatevitalspermissions__wearer.wearer) };
  assume { (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last Accountmanagementsystem__updatevitalspermissions__other.other) } );
  ( ( () (* Declarations introduced by the compiler at the beginning of the subprogram accountmanagementsystem.ads:232 *)
  ;
  () (* Check for RTE in the Pre of the subprogram accountmanagementsystem.ads:232 *)
  ;
  abstract ensures {true}(Main.___ignore((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((( -1 ) <= Accountmanagementsystem__updatevitalspermissions__wearer.wearer)) ((Accountmanagementsystem__updatevitalspermissions__wearer.wearer <= 100)))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__updatevitalspermissions__wearer.wearer)))) = (Boolean.to_int((Boolean.of_int(1)))))))) ((Boolean.andb((( -1 ) <= Accountmanagementsystem__updatevitalspermissions__other.other)) ((Accountmanagementsystem__updatevitalspermissions__other.other <= 100)))))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__updatevitalspermissions__other.other)))) = (Boolean.to_int((Boolean.of_int(1))))))))) end ;
  () (* Assume Pre of the subprogram accountmanagementsystem.ads:232 *)
  ;
  assume { ( ( ( ( (( -1 ) <= Accountmanagementsystem__updatevitalspermissions__wearer.wearer) /\ (Accountmanagementsystem__updatevitalspermissions__wearer.wearer <= 100) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users Accountmanagementsystem__updatevitalspermissions__wearer.wearer) = True) <-> true ) ) /\ ( (( -1 ) <= Accountmanagementsystem__updatevitalspermissions__other.other) /\ (Accountmanagementsystem__updatevitalspermissions__other.other <= 100) ) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users Accountmanagementsystem__updatevitalspermissions__other.other) = True) <-> true ) ) } );
  ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__insurervitalpermission.insurervitalpermission)) end ;
  (let temp___standard__accountmanagementsystem_537 = (any Accountmanagementsystem__permissionarray.permissionarray
  ensures {(result = !Accountmanagementsystem__insurervitalpermission.insurervitalpermission)} 
  ) in (
   ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__friendvitalpermission.friendvitalpermission)) end ;
   (let temp___standard__accountmanagementsystem_535 = (any Accountmanagementsystem__permissionarray.permissionarray
   ensures {(result = !Accountmanagementsystem__friendvitalpermission.friendvitalpermission)} 
   ) in (
    ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission)) end ;
    (let temp___standard__accountmanagementsystem_539 = (any Accountmanagementsystem__permissionarray.permissionarray
    ensures {(result = !Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission)} 
    ) in (
     ( () (* Check additional Pres of the subprogram accountmanagementsystem.ads:232 *)
     ;
     () (* Body of the subprogram accountmanagementsystem.ads:232 *)
     ;
     try
      ( ( "GP_Sloc:accountmanagementsystem.adb:205:7" (if ((Boolean.andb(((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__updatevitalspermissions__wearer.wearer)))) = (Boolean.to_int((Boolean.of_int(1)))))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__updatevitalspermissions__other.other)))) = (Boolean.to_int((Boolean.of_int(1)))))))) then (
       ( "GP_Sloc:accountmanagementsystem.adb:206:10" (if (((Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__friends.friends) (Accountmanagementsystem__updatevitalspermissions__wearer.wearer)))) = Accountmanagementsystem__updatevitalspermissions__other.other)) then (
        ( "GP_Sloc:accountmanagementsystem.adb:207:43" Accountmanagementsystem__friendvitalpermission.friendvitalpermission := ( (Array__Int.set(!Accountmanagementsystem__friendvitalpermission.friendvitalpermission) (Accountmanagementsystem__updatevitalspermissions__wearer.wearer) (Accountmanagementsystem__updatevitalspermissions__allow.allow)) ) )) else (
        ( "GP_Sloc:accountmanagementsystem.adb:208:10" (if (((Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__insurers.insurers) (Accountmanagementsystem__updatevitalspermissions__wearer.wearer)))) = Accountmanagementsystem__updatevitalspermissions__other.other)) then (
         ( "GP_Sloc:accountmanagementsystem.adb:209:44" Accountmanagementsystem__insurervitalpermission.insurervitalpermission := ( (Array__Int.set(!Accountmanagementsystem__insurervitalpermission.insurervitalpermission) (Accountmanagementsystem__updatevitalspermissions__wearer.wearer) (Accountmanagementsystem__updatevitalspermissions__allow.allow)) ) )) else (
         ( "GP_Sloc:accountmanagementsystem.adb:210:10" (if ((Accountmanagementsystem__updatevitalspermissions__other.other = 0)) then (
          ( "GP_Sloc:accountmanagementsystem.adb:211:46" Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission := ( (Array__Int.set(!Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission) (Accountmanagementsystem__updatevitalspermissions__wearer.wearer) (Accountmanagementsystem__updatevitalspermissions__allow.allow)) ) )) else (
          ())) ))) ))) )) else (
       ())) );
      raise Return__exc )
     with
      Return__exc -> ()
     end;
     () (* Check additional Posts and RTE in Post of the subprogram accountmanagementsystem.ads:232 *)
     ;
     abstract ensures {true}(Main.___ignore((if ((Accountmanagementsystem__updatevitalspermissions__other.other = (Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__friends.friends) (Accountmanagementsystem__updatevitalspermissions__wearer.wearer)))))) then (
      (let temp___standard__accountmanagementsystem_536 = (Temp___standard__accountmanagementsystem_176.temp___standard__accountmanagementsystem_176(temp___standard__accountmanagementsystem_535) (Accountmanagementsystem__updatevitalspermissions__wearer.wearer) (Accountmanagementsystem__updatevitalspermissions__allow.allow)) in (
       (Array__Int.bool_eq(!Accountmanagementsystem__friendvitalpermission.friendvitalpermission) (Measures__userid.first) (Measures__userid.last) (temp___standard__accountmanagementsystem_536) (Measures__userid.first) (Measures__userid.last))))
     ) else ((if ((Accountmanagementsystem__updatevitalspermissions__other.other = (Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__insurers.insurers) (Accountmanagementsystem__updatevitalspermissions__wearer.wearer)))))) then (
      (let temp___standard__accountmanagementsystem_538 = (Temp___standard__accountmanagementsystem_183.temp___standard__accountmanagementsystem_183(temp___standard__accountmanagementsystem_537) (Accountmanagementsystem__updatevitalspermissions__wearer.wearer) (Accountmanagementsystem__updatevitalspermissions__allow.allow)) in (
       (Array__Int.bool_eq(!Accountmanagementsystem__insurervitalpermission.insurervitalpermission) (Measures__userid.first) (Measures__userid.last) (temp___standard__accountmanagementsystem_538) (Measures__userid.first) (Measures__userid.last))))
     ) else ((if ((Accountmanagementsystem__updatevitalspermissions__other.other = 0)) then (
      (let temp___standard__accountmanagementsystem_540 = (Temp___standard__accountmanagementsystem_190.temp___standard__accountmanagementsystem_190(temp___standard__accountmanagementsystem_539) (Accountmanagementsystem__updatevitalspermissions__wearer.wearer) (Accountmanagementsystem__updatevitalspermissions__allow.allow)) in (
       (Array__Int.bool_eq(!Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission) (Measures__userid.first) (Measures__userid.last) (temp___standard__accountmanagementsystem_540) (Measures__userid.first) (Measures__userid.last))))
     ) else (
      (Boolean.of_int(1)))))))))) end  )))
     )))
    )))
   ) ) )
end

(* Module for checking contracts and absence of run-time errors in subprogram "updatefootstepspermissions" defined at accountmanagementsystem.ads:248, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Accountmanagementsystem__updatefootstepspermissions__subprogram_def
 use import "int".Int
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        "_gnatprove_standard".Boolean
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__useruserarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__permissionarray
 use        Accountmanagementsystem__friendfootsteppermission
 use        Accountmanagementsystem__insurerfootsteppermission
 use        Accountmanagementsystem__insurerlocationpermission
 use        Accountmanagementsystem__insurervitalpermission
 use        Accountmanagementsystem__emergencyfootsteppermission
 use        Accountmanagementsystem__updatefootstepspermissions__wearer
 use        Accountmanagementsystem__updatefootstepspermissions__other
 use        Accountmanagementsystem__updatefootstepspermissions__allow
 use        Temp___standard__accountmanagementsystem_200
 use        Temp___standard__accountmanagementsystem_207
 use        Temp___standard__accountmanagementsystem_214
 use        Temp___standard__accountmanagementsystem_221
 use        Temp___standard__accountmanagementsystem_228
 use        Temp___standard__accountmanagementsystem_235
 use        Accountmanagementsystem__usersarray__axiom
 use        Accountmanagementsystem__useruserarray__axiom
 use        Accountmanagementsystem__users__axiom
 use        Accountmanagementsystem__insurers__axiom
 use        Accountmanagementsystem__friends__axiom
 use        Accountmanagementsystem__permissionarray__axiom
 use        Accountmanagementsystem__friendfootsteppermission__axiom
 use        Accountmanagementsystem__insurerfootsteppermission__axiom
 use        Accountmanagementsystem__insurerlocationpermission__axiom
 use        Accountmanagementsystem__insurervitalpermission__axiom
 use        Accountmanagementsystem__emergencyfootsteppermission__axiom
 use        Accountmanagementsystem__updatefootstepspermissions__wearer__axiom
 use        Accountmanagementsystem__updatefootstepspermissions__other__axiom
 use        Accountmanagementsystem__updatefootstepspermissions__allow__axiom
 use        Measures__userid__axiom

 let def "W:diverges:N" "GP_Subp:accountmanagementsystem.ads:248" 
   (__void_param : unit) 
  requires { true }
  ensures { ( "GP_Reason:VC_POSTCONDITION" "keep_on_simp" "GP_Shape:pragargs__if" "GP_Id:31" "GP_Sloc:accountmanagementsystem.ads:254:14" "comment:     Post => (if Other = Friends(Wearer) then 
             ^ accountmanagementsystem.ads:254:14:VC_POSTCONDITION" (if ((Accountmanagementsystem__updatefootstepspermissions__other.other = (Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__friends.friends Accountmanagementsystem__updatefootstepspermissions__wearer.wearer)))) then (
   ( "GP_Pretty_Ada:5225" "GP_Sloc:accountmanagementsystem.ads:255:11" ((let temp___standard__accountmanagementsystem_562 = (Temp___standard__accountmanagementsystem_200.temp___standard__accountmanagementsystem_200 (old !Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission ) Accountmanagementsystem__updatefootstepspermissions__wearer.wearer Accountmanagementsystem__updatefootstepspermissions__allow.allow) in (
    (Array__Int.bool_eq !Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_562 Measures__userid.first Measures__userid.last)))
    = True) )) else ((if ((Accountmanagementsystem__updatefootstepspermissions__other.other = 0)) then (
   ( "GP_Pretty_Ada:5239" "GP_Sloc:accountmanagementsystem.ads:258:9" ((let temp___standard__accountmanagementsystem_563 = (Temp___standard__accountmanagementsystem_207.temp___standard__accountmanagementsystem_207 (old !Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission ) Accountmanagementsystem__updatefootstepspermissions__wearer.wearer Accountmanagementsystem__updatefootstepspermissions__allow.allow) in (
    (Array__Int.bool_eq !Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_563 Measures__userid.first Measures__userid.last)))
    = True) )) else ((if ((Accountmanagementsystem__updatefootstepspermissions__other.other = (Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__insurers.insurers Accountmanagementsystem__updatefootstepspermissions__wearer.wearer)))) then (
   (if (( (Accountmanagementsystem__updatefootstepspermissions__allow.allow = True) <-> true )) then (
    ( "GP_Pretty_Ada:5258" "GP_Sloc:accountmanagementsystem.ads:261:33" ((let temp___standard__accountmanagementsystem_564 = (Temp___standard__accountmanagementsystem_214.temp___standard__accountmanagementsystem_214 (old !Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission ) Accountmanagementsystem__updatefootstepspermissions__wearer.wearer Accountmanagementsystem__updatefootstepspermissions__allow.allow) in (
     (Array__Int.bool_eq !Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_564 Measures__userid.first Measures__userid.last)))
     = True) )) else (
    ( ( ( "GP_Pretty_Ada:5269" "GP_Sloc:accountmanagementsystem.ads:263:7" ((let temp___standard__accountmanagementsystem_565 = (Temp___standard__accountmanagementsystem_221.temp___standard__accountmanagementsystem_221 (old !Accountmanagementsystem__insurers.insurers ) Accountmanagementsystem__updatefootstepspermissions__wearer.wearer ( -1 )) in (
     (Array__Int.bool_eq !Accountmanagementsystem__insurers.insurers Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_565 Measures__userid.first Measures__userid.last)))
     = True) ) /\ ( "GP_Pretty_Ada:5283" "GP_Sloc:accountmanagementsystem.ads:264:10" ((let temp___standard__accountmanagementsystem_566 = (Temp___standard__accountmanagementsystem_228.temp___standard__accountmanagementsystem_228 (old !Accountmanagementsystem__insurervitalpermission.insurervitalpermission ) Accountmanagementsystem__updatefootstepspermissions__wearer.wearer (Boolean.of_int 0)) in (
     (Array__Int.bool_eq !Accountmanagementsystem__insurervitalpermission.insurervitalpermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_566 Measures__userid.first Measures__userid.last)))
     = True) ) ) /\ ( "GP_Pretty_Ada:5295" "GP_Sloc:accountmanagementsystem.ads:266:10" ((let temp___standard__accountmanagementsystem_567 = (Temp___standard__accountmanagementsystem_235.temp___standard__accountmanagementsystem_235 (old !Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission ) Accountmanagementsystem__updatefootstepspermissions__wearer.wearer (Boolean.of_int 0)) in (
     (Array__Int.bool_eq !Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_567 Measures__userid.first Measures__userid.last)))
     = True) ) )))) else (
   ( "GP_Pretty_Ada:8405" "GP_Sloc:accountmanagementsystem.ads:259:77" true ))))))) ) }

   =
  ( ( () (* Assume dynamic property of params of the subprogram accountmanagementsystem.ads:248 *)
  ;
  assume { (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last Accountmanagementsystem__updatefootstepspermissions__wearer.wearer) };
  assume { (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last Accountmanagementsystem__updatefootstepspermissions__other.other) } );
  ( ( () (* Declarations introduced by the compiler at the beginning of the subprogram accountmanagementsystem.ads:248 *)
  ;
  () (* Check for RTE in the Pre of the subprogram accountmanagementsystem.ads:248 *)
  ;
  abstract ensures {true}(Main.___ignore((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((( -1 ) <= Accountmanagementsystem__updatefootstepspermissions__wearer.wearer)) ((Accountmanagementsystem__updatefootstepspermissions__wearer.wearer <= 100)))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__updatefootstepspermissions__wearer.wearer)))) = (Boolean.to_int((Boolean.of_int(1)))))))) ((Boolean.andb((( -1 ) <= Accountmanagementsystem__updatefootstepspermissions__other.other)) ((Accountmanagementsystem__updatefootstepspermissions__other.other <= 100)))))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__updatefootstepspermissions__other.other)))) = (Boolean.to_int((Boolean.of_int(1))))))))) end ;
  () (* Assume Pre of the subprogram accountmanagementsystem.ads:248 *)
  ;
  assume { ( ( ( ( (( -1 ) <= Accountmanagementsystem__updatefootstepspermissions__wearer.wearer) /\ (Accountmanagementsystem__updatefootstepspermissions__wearer.wearer <= 100) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users Accountmanagementsystem__updatefootstepspermissions__wearer.wearer) = True) <-> true ) ) /\ ( (( -1 ) <= Accountmanagementsystem__updatefootstepspermissions__other.other) /\ (Accountmanagementsystem__updatefootstepspermissions__other.other <= 100) ) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users Accountmanagementsystem__updatefootstepspermissions__other.other) = True) <-> true ) ) } );
  ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission)) end ;
  (let temp___standard__accountmanagementsystem_560 = (any Accountmanagementsystem__permissionarray.permissionarray
  ensures {(result = !Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission)} 
  ) in (
   ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission)) end ;
   (let temp___standard__accountmanagementsystem_552 = (any Accountmanagementsystem__permissionarray.permissionarray
   ensures {(result = !Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission)} 
   ) in (
    ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__insurervitalpermission.insurervitalpermission)) end ;
    (let temp___standard__accountmanagementsystem_558 = (any Accountmanagementsystem__permissionarray.permissionarray
    ensures {(result = !Accountmanagementsystem__insurervitalpermission.insurervitalpermission)} 
    ) in (
     ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission)) end ;
     (let temp___standard__accountmanagementsystem_550 = (any Accountmanagementsystem__permissionarray.permissionarray
     ensures {(result = !Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission)} 
     ) in (
      ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__insurers.insurers)) end ;
      (let temp___standard__accountmanagementsystem_556 = (any Accountmanagementsystem__useruserarray.useruserarray
      ensures {(result = !Accountmanagementsystem__insurers.insurers)} 
      ) in (
       ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission)) end ;
       (let temp___standard__accountmanagementsystem_554 = (any Accountmanagementsystem__permissionarray.permissionarray
       ensures {(result = !Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission)} 
       ) in (
        ( () (* Check additional Pres of the subprogram accountmanagementsystem.ads:248 *)
        ;
        () (* Body of the subprogram accountmanagementsystem.ads:248 *)
        ;
        try
         ( ( "GP_Sloc:accountmanagementsystem.adb:222:7" (if ((Boolean.andb(((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__updatefootstepspermissions__wearer.wearer)))) = (Boolean.to_int((Boolean.of_int(1)))))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__updatefootstepspermissions__other.other)))) = (Boolean.to_int((Boolean.of_int(1)))))))) then (
          ( "GP_Sloc:accountmanagementsystem.adb:224:10" (if (((Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__friends.friends) (Accountmanagementsystem__updatefootstepspermissions__wearer.wearer)))) = Accountmanagementsystem__updatefootstepspermissions__other.other)) then (
           ( "GP_Sloc:accountmanagementsystem.adb:225:46" Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission := ( (Array__Int.set(!Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission) (Accountmanagementsystem__updatefootstepspermissions__wearer.wearer) (Accountmanagementsystem__updatefootstepspermissions__allow.allow)) ) )) else (
           ( "GP_Sloc:accountmanagementsystem.adb:226:10" (if (((Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__insurers.insurers) (Accountmanagementsystem__updatefootstepspermissions__wearer.wearer)))) = Accountmanagementsystem__updatefootstepspermissions__other.other)) then (
            ( "GP_Sloc:accountmanagementsystem.adb:227:47" Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission := ( (Array__Int.set(!Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission) (Accountmanagementsystem__updatefootstepspermissions__wearer.wearer) ((Boolean.of_int(1)))) ) )) else (
            ( "GP_Sloc:accountmanagementsystem.adb:228:10" (if ((Accountmanagementsystem__updatefootstepspermissions__other.other = 0)) then (
             ( "GP_Sloc:accountmanagementsystem.adb:229:49" Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission := ( (Array__Int.set(!Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission) (Accountmanagementsystem__updatefootstepspermissions__wearer.wearer) (Accountmanagementsystem__updatefootstepspermissions__allow.allow)) ) )) else (
             ())) ))) ))) )) else (
          ())) );
         raise Return__exc )
        with
         Return__exc -> ()
        end;
        () (* Check additional Posts and RTE in Post of the subprogram accountmanagementsystem.ads:248 *)
        ;
        abstract ensures {true}(Main.___ignore((if ((Accountmanagementsystem__updatefootstepspermissions__other.other = (Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__friends.friends) (Accountmanagementsystem__updatefootstepspermissions__wearer.wearer)))))) then (
         (let temp___standard__accountmanagementsystem_551 = (Temp___standard__accountmanagementsystem_200.temp___standard__accountmanagementsystem_200(temp___standard__accountmanagementsystem_550) (Accountmanagementsystem__updatefootstepspermissions__wearer.wearer) (Accountmanagementsystem__updatefootstepspermissions__allow.allow)) in (
          (Array__Int.bool_eq(!Accountmanagementsystem__friendfootsteppermission.friendfootsteppermission) (Measures__userid.first) (Measures__userid.last) (temp___standard__accountmanagementsystem_551) (Measures__userid.first) (Measures__userid.last))))
        ) else ((if ((Accountmanagementsystem__updatefootstepspermissions__other.other = 0)) then (
         (let temp___standard__accountmanagementsystem_553 = (Temp___standard__accountmanagementsystem_207.temp___standard__accountmanagementsystem_207(temp___standard__accountmanagementsystem_552) (Accountmanagementsystem__updatefootstepspermissions__wearer.wearer) (Accountmanagementsystem__updatefootstepspermissions__allow.allow)) in (
          (Array__Int.bool_eq(!Accountmanagementsystem__emergencyfootsteppermission.emergencyfootsteppermission) (Measures__userid.first) (Measures__userid.last) (temp___standard__accountmanagementsystem_553) (Measures__userid.first) (Measures__userid.last))))
        ) else ((if ((Accountmanagementsystem__updatefootstepspermissions__other.other = (Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__insurers.insurers) (Accountmanagementsystem__updatefootstepspermissions__wearer.wearer)))))) then (
         (if (((Boolean.to_int(Accountmanagementsystem__updatefootstepspermissions__allow.allow)) = (Boolean.to_int((Boolean.of_int(1)))))) then (
          (let temp___standard__accountmanagementsystem_555 = (Temp___standard__accountmanagementsystem_214.temp___standard__accountmanagementsystem_214(temp___standard__accountmanagementsystem_554) (Accountmanagementsystem__updatefootstepspermissions__wearer.wearer) (Accountmanagementsystem__updatefootstepspermissions__allow.allow)) in (
           (Array__Int.bool_eq(!Accountmanagementsystem__insurerfootsteppermission.insurerfootsteppermission) (Measures__userid.first) (Measures__userid.last) (temp___standard__accountmanagementsystem_555) (Measures__userid.first) (Measures__userid.last))))
         ) else (
          (Boolean.andb((Boolean.andb((let temp___standard__accountmanagementsystem_557 = (Temp___standard__accountmanagementsystem_221.temp___standard__accountmanagementsystem_221(temp___standard__accountmanagementsystem_556) (Accountmanagementsystem__updatefootstepspermissions__wearer.wearer) (( -1 ))) in (
           (Array__Int.bool_eq(!Accountmanagementsystem__insurers.insurers) (Measures__userid.first) (Measures__userid.last) (temp___standard__accountmanagementsystem_557) (Measures__userid.first) (Measures__userid.last))))
          ) ((let temp___standard__accountmanagementsystem_559 = (Temp___standard__accountmanagementsystem_228.temp___standard__accountmanagementsystem_228(temp___standard__accountmanagementsystem_558) (Accountmanagementsystem__updatefootstepspermissions__wearer.wearer) ((Boolean.of_int(0)))) in (
           (Array__Int.bool_eq(!Accountmanagementsystem__insurervitalpermission.insurervitalpermission) (Measures__userid.first) (Measures__userid.last) (temp___standard__accountmanagementsystem_559) (Measures__userid.first) (Measures__userid.last))))
          ))) ((let temp___standard__accountmanagementsystem_561 = (Temp___standard__accountmanagementsystem_235.temp___standard__accountmanagementsystem_235(temp___standard__accountmanagementsystem_560) (Accountmanagementsystem__updatefootstepspermissions__wearer.wearer) ((Boolean.of_int(0)))) in (
           (Array__Int.bool_eq(!Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission) (Measures__userid.first) (Measures__userid.last) (temp___standard__accountmanagementsystem_561) (Measures__userid.first) (Measures__userid.last))))
          ))))) else (
         (Boolean.of_int(1)))))))))) end  )))
        )))
       )))
      )))
     )))
    )))
   ) ) )
end

(* Module for checking contracts and absence of run-time errors in subprogram "updatelocationpermissions" defined at accountmanagementsystem.ads:269, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Accountmanagementsystem__updatelocationpermissions__subprogram_def
 use import "int".Int
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        "_gnatprove_standard".Boolean
 use        Array__Int
 use        Measures__userid
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__useruserarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__insurers
 use        Accountmanagementsystem__friends
 use        Accountmanagementsystem__permissionarray
 use        Accountmanagementsystem__friendlocationpermission
 use        Accountmanagementsystem__insurerlocationpermission
 use        Accountmanagementsystem__emergencylocationpermission
 use        Accountmanagementsystem__updatelocationpermissions__wearer
 use        Accountmanagementsystem__updatelocationpermissions__other
 use        Accountmanagementsystem__updatelocationpermissions__allow
 use        Temp___standard__accountmanagementsystem_245
 use        Temp___standard__accountmanagementsystem_252
 use        Temp___standard__accountmanagementsystem_259
 use        Accountmanagementsystem__usersarray__axiom
 use        Accountmanagementsystem__useruserarray__axiom
 use        Accountmanagementsystem__users__axiom
 use        Accountmanagementsystem__insurers__axiom
 use        Accountmanagementsystem__friends__axiom
 use        Accountmanagementsystem__permissionarray__axiom
 use        Accountmanagementsystem__friendlocationpermission__axiom
 use        Accountmanagementsystem__insurerlocationpermission__axiom
 use        Accountmanagementsystem__emergencylocationpermission__axiom
 use        Accountmanagementsystem__updatelocationpermissions__wearer__axiom
 use        Accountmanagementsystem__updatelocationpermissions__other__axiom
 use        Accountmanagementsystem__updatelocationpermissions__allow__axiom
 use        Measures__userid__axiom

 let def "W:diverges:N" "GP_Subp:accountmanagementsystem.ads:269" 
   (__void_param : unit) 
  requires { true }
  ensures { ( "GP_Reason:VC_POSTCONDITION" "keep_on_simp" "GP_Shape:pragargs__if" "GP_Id:32" "GP_Sloc:accountmanagementsystem.ads:275:14" "comment:     Post => (if (Other = Friends(Wearer)) then 
             ^ accountmanagementsystem.ads:275:14:VC_POSTCONDITION" (if ((Accountmanagementsystem__updatelocationpermissions__other.other = (Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__friends.friends Accountmanagementsystem__updatelocationpermissions__wearer.wearer)))) then (
   ( "GP_Pretty_Ada:5379" "GP_Sloc:accountmanagementsystem.ads:276:11" ((let temp___standard__accountmanagementsystem_582 = (Temp___standard__accountmanagementsystem_245.temp___standard__accountmanagementsystem_245 (old !Accountmanagementsystem__friendlocationpermission.friendlocationpermission ) Accountmanagementsystem__updatelocationpermissions__wearer.wearer Accountmanagementsystem__updatelocationpermissions__allow.allow) in (
    (Array__Int.bool_eq !Accountmanagementsystem__friendlocationpermission.friendlocationpermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_582 Measures__userid.first Measures__userid.last)))
    = True) )) else ((if ((Accountmanagementsystem__updatelocationpermissions__other.other = (Measures__userid.to_rep (Array__Int.get !Accountmanagementsystem__insurers.insurers Accountmanagementsystem__updatelocationpermissions__wearer.wearer)))) then (
   ( "GP_Pretty_Ada:5395" "GP_Sloc:accountmanagementsystem.ads:279:11" ((let temp___standard__accountmanagementsystem_583 = (Temp___standard__accountmanagementsystem_252.temp___standard__accountmanagementsystem_252 (old !Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission ) Accountmanagementsystem__updatelocationpermissions__wearer.wearer Accountmanagementsystem__updatelocationpermissions__allow.allow) in (
    (Array__Int.bool_eq !Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_583 Measures__userid.first Measures__userid.last)))
    = True) )) else ((if ((Accountmanagementsystem__updatelocationpermissions__other.other = 0)) then (
   ( "GP_Pretty_Ada:5409" "GP_Sloc:accountmanagementsystem.ads:282:9" ((let temp___standard__accountmanagementsystem_584 = (Temp___standard__accountmanagementsystem_259.temp___standard__accountmanagementsystem_259 (old !Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission ) Accountmanagementsystem__updatelocationpermissions__wearer.wearer Accountmanagementsystem__updatelocationpermissions__allow.allow) in (
    (Array__Int.bool_eq !Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_584 Measures__userid.first Measures__userid.last)))
    = True) )) else (
   ( "GP_Pretty_Ada:8425" "GP_Sloc:accountmanagementsystem.ads:280:67" true ))))))) ) }

   =
  ( ( () (* Assume dynamic property of params of the subprogram accountmanagementsystem.ads:269 *)
  ;
  assume { (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last Accountmanagementsystem__updatelocationpermissions__wearer.wearer) };
  assume { (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last Accountmanagementsystem__updatelocationpermissions__other.other) } );
  ( ( () (* Declarations introduced by the compiler at the beginning of the subprogram accountmanagementsystem.ads:269 *)
  ;
  () (* Check for RTE in the Pre of the subprogram accountmanagementsystem.ads:269 *)
  ;
  abstract ensures {true}(Main.___ignore((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((( -1 ) <= Accountmanagementsystem__updatelocationpermissions__wearer.wearer)) ((Accountmanagementsystem__updatelocationpermissions__wearer.wearer <= 100)))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__updatelocationpermissions__wearer.wearer)))) = (Boolean.to_int((Boolean.of_int(1)))))))) ((Boolean.andb((( -1 ) <= Accountmanagementsystem__updatelocationpermissions__other.other)) ((Accountmanagementsystem__updatelocationpermissions__other.other <= 100)))))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__updatelocationpermissions__other.other)))) = (Boolean.to_int((Boolean.of_int(1))))))))) end ;
  () (* Assume Pre of the subprogram accountmanagementsystem.ads:269 *)
  ;
  assume { ( ( ( ( (( -1 ) <= Accountmanagementsystem__updatelocationpermissions__wearer.wearer) /\ (Accountmanagementsystem__updatelocationpermissions__wearer.wearer <= 100) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users Accountmanagementsystem__updatelocationpermissions__wearer.wearer) = True) <-> true ) ) /\ ( (( -1 ) <= Accountmanagementsystem__updatelocationpermissions__other.other) /\ (Accountmanagementsystem__updatelocationpermissions__other.other <= 100) ) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users Accountmanagementsystem__updatelocationpermissions__other.other) = True) <-> true ) ) } );
  ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission)) end ;
  (let temp___standard__accountmanagementsystem_578 = (any Accountmanagementsystem__permissionarray.permissionarray
  ensures {(result = !Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission)} 
  ) in (
   ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__friendlocationpermission.friendlocationpermission)) end ;
   (let temp___standard__accountmanagementsystem_576 = (any Accountmanagementsystem__permissionarray.permissionarray
   ensures {(result = !Accountmanagementsystem__friendlocationpermission.friendlocationpermission)} 
   ) in (
    ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission)) end ;
    (let temp___standard__accountmanagementsystem_580 = (any Accountmanagementsystem__permissionarray.permissionarray
    ensures {(result = !Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission)} 
    ) in (
     ( () (* Check additional Pres of the subprogram accountmanagementsystem.ads:269 *)
     ;
     () (* Body of the subprogram accountmanagementsystem.ads:269 *)
     ;
     try
      ( ( "GP_Sloc:accountmanagementsystem.adb:238:7" (if ((Boolean.andb(((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__updatelocationpermissions__wearer.wearer)))) = (Boolean.to_int((Boolean.of_int(1)))))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__updatelocationpermissions__other.other)))) = (Boolean.to_int((Boolean.of_int(1)))))))) then (
       ( "GP_Sloc:accountmanagementsystem.adb:240:10" (if (((Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__friends.friends) (Accountmanagementsystem__updatelocationpermissions__wearer.wearer)))) = Accountmanagementsystem__updatelocationpermissions__other.other)) then (
        ( "GP_Sloc:accountmanagementsystem.adb:241:46" Accountmanagementsystem__friendlocationpermission.friendlocationpermission := ( (Array__Int.set(!Accountmanagementsystem__friendlocationpermission.friendlocationpermission) (Accountmanagementsystem__updatelocationpermissions__wearer.wearer) (Accountmanagementsystem__updatelocationpermissions__allow.allow)) ) )) else (
        ( "GP_Sloc:accountmanagementsystem.adb:242:10" (if (((Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__insurers.insurers) (Accountmanagementsystem__updatelocationpermissions__wearer.wearer)))) = Accountmanagementsystem__updatelocationpermissions__other.other)) then (
         ( "GP_Sloc:accountmanagementsystem.adb:243:47" Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission := ( (Array__Int.set(!Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission) (Accountmanagementsystem__updatelocationpermissions__wearer.wearer) (Accountmanagementsystem__updatelocationpermissions__allow.allow)) ) )) else (
         ( "GP_Sloc:accountmanagementsystem.adb:244:10" (if ((Accountmanagementsystem__updatelocationpermissions__other.other = 0)) then (
          ( "GP_Sloc:accountmanagementsystem.adb:245:49" Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission := ( (Array__Int.set(!Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission) (Accountmanagementsystem__updatelocationpermissions__wearer.wearer) (Accountmanagementsystem__updatelocationpermissions__allow.allow)) ) )) else (
          ())) ))) ))) )) else (
       ())) );
      raise Return__exc )
     with
      Return__exc -> ()
     end;
     () (* Check additional Posts and RTE in Post of the subprogram accountmanagementsystem.ads:269 *)
     ;
     abstract ensures {true}(Main.___ignore((if ((Accountmanagementsystem__updatelocationpermissions__other.other = (Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__friends.friends) (Accountmanagementsystem__updatelocationpermissions__wearer.wearer)))))) then (
      (let temp___standard__accountmanagementsystem_577 = (Temp___standard__accountmanagementsystem_245.temp___standard__accountmanagementsystem_245(temp___standard__accountmanagementsystem_576) (Accountmanagementsystem__updatelocationpermissions__wearer.wearer) (Accountmanagementsystem__updatelocationpermissions__allow.allow)) in (
       (Array__Int.bool_eq(!Accountmanagementsystem__friendlocationpermission.friendlocationpermission) (Measures__userid.first) (Measures__userid.last) (temp___standard__accountmanagementsystem_577) (Measures__userid.first) (Measures__userid.last))))
     ) else ((if ((Accountmanagementsystem__updatelocationpermissions__other.other = (Measures__userid.to_rep((Array__Int.get(!Accountmanagementsystem__insurers.insurers) (Accountmanagementsystem__updatelocationpermissions__wearer.wearer)))))) then (
      (let temp___standard__accountmanagementsystem_579 = (Temp___standard__accountmanagementsystem_252.temp___standard__accountmanagementsystem_252(temp___standard__accountmanagementsystem_578) (Accountmanagementsystem__updatelocationpermissions__wearer.wearer) (Accountmanagementsystem__updatelocationpermissions__allow.allow)) in (
       (Array__Int.bool_eq(!Accountmanagementsystem__insurerlocationpermission.insurerlocationpermission) (Measures__userid.first) (Measures__userid.last) (temp___standard__accountmanagementsystem_579) (Measures__userid.first) (Measures__userid.last))))
     ) else ((if ((Accountmanagementsystem__updatelocationpermissions__other.other = 0)) then (
      (let temp___standard__accountmanagementsystem_581 = (Temp___standard__accountmanagementsystem_259.temp___standard__accountmanagementsystem_259(temp___standard__accountmanagementsystem_580) (Accountmanagementsystem__updatelocationpermissions__wearer.wearer) (Accountmanagementsystem__updatelocationpermissions__allow.allow)) in (
       (Array__Int.bool_eq(!Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission) (Measures__userid.first) (Measures__userid.last) (temp___standard__accountmanagementsystem_581) (Measures__userid.first) (Measures__userid.last))))
     ) else (
      (Boolean.of_int(1)))))))))) end  )))
     )))
    )))
   ) ) )
end

(* Module for checking contracts and absence of run-time errors in subprogram "contactemergency" defined at accountmanagementsystem.ads:285, created in Gnat2Why.Subprograms.Generate_VCs_For_Subprogram *)
module Accountmanagementsystem__contactemergency__subprogram_def
 use import "int".Int
 use import "_gnatprove_standard".Main
 use import "int".Int
 use        "_gnatprove_standard".Main
 use        "_gnatprove_standard".Boolean
 use        Standard__integer
 use        Standard__natural
 use        Array__Int
 use        Measures__userid
 use        Measures__bpm
 use        Emergency__contactemergency__axiom
 use        Accountmanagementsystem__usersarray
 use        Accountmanagementsystem__vitalsarray
 use        Accountmanagementsystem__locationsarray
 use        Accountmanagementsystem__users
 use        Accountmanagementsystem__vitals
 use        Accountmanagementsystem__locations
 use        Accountmanagementsystem__permissionarray
 use        Accountmanagementsystem__emergencylocationpermission
 use        Accountmanagementsystem__emergencyvitalpermission
 use        Accountmanagementsystem__emergencyrecord
 use        Accountmanagementsystem__emergencyrecordlist
 use        Accountmanagementsystem__emrecordindex
 use        Accountmanagementsystem__emrecordlist
 use        Accountmanagementsystem__contactemergency__wearer
 use        Accountmanagementsystem__contactemergency__newlocation
 use        Accountmanagementsystem__contactemergency__newvitals
 use        Temp___standard__accountmanagementsystem_269
 use        Temp___standard__accountmanagementsystem_276
 use        Temp___standard__accountmanagementsystem_283
 use        Standard__natural__axiom
 use        Standard__integer__axiom
 use        Accountmanagementsystem__usersarray__axiom
 use        Accountmanagementsystem__vitalsarray__axiom
 use        Accountmanagementsystem__locationsarray__axiom
 use        Accountmanagementsystem__users__axiom
 use        Accountmanagementsystem__vitals__axiom
 use        Accountmanagementsystem__locations__axiom
 use        Accountmanagementsystem__permissionarray__axiom
 use        Accountmanagementsystem__emergencylocationpermission__axiom
 use        Accountmanagementsystem__emergencyvitalpermission__axiom
 use        Accountmanagementsystem__emergencyrecord__axiom
 use        Accountmanagementsystem__emergencyrecordlist__axiom
 use        Accountmanagementsystem__emrecordindex__axiom
 use        Accountmanagementsystem__emrecordlist__axiom
 use        Accountmanagementsystem__contactemergency__wearer__axiom
 use        Accountmanagementsystem__contactemergency__newlocation__axiom
 use        Accountmanagementsystem__contactemergency__newvitals__axiom
 use        Measures__userid__axiom
 use        Measures__bpm__axiom
 use        Measures__latitude__axiom
 use        Measures__longitude__axiom
 use        Measures__gpslocation__axiom
 use        Emergency__contactemergency__axiom

 let def "W:diverges:N" "GP_Subp:accountmanagementsystem.ads:285" 
   (__void_param : unit) 
  requires { true }
  ensures { ( "GP_Reason:VC_POSTCONDITION" "GP_Shape:pragargs__and" "keep_on_simp" "GP_Sloc:accountmanagementsystem.ads:291:14" "GP_Id:34" "comment:     Post => EMRecordIndex = EMRecordIndex'Old + 1 and
             ^ accountmanagementsystem.ads:291:14:VC_POSTCONDITION" ( ( ( ( "GP_Pretty_Ada:5488" "GP_Sloc:accountmanagementsystem.ads:291:14" (!Accountmanagementsystem__emrecordindex.emrecordindex = ((old !Accountmanagementsystem__emrecordindex.emrecordindex ) + 1)) ) /\ ( "GP_Pretty_Ada:5496" "GP_Sloc:accountmanagementsystem.ads:292:6" ((let temp___standard__accountmanagementsystem_598 = (Temp___standard__accountmanagementsystem_269.temp___standard__accountmanagementsystem_269 (old !Accountmanagementsystem__emrecordlist.emrecordlist ) !Accountmanagementsystem__emrecordindex.emrecordindex { Accountmanagementsystem__emergencyrecord.__split_fields = { Accountmanagementsystem__emergencyrecord.rec__user = (Measures__userid.of_rep Accountmanagementsystem__contactemergency__wearer.wearer); Accountmanagementsystem__emergencyrecord.rec__vitals = (Measures__bpm.of_rep Accountmanagementsystem__contactemergency__newvitals.newvitals); Accountmanagementsystem__emergencyrecord.rec__location = Accountmanagementsystem__contactemergency__newlocation.newlocation } }) in (
   (Array__Int.bool_eq !Accountmanagementsystem__emrecordlist.emrecordlist Standard__natural.first Standard__natural.last temp___standard__accountmanagementsystem_598 Standard__natural.first Standard__natural.last)))
   = True) ) ) /\ ( "GP_Pretty_Ada:5511" "GP_Sloc:accountmanagementsystem.ads:294:8" ((let temp___standard__accountmanagementsystem_599 = (Temp___standard__accountmanagementsystem_276.temp___standard__accountmanagementsystem_276 (old !Accountmanagementsystem__vitals.vitals ) Accountmanagementsystem__contactemergency__wearer.wearer Accountmanagementsystem__contactemergency__newvitals.newvitals) in (
   (Array__Int.bool_eq !Accountmanagementsystem__vitals.vitals Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_599 Measures__userid.first Measures__userid.last)))
   = True) ) ) /\ ( "GP_Pretty_Ada:5523" "GP_Sloc:accountmanagementsystem.ads:295:8" ((let temp___standard__accountmanagementsystem_600 = (Temp___standard__accountmanagementsystem_283.temp___standard__accountmanagementsystem_283 (old !Accountmanagementsystem__locations.locations ) Accountmanagementsystem__contactemergency__wearer.wearer Accountmanagementsystem__contactemergency__newlocation.newlocation) in (
   (Array__Int.bool_eq !Accountmanagementsystem__locations.locations Measures__userid.first Measures__userid.last temp___standard__accountmanagementsystem_600 Measures__userid.first Measures__userid.last)))
   = True) ) ) ) }

   =
  ( ( () (* Assume dynamic property of params of the subprogram accountmanagementsystem.ads:285 *)
  ;
  assume { (if ((Standard__natural.first <= Standard__natural.last)) then (
   (Standard__natural.dynamic_property Standard__natural.first Standard__natural.last !Accountmanagementsystem__emrecordindex.emrecordindex)) else true) };
  assume { (Measures__userid.dynamic_property Measures__userid.first Measures__userid.last Accountmanagementsystem__contactemergency__wearer.wearer) };
  assume { (Measures__bpm.dynamic_property Measures__bpm.first Measures__bpm.last Accountmanagementsystem__contactemergency__newvitals.newvitals) } );
  ( ( () (* Declarations introduced by the compiler at the beginning of the subprogram accountmanagementsystem.ads:285 *)
  ;
  () (* Check for RTE in the Pre of the subprogram accountmanagementsystem.ads:285 *)
  ;
  abstract ensures {true}(Main.___ignore((Boolean.andb((Boolean.andb((Boolean.andb((Boolean.andb((( -1 ) <= Accountmanagementsystem__contactemergency__wearer.wearer)) ((Accountmanagementsystem__contactemergency__wearer.wearer <= 100)))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__contactemergency__wearer.wearer)))) = (Boolean.to_int((Boolean.of_int(1)))))))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission) (Accountmanagementsystem__contactemergency__wearer.wearer)))) = (Boolean.to_int((Boolean.of_int(1)))))))) ((!Accountmanagementsystem__emrecordindex.emrecordindex < 2147483647))))) end ;
  () (* Assume Pre of the subprogram accountmanagementsystem.ads:285 *)
  ;
  assume { ( ( ( ( (( -1 ) <= Accountmanagementsystem__contactemergency__wearer.wearer) /\ (Accountmanagementsystem__contactemergency__wearer.wearer <= 100) ) /\ ( ((Array__Int.get !Accountmanagementsystem__users.users Accountmanagementsystem__contactemergency__wearer.wearer) = True) <-> true ) ) /\ ( ((Array__Int.get !Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission Accountmanagementsystem__contactemergency__wearer.wearer) = True) <-> true ) ) /\ (!Accountmanagementsystem__emrecordindex.emrecordindex < 2147483647) ) } );
  ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__vitals.vitals)) end ;
  (let temp___standard__accountmanagementsystem_594 = (any Accountmanagementsystem__vitalsarray.vitalsarray
  ensures {(result = !Accountmanagementsystem__vitals.vitals)} 
  ) in (
   ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__emrecordlist.emrecordlist)) end ;
   (let temp___standard__accountmanagementsystem_592 = (any Accountmanagementsystem__emergencyrecordlist.emergencyrecordlist
   ensures {(result = !Accountmanagementsystem__emrecordlist.emrecordlist)} 
   ) in (
    ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__emrecordindex.emrecordindex)) end ;
    (let temp___standard__accountmanagementsystem_591 = (any Standard__natural.__split
    ensures {(result = !Accountmanagementsystem__emrecordindex.emrecordindex)} 
    ) in (
     ( abstract ensures {true}(Main.___ignore(!Accountmanagementsystem__locations.locations)) end ;
     (let temp___standard__accountmanagementsystem_596 = (any Accountmanagementsystem__locationsarray.locationsarray
     ensures {(result = !Accountmanagementsystem__locations.locations)} 
     ) in (
      ( () (* Check additional Pres of the subprogram accountmanagementsystem.ads:285 *)
      ;
      () (* Body of the subprogram accountmanagementsystem.ads:285 *)
      ;
      try
       ( ( "GP_Sloc:accountmanagementsystem.adb:256:7" (if (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__users.users) (Accountmanagementsystem__contactemergency__wearer.wearer)))) = (Boolean.to_int((Boolean.of_int(1)))))) then (
        ( "GP_Sloc:accountmanagementsystem.adb:257:10" (if ((Boolean.andb(((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__emergencyvitalpermission.emergencyvitalpermission) (Accountmanagementsystem__contactemergency__wearer.wearer)))) = (Boolean.to_int((Boolean.of_int(1)))))) (((Boolean.to_int((Array__Int.get(!Accountmanagementsystem__emergencylocationpermission.emergencylocationpermission) (Accountmanagementsystem__contactemergency__wearer.wearer)))) = (Boolean.to_int((Boolean.of_int(1)))))))) then (
         ( ( "GP_Sloc:accountmanagementsystem.adb:259:22" (Emergency__contactemergency__axiom.contactemergency(Accountmanagementsystem__contactemergency__wearer.wearer) (Accountmanagementsystem__contactemergency__newvitals.newvitals) (Accountmanagementsystem__contactemergency__newlocation.newlocation)) );
         ( "GP_Sloc:accountmanagementsystem.adb:261:27" Accountmanagementsystem__emrecordindex.emrecordindex := ( ( "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Id:35" "GP_Sloc:accountmanagementsystem.adb:261:44" "comment:            EMRecordIndex := EMRecordIndex + 1;
                                           ^ accountmanagementsystem.adb:261:44:VC_OVERFLOW_CHECK" "GP_Shape:if__if__emrecordindex_assign__add" (Standard__integer.range_check_((!Accountmanagementsystem__emrecordindex.emrecordindex + 1))) ) ) );
         ( "GP_Sloc:accountmanagementsystem.adb:262:41" Accountmanagementsystem__emrecordlist.emrecordlist := ( (Array__Int.set(!Accountmanagementsystem__emrecordlist.emrecordlist) (!Accountmanagementsystem__emrecordindex.emrecordindex) ({ Accountmanagementsystem__emergencyrecord.__split_fields = { Accountmanagementsystem__emergencyrecord.rec__user = (Measures__userid.of_rep(Accountmanagementsystem__contactemergency__wearer.wearer)); Accountmanagementsystem__emergencyrecord.rec__vitals = (Measures__bpm.of_rep(Accountmanagementsystem__contactemergency__newvitals.newvitals)); Accountmanagementsystem__emergencyrecord.rec__location = Accountmanagementsystem__contactemergency__newlocation.newlocation } })) ) );
         ( "GP_Sloc:accountmanagementsystem.adb:264:28" Accountmanagementsystem__vitals.vitals := ( (Array__Int.set(!Accountmanagementsystem__vitals.vitals) (Accountmanagementsystem__contactemergency__wearer.wearer) ((Measures__bpm.of_rep(Accountmanagementsystem__contactemergency__newvitals.newvitals)))) ) );
         ( "GP_Sloc:accountmanagementsystem.adb:265:31" Accountmanagementsystem__locations.locations := ( (Array__Int.set(!Accountmanagementsystem__locations.locations) (Accountmanagementsystem__contactemergency__wearer.wearer) (Accountmanagementsystem__contactemergency__newlocation.newlocation)) ) ) )) else (
         ())) )) else (
        ())) );
       raise Return__exc )
      with
       Return__exc -> ()
      end;
      () (* Check additional Posts and RTE in Post of the subprogram accountmanagementsystem.ads:285 *)
      ;
      abstract ensures {true}(Main.___ignore((Boolean.andb((Boolean.andb((Boolean.andb((!Accountmanagementsystem__emrecordindex.emrecordindex = ( "keep_on_simp" "GP_Reason:VC_OVERFLOW_CHECK" "GP_Id:33" "GP_Sloc:accountmanagementsystem.ads:291:48" "comment:     Post => EMRecordIndex = EMRecordIndex'Old + 1 and
                                               ^ accountmanagementsystem.ads:291:48:VC_OVERFLOW_CHECK" "GP_Shape:pragargs__and__and__and__cmp__add" (Standard__integer.range_check_((temp___standard__accountmanagementsystem_591 + 1))) ))) ((let temp___standard__accountmanagementsystem_593 = (Temp___standard__accountmanagementsystem_269.temp___standard__accountmanagementsystem_269(temp___standard__accountmanagementsystem_592) (!Accountmanagementsystem__emrecordindex.emrecordindex) ({ Accountmanagementsystem__emergencyrecord.__split_fields = { Accountmanagementsystem__emergencyrecord.rec__user = (Measures__userid.of_rep(Accountmanagementsystem__contactemergency__wearer.wearer)); Accountmanagementsystem__emergencyrecord.rec__vitals = (Measures__bpm.of_rep(Accountmanagementsystem__contactemergency__newvitals.newvitals)); Accountmanagementsystem__emergencyrecord.rec__location = Accountmanagementsystem__contactemergency__newlocation.newlocation } })) in (
       (Array__Int.bool_eq(!Accountmanagementsystem__emrecordlist.emrecordlist) (Standard__natural.first) (Standard__natural.last) (temp___standard__accountmanagementsystem_593) (Standard__natural.first) (Standard__natural.last))))
      ))) ((let temp___standard__accountmanagementsystem_595 = (Temp___standard__accountmanagementsystem_276.temp___standard__accountmanagementsystem_276(temp___standard__accountmanagementsystem_594) (Accountmanagementsystem__contactemergency__wearer.wearer) (Accountmanagementsystem__contactemergency__newvitals.newvitals)) in (
       (Array__Int.bool_eq(!Accountmanagementsystem__vitals.vitals) (Measures__userid.first) (Measures__userid.last) (temp___standard__accountmanagementsystem_595) (Measures__userid.first) (Measures__userid.last))))
      ))) ((let temp___standard__accountmanagementsystem_597 = (Temp___standard__accountmanagementsystem_283.temp___standard__accountmanagementsystem_283(temp___standard__accountmanagementsystem_596) (Accountmanagementsystem__contactemergency__wearer.wearer) (Accountmanagementsystem__contactemergency__newlocation.newlocation)) in (
       (Array__Int.bool_eq(!Accountmanagementsystem__locations.locations) (Measures__userid.first) (Measures__userid.last) (temp___standard__accountmanagementsystem_597) (Measures__userid.first) (Measures__userid.last))))
      )))) end  )))
      )))
     )))
    )))
   ) ) )
end
